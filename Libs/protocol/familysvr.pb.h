// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: familysvr.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_familysvr_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_familysvr_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_familysvr_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_familysvr_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_familysvr_2eproto;
namespace inner {
class InnerFamilysvr;
struct InnerFamilysvrDefaultTypeInternal;
extern InnerFamilysvrDefaultTypeInternal _InnerFamilysvr_default_instance_;
class InnerFamilysvr_Fromscene_Test;
struct InnerFamilysvr_Fromscene_TestDefaultTypeInternal;
extern InnerFamilysvr_Fromscene_TestDefaultTypeInternal _InnerFamilysvr_Fromscene_Test_default_instance_;
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> ::inner::InnerFamilysvr* Arena::CreateMaybeMessage<::inner::InnerFamilysvr>(Arena*);
template<> ::inner::InnerFamilysvr_Fromscene_Test* Arena::CreateMaybeMessage<::inner::InnerFamilysvr_Fromscene_Test>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace inner {

// ===================================================================

class InnerFamilysvr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerFamilysvr) */ {
 public:
  inline InnerFamilysvr() : InnerFamilysvr(nullptr) {}
  ~InnerFamilysvr() override;
  explicit PROTOBUF_CONSTEXPR InnerFamilysvr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerFamilysvr(const InnerFamilysvr& from);
  InnerFamilysvr(InnerFamilysvr&& from) noexcept
    : InnerFamilysvr() {
    *this = ::std::move(from);
  }

  inline InnerFamilysvr& operator=(const InnerFamilysvr& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerFamilysvr& operator=(InnerFamilysvr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerFamilysvr& default_instance() {
    return *internal_default_instance();
  }
  enum FromsceneCase {
    kFromsceneTest = 101,
    FROMSCENE_NOT_SET = 0,
  };

  static inline const InnerFamilysvr* internal_default_instance() {
    return reinterpret_cast<const InnerFamilysvr*>(
               &_InnerFamilysvr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InnerFamilysvr& a, InnerFamilysvr& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerFamilysvr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerFamilysvr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerFamilysvr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerFamilysvr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerFamilysvr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerFamilysvr& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerFamilysvr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerFamilysvr";
  }
  protected:
  explicit InnerFamilysvr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromuserFieldNumber = 1,
    kFromsceneTestFieldNumber = 101,
  };
  // uint64 fromuser = 1;
  void clear_fromuser();
  uint64_t fromuser() const;
  void set_fromuser(uint64_t value);
  private:
  uint64_t _internal_fromuser() const;
  void _internal_set_fromuser(uint64_t value);
  public:

  // .inner.InnerFamilysvr_Fromscene_Test fromscene_test = 101;
  bool has_fromscene_test() const;
  private:
  bool _internal_has_fromscene_test() const;
  public:
  void clear_fromscene_test();
  const ::inner::InnerFamilysvr_Fromscene_Test& fromscene_test() const;
  PROTOBUF_NODISCARD ::inner::InnerFamilysvr_Fromscene_Test* release_fromscene_test();
  ::inner::InnerFamilysvr_Fromscene_Test* mutable_fromscene_test();
  void set_allocated_fromscene_test(::inner::InnerFamilysvr_Fromscene_Test* fromscene_test);
  private:
  const ::inner::InnerFamilysvr_Fromscene_Test& _internal_fromscene_test() const;
  ::inner::InnerFamilysvr_Fromscene_Test* _internal_mutable_fromscene_test();
  public:
  void unsafe_arena_set_allocated_fromscene_test(
      ::inner::InnerFamilysvr_Fromscene_Test* fromscene_test);
  ::inner::InnerFamilysvr_Fromscene_Test* unsafe_arena_release_fromscene_test();

  void clear_Fromscene();
  FromsceneCase Fromscene_case() const;
  // @@protoc_insertion_point(class_scope:inner.InnerFamilysvr)
 private:
  class _Internal;
  void set_has_fromscene_test();

  inline bool has_Fromscene() const;
  inline void clear_has_Fromscene();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t fromuser_;
  union FromsceneUnion {
    constexpr FromsceneUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::inner::InnerFamilysvr_Fromscene_Test* fromscene_test_;
  } Fromscene_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_familysvr_2eproto;
};
// -------------------------------------------------------------------

class InnerFamilysvr_Fromscene_Test final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:inner.InnerFamilysvr_Fromscene_Test) */ {
 public:
  inline InnerFamilysvr_Fromscene_Test() : InnerFamilysvr_Fromscene_Test(nullptr) {}
  explicit PROTOBUF_CONSTEXPR InnerFamilysvr_Fromscene_Test(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerFamilysvr_Fromscene_Test(const InnerFamilysvr_Fromscene_Test& from);
  InnerFamilysvr_Fromscene_Test(InnerFamilysvr_Fromscene_Test&& from) noexcept
    : InnerFamilysvr_Fromscene_Test() {
    *this = ::std::move(from);
  }

  inline InnerFamilysvr_Fromscene_Test& operator=(const InnerFamilysvr_Fromscene_Test& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerFamilysvr_Fromscene_Test& operator=(InnerFamilysvr_Fromscene_Test&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerFamilysvr_Fromscene_Test& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerFamilysvr_Fromscene_Test* internal_default_instance() {
    return reinterpret_cast<const InnerFamilysvr_Fromscene_Test*>(
               &_InnerFamilysvr_Fromscene_Test_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InnerFamilysvr_Fromscene_Test& a, InnerFamilysvr_Fromscene_Test& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerFamilysvr_Fromscene_Test* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerFamilysvr_Fromscene_Test* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerFamilysvr_Fromscene_Test* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerFamilysvr_Fromscene_Test>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InnerFamilysvr_Fromscene_Test& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InnerFamilysvr_Fromscene_Test& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerFamilysvr_Fromscene_Test";
  }
  protected:
  explicit InnerFamilysvr_Fromscene_Test(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:inner.InnerFamilysvr_Fromscene_Test)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_familysvr_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InnerFamilysvr

// uint64 fromuser = 1;
inline void InnerFamilysvr::clear_fromuser() {
  fromuser_ = uint64_t{0u};
}
inline uint64_t InnerFamilysvr::_internal_fromuser() const {
  return fromuser_;
}
inline uint64_t InnerFamilysvr::fromuser() const {
  // @@protoc_insertion_point(field_get:inner.InnerFamilysvr.fromuser)
  return _internal_fromuser();
}
inline void InnerFamilysvr::_internal_set_fromuser(uint64_t value) {
  
  fromuser_ = value;
}
inline void InnerFamilysvr::set_fromuser(uint64_t value) {
  _internal_set_fromuser(value);
  // @@protoc_insertion_point(field_set:inner.InnerFamilysvr.fromuser)
}

// .inner.InnerFamilysvr_Fromscene_Test fromscene_test = 101;
inline bool InnerFamilysvr::_internal_has_fromscene_test() const {
  return Fromscene_case() == kFromsceneTest;
}
inline bool InnerFamilysvr::has_fromscene_test() const {
  return _internal_has_fromscene_test();
}
inline void InnerFamilysvr::set_has_fromscene_test() {
  _oneof_case_[0] = kFromsceneTest;
}
inline void InnerFamilysvr::clear_fromscene_test() {
  if (_internal_has_fromscene_test()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromscene_.fromscene_test_;
    }
    clear_has_Fromscene();
  }
}
inline ::inner::InnerFamilysvr_Fromscene_Test* InnerFamilysvr::release_fromscene_test() {
  // @@protoc_insertion_point(field_release:inner.InnerFamilysvr.fromscene_test)
  if (_internal_has_fromscene_test()) {
    clear_has_Fromscene();
    ::inner::InnerFamilysvr_Fromscene_Test* temp = Fromscene_.fromscene_test_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromscene_.fromscene_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerFamilysvr_Fromscene_Test& InnerFamilysvr::_internal_fromscene_test() const {
  return _internal_has_fromscene_test()
      ? *Fromscene_.fromscene_test_
      : reinterpret_cast< ::inner::InnerFamilysvr_Fromscene_Test&>(::inner::_InnerFamilysvr_Fromscene_Test_default_instance_);
}
inline const ::inner::InnerFamilysvr_Fromscene_Test& InnerFamilysvr::fromscene_test() const {
  // @@protoc_insertion_point(field_get:inner.InnerFamilysvr.fromscene_test)
  return _internal_fromscene_test();
}
inline ::inner::InnerFamilysvr_Fromscene_Test* InnerFamilysvr::unsafe_arena_release_fromscene_test() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerFamilysvr.fromscene_test)
  if (_internal_has_fromscene_test()) {
    clear_has_Fromscene();
    ::inner::InnerFamilysvr_Fromscene_Test* temp = Fromscene_.fromscene_test_;
    Fromscene_.fromscene_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerFamilysvr::unsafe_arena_set_allocated_fromscene_test(::inner::InnerFamilysvr_Fromscene_Test* fromscene_test) {
  clear_Fromscene();
  if (fromscene_test) {
    set_has_fromscene_test();
    Fromscene_.fromscene_test_ = fromscene_test;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerFamilysvr.fromscene_test)
}
inline ::inner::InnerFamilysvr_Fromscene_Test* InnerFamilysvr::_internal_mutable_fromscene_test() {
  if (!_internal_has_fromscene_test()) {
    clear_Fromscene();
    set_has_fromscene_test();
    Fromscene_.fromscene_test_ = CreateMaybeMessage< ::inner::InnerFamilysvr_Fromscene_Test >(GetArenaForAllocation());
  }
  return Fromscene_.fromscene_test_;
}
inline ::inner::InnerFamilysvr_Fromscene_Test* InnerFamilysvr::mutable_fromscene_test() {
  ::inner::InnerFamilysvr_Fromscene_Test* _msg = _internal_mutable_fromscene_test();
  // @@protoc_insertion_point(field_mutable:inner.InnerFamilysvr.fromscene_test)
  return _msg;
}

inline bool InnerFamilysvr::has_Fromscene() const {
  return Fromscene_case() != FROMSCENE_NOT_SET;
}
inline void InnerFamilysvr::clear_has_Fromscene() {
  _oneof_case_[0] = FROMSCENE_NOT_SET;
}
inline InnerFamilysvr::FromsceneCase InnerFamilysvr::Fromscene_case() const {
  return InnerFamilysvr::FromsceneCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// InnerFamilysvr_Fromscene_Test

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace inner

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_familysvr_2eproto
