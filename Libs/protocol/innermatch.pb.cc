// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: innermatch.proto

#include "innermatch.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace inner {
PROTOBUF_CONSTEXPR InnerMatchMatcher::InnerMatchMatcher(
    ::_pbi::ConstantInitialized)
  : brief_(nullptr)
  , extd_(nullptr)
  , localleaderid_(uint64_t{0u}){}
struct InnerMatchMatcherDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchMatcherDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchMatcherDefaultTypeInternal() {}
  union {
    InnerMatchMatcher _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchMatcherDefaultTypeInternal _InnerMatchMatcher_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchMatchList::InnerMatchMatchList(
    ::_pbi::ConstantInitialized)
  : roleids_()
  , _roleids_cached_byte_size_(0){}
struct InnerMatchMatchListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchMatchListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchMatchListDefaultTypeInternal() {}
  union {
    InnerMatchMatchList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchMatchListDefaultTypeInternal _InnerMatchMatchList_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchPunishList::InnerMatchPunishList(
    ::_pbi::ConstantInitialized)
  : roleids_()
  , _roleids_cached_byte_size_(0){}
struct InnerMatchPunishListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchPunishListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchPunishListDefaultTypeInternal() {}
  union {
    InnerMatchPunishList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchPunishListDefaultTypeInternal _InnerMatchPunishList_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchFighter::InnerMatchFighter(
    ::_pbi::ConstantInitialized)
  : brief_(nullptr)
  , extd_(nullptr)
  , localleaderid_(uint64_t{0u}){}
struct InnerMatchFighterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchFighterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchFighterDefaultTypeInternal() {}
  union {
    InnerMatchFighter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchFighterDefaultTypeInternal _InnerMatchFighter_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchUnit_RolesEntry_DoNotUse::InnerMatchUnit_RolesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct InnerMatchUnit_RolesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchUnit_RolesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchUnit_RolesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InnerMatchUnit_RolesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchUnit_RolesEntry_DoNotUseDefaultTypeInternal _InnerMatchUnit_RolesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchUnit_RobotsEntry_DoNotUse::InnerMatchUnit_RobotsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct InnerMatchUnit_RobotsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchUnit_RobotsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchUnit_RobotsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InnerMatchUnit_RobotsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchUnit_RobotsEntry_DoNotUseDefaultTypeInternal _InnerMatchUnit_RobotsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchUnit::InnerMatchUnit(
    ::_pbi::ConstantInitialized)
  : roles_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , robots_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct InnerMatchUnitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchUnitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchUnitDefaultTypeInternal() {}
  union {
    InnerMatchUnit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchUnitDefaultTypeInternal _InnerMatchUnit_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchGroup_UnitsEntry_DoNotUse::InnerMatchGroup_UnitsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct InnerMatchGroup_UnitsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchGroup_UnitsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchGroup_UnitsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InnerMatchGroup_UnitsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchGroup_UnitsEntry_DoNotUseDefaultTypeInternal _InnerMatchGroup_UnitsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchGroup::InnerMatchGroup(
    ::_pbi::ConstantInitialized)
  : units_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct InnerMatchGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchGroupDefaultTypeInternal() {}
  union {
    InnerMatchGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchGroupDefaultTypeInternal _InnerMatchGroup_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchRoom_GroupsEntry_DoNotUse::InnerMatchRoom_GroupsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct InnerMatchRoom_GroupsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchRoom_GroupsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchRoom_GroupsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InnerMatchRoom_GroupsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchRoom_GroupsEntry_DoNotUseDefaultTypeInternal _InnerMatchRoom_GroupsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchRoom::InnerMatchRoom(
    ::_pbi::ConstantInitialized)
  : groups_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , roomid_(uint64_t{0u})
  , mtype_(0u){}
struct InnerMatchRoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchRoomDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchRoomDefaultTypeInternal() {}
  union {
    InnerMatchRoom _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchRoomDefaultTypeInternal _InnerMatchRoom_default_instance_;
PROTOBUF_CONSTEXPR InnerMatchRoomCopyScene::InnerMatchRoomCopyScene(
    ::_pbi::ConstantInitialized)
  : sceneid_(uint64_t{0u})
  , expire_(0u)
  , hashid_(0u){}
struct InnerMatchRoomCopySceneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerMatchRoomCopySceneDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerMatchRoomCopySceneDefaultTypeInternal() {}
  union {
    InnerMatchRoomCopyScene _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerMatchRoomCopySceneDefaultTypeInternal _InnerMatchRoomCopyScene_default_instance_;
}  // namespace inner
static ::_pb::Metadata file_level_metadata_innermatch_2eproto[12];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_innermatch_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_innermatch_2eproto = nullptr;

const uint32_t TableStruct_innermatch_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchMatcher, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchMatcher, brief_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchMatcher, extd_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchMatcher, localleaderid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchMatchList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchMatchList, roleids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchPunishList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchPunishList, roleids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchFighter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchFighter, brief_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchFighter, extd_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchFighter, localleaderid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RolesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RolesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RolesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RolesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RobotsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RobotsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RobotsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit_RobotsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit, roles_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchUnit, robots_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchGroup_UnitsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchGroup_UnitsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchGroup_UnitsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchGroup_UnitsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchGroup, units_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom_GroupsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom_GroupsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom_GroupsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom_GroupsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom, roomid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom, mtype_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoom, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoomCopyScene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoomCopyScene, expire_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoomCopyScene, sceneid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerMatchRoomCopyScene, hashid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::inner::InnerMatchMatcher)},
  { 9, -1, -1, sizeof(::inner::InnerMatchMatchList)},
  { 16, -1, -1, sizeof(::inner::InnerMatchPunishList)},
  { 23, -1, -1, sizeof(::inner::InnerMatchFighter)},
  { 32, 40, -1, sizeof(::inner::InnerMatchUnit_RolesEntry_DoNotUse)},
  { 42, 50, -1, sizeof(::inner::InnerMatchUnit_RobotsEntry_DoNotUse)},
  { 52, -1, -1, sizeof(::inner::InnerMatchUnit)},
  { 60, 68, -1, sizeof(::inner::InnerMatchGroup_UnitsEntry_DoNotUse)},
  { 70, -1, -1, sizeof(::inner::InnerMatchGroup)},
  { 77, 85, -1, sizeof(::inner::InnerMatchRoom_GroupsEntry_DoNotUse)},
  { 87, -1, -1, sizeof(::inner::InnerMatchRoom)},
  { 96, -1, -1, sizeof(::inner::InnerMatchRoomCopyScene)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::inner::_InnerMatchMatcher_default_instance_._instance,
  &::inner::_InnerMatchMatchList_default_instance_._instance,
  &::inner::_InnerMatchPunishList_default_instance_._instance,
  &::inner::_InnerMatchFighter_default_instance_._instance,
  &::inner::_InnerMatchUnit_RolesEntry_DoNotUse_default_instance_._instance,
  &::inner::_InnerMatchUnit_RobotsEntry_DoNotUse_default_instance_._instance,
  &::inner::_InnerMatchUnit_default_instance_._instance,
  &::inner::_InnerMatchGroup_UnitsEntry_DoNotUse_default_instance_._instance,
  &::inner::_InnerMatchGroup_default_instance_._instance,
  &::inner::_InnerMatchRoom_GroupsEntry_DoNotUse_default_instance_._instance,
  &::inner::_InnerMatchRoom_default_instance_._instance,
  &::inner::_InnerMatchRoomCopyScene_default_instance_._instance,
};

const char descriptor_table_protodef_innermatch_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020innermatch.proto\022\005inner\032\014common.proto\032"
  "\021matchcommon.proto\"v\n\021InnerMatchMatcher\022"
  " \n\005brief\030\001 \001(\0132\021.common.RoleBrief\022(\n\004ext"
  "d\030\002 \001(\0132\032.common.MatchFighterExtend\022\025\n\rl"
  "ocalLeaderId\030\003 \001(\004\"&\n\023InnerMatchMatchLis"
  "t\022\017\n\007roleIds\030\001 \003(\004\"\'\n\024InnerMatchPunishLi"
  "st\022\017\n\007roleIds\030\001 \003(\004\"v\n\021InnerMatchFighter"
  "\022 \n\005brief\030\001 \001(\0132\021.common.RoleBrief\022(\n\004ex"
  "td\030\002 \001(\0132\032.common.MatchFighterExtend\022\025\n\r"
  "localLeaderId\030\004 \001(\004\"\205\002\n\016InnerMatchUnit\022/"
  "\n\005roles\030\001 \003(\0132 .inner.InnerMatchUnit.Rol"
  "esEntry\0221\n\006robots\030\002 \003(\0132!.inner.InnerMat"
  "chUnit.RobotsEntry\032F\n\nRolesEntry\022\013\n\003key\030"
  "\001 \001(\004\022\'\n\005value\030\002 \001(\0132\030.inner.InnerMatchF"
  "ighter:\0028\001\032G\n\013RobotsEntry\022\013\n\003key\030\001 \001(\004\022\'"
  "\n\005value\030\002 \001(\0132\030.inner.InnerMatchFighter:"
  "\0028\001\"\210\001\n\017InnerMatchGroup\0220\n\005units\030\001 \003(\0132!"
  ".inner.InnerMatchGroup.UnitsEntry\032C\n\nUni"
  "tsEntry\022\013\n\003key\030\001 \001(\004\022$\n\005value\030\002 \001(\0132\025.in"
  "ner.InnerMatchUnit:\0028\001\"\251\001\n\016InnerMatchRoo"
  "m\022\016\n\006roomId\030\001 \001(\004\022\r\n\005mType\030\002 \001(\r\0221\n\006grou"
  "ps\030\005 \003(\0132!.inner.InnerMatchRoom.GroupsEn"
  "try\032E\n\013GroupsEntry\022\013\n\003key\030\001 \001(\r\022%\n\005value"
  "\030\002 \001(\0132\026.inner.InnerMatchGroup:\0028\001\"J\n\027In"
  "nerMatchRoomCopyScene\022\016\n\006expire\030\001 \001(\r\022\017\n"
  "\007sceneId\030\002 \001(\004\022\016\n\006hashId\030\003 \001(\rb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_innermatch_2eproto_deps[2] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_matchcommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_innermatch_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_innermatch_2eproto = {
    false, false, 1038, descriptor_table_protodef_innermatch_2eproto,
    "innermatch.proto",
    &descriptor_table_innermatch_2eproto_once, descriptor_table_innermatch_2eproto_deps, 2, 12,
    schemas, file_default_instances, TableStruct_innermatch_2eproto::offsets,
    file_level_metadata_innermatch_2eproto, file_level_enum_descriptors_innermatch_2eproto,
    file_level_service_descriptors_innermatch_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_innermatch_2eproto_getter() {
  return &descriptor_table_innermatch_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_innermatch_2eproto(&descriptor_table_innermatch_2eproto);
namespace inner {

// ===================================================================

class InnerMatchMatcher::_Internal {
 public:
  static const ::common::RoleBrief& brief(const InnerMatchMatcher* msg);
  static const ::common::MatchFighterExtend& extd(const InnerMatchMatcher* msg);
};

const ::common::RoleBrief&
InnerMatchMatcher::_Internal::brief(const InnerMatchMatcher* msg) {
  return *msg->brief_;
}
const ::common::MatchFighterExtend&
InnerMatchMatcher::_Internal::extd(const InnerMatchMatcher* msg) {
  return *msg->extd_;
}
void InnerMatchMatcher::clear_brief() {
  if (GetArenaForAllocation() == nullptr && brief_ != nullptr) {
    delete brief_;
  }
  brief_ = nullptr;
}
void InnerMatchMatcher::clear_extd() {
  if (GetArenaForAllocation() == nullptr && extd_ != nullptr) {
    delete extd_;
  }
  extd_ = nullptr;
}
InnerMatchMatcher::InnerMatchMatcher(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchMatcher)
}
InnerMatchMatcher::InnerMatchMatcher(const InnerMatchMatcher& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_brief()) {
    brief_ = new ::common::RoleBrief(*from.brief_);
  } else {
    brief_ = nullptr;
  }
  if (from._internal_has_extd()) {
    extd_ = new ::common::MatchFighterExtend(*from.extd_);
  } else {
    extd_ = nullptr;
  }
  localleaderid_ = from.localleaderid_;
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchMatcher)
}

inline void InnerMatchMatcher::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&brief_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&localleaderid_) -
    reinterpret_cast<char*>(&brief_)) + sizeof(localleaderid_));
}

InnerMatchMatcher::~InnerMatchMatcher() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchMatcher)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerMatchMatcher::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete brief_;
  if (this != internal_default_instance()) delete extd_;
}

void InnerMatchMatcher::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchMatcher::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchMatcher)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && brief_ != nullptr) {
    delete brief_;
  }
  brief_ = nullptr;
  if (GetArenaForAllocation() == nullptr && extd_ != nullptr) {
    delete extd_;
  }
  extd_ = nullptr;
  localleaderid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchMatcher::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.RoleBrief brief = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_brief(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.MatchFighterExtend extd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extd(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 localLeaderId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          localleaderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchMatcher::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchMatcher)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.RoleBrief brief = 1;
  if (this->_internal_has_brief()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::brief(this),
        _Internal::brief(this).GetCachedSize(), target, stream);
  }

  // .common.MatchFighterExtend extd = 2;
  if (this->_internal_has_extd()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::extd(this),
        _Internal::extd(this).GetCachedSize(), target, stream);
  }

  // uint64 localLeaderId = 3;
  if (this->_internal_localleaderid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_localleaderid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchMatcher)
  return target;
}

size_t InnerMatchMatcher::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchMatcher)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.RoleBrief brief = 1;
  if (this->_internal_has_brief()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *brief_);
  }

  // .common.MatchFighterExtend extd = 2;
  if (this->_internal_has_extd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extd_);
  }

  // uint64 localLeaderId = 3;
  if (this->_internal_localleaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_localleaderid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchMatcher::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchMatcher::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchMatcher::GetClassData() const { return &_class_data_; }

void InnerMatchMatcher::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchMatcher *>(to)->MergeFrom(
      static_cast<const InnerMatchMatcher &>(from));
}


void InnerMatchMatcher::MergeFrom(const InnerMatchMatcher& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchMatcher)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_brief()) {
    _internal_mutable_brief()->::common::RoleBrief::MergeFrom(from._internal_brief());
  }
  if (from._internal_has_extd()) {
    _internal_mutable_extd()->::common::MatchFighterExtend::MergeFrom(from._internal_extd());
  }
  if (from._internal_localleaderid() != 0) {
    _internal_set_localleaderid(from._internal_localleaderid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchMatcher::CopyFrom(const InnerMatchMatcher& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchMatcher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchMatcher::IsInitialized() const {
  return true;
}

void InnerMatchMatcher::InternalSwap(InnerMatchMatcher* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerMatchMatcher, localleaderid_)
      + sizeof(InnerMatchMatcher::localleaderid_)
      - PROTOBUF_FIELD_OFFSET(InnerMatchMatcher, brief_)>(
          reinterpret_cast<char*>(&brief_),
          reinterpret_cast<char*>(&other->brief_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchMatcher::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[0]);
}

// ===================================================================

class InnerMatchMatchList::_Internal {
 public:
};

InnerMatchMatchList::InnerMatchMatchList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roleids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchMatchList)
}
InnerMatchMatchList::InnerMatchMatchList(const InnerMatchMatchList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roleids_(from.roleids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchMatchList)
}

inline void InnerMatchMatchList::SharedCtor() {
}

InnerMatchMatchList::~InnerMatchMatchList() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchMatchList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerMatchMatchList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerMatchMatchList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchMatchList::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchMatchList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchMatchList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 roleIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_roleids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_roleids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchMatchList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchMatchList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    int byte_size = _roleids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_roleids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchMatchList)
  return target;
}

size_t InnerMatchMatchList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchMatchList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->roleids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _roleids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchMatchList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchMatchList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchMatchList::GetClassData() const { return &_class_data_; }

void InnerMatchMatchList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchMatchList *>(to)->MergeFrom(
      static_cast<const InnerMatchMatchList &>(from));
}


void InnerMatchMatchList::MergeFrom(const InnerMatchMatchList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchMatchList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roleids_.MergeFrom(from.roleids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchMatchList::CopyFrom(const InnerMatchMatchList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchMatchList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchMatchList::IsInitialized() const {
  return true;
}

void InnerMatchMatchList::InternalSwap(InnerMatchMatchList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roleids_.InternalSwap(&other->roleids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchMatchList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[1]);
}

// ===================================================================

class InnerMatchPunishList::_Internal {
 public:
};

InnerMatchPunishList::InnerMatchPunishList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roleids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchPunishList)
}
InnerMatchPunishList::InnerMatchPunishList(const InnerMatchPunishList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roleids_(from.roleids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchPunishList)
}

inline void InnerMatchPunishList::SharedCtor() {
}

InnerMatchPunishList::~InnerMatchPunishList() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchPunishList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerMatchPunishList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerMatchPunishList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchPunishList::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchPunishList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchPunishList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 roleIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_roleids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_roleids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchPunishList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchPunishList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    int byte_size = _roleids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_roleids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchPunishList)
  return target;
}

size_t InnerMatchPunishList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchPunishList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->roleids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _roleids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchPunishList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchPunishList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchPunishList::GetClassData() const { return &_class_data_; }

void InnerMatchPunishList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchPunishList *>(to)->MergeFrom(
      static_cast<const InnerMatchPunishList &>(from));
}


void InnerMatchPunishList::MergeFrom(const InnerMatchPunishList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchPunishList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roleids_.MergeFrom(from.roleids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchPunishList::CopyFrom(const InnerMatchPunishList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchPunishList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchPunishList::IsInitialized() const {
  return true;
}

void InnerMatchPunishList::InternalSwap(InnerMatchPunishList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roleids_.InternalSwap(&other->roleids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchPunishList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[2]);
}

// ===================================================================

class InnerMatchFighter::_Internal {
 public:
  static const ::common::RoleBrief& brief(const InnerMatchFighter* msg);
  static const ::common::MatchFighterExtend& extd(const InnerMatchFighter* msg);
};

const ::common::RoleBrief&
InnerMatchFighter::_Internal::brief(const InnerMatchFighter* msg) {
  return *msg->brief_;
}
const ::common::MatchFighterExtend&
InnerMatchFighter::_Internal::extd(const InnerMatchFighter* msg) {
  return *msg->extd_;
}
void InnerMatchFighter::clear_brief() {
  if (GetArenaForAllocation() == nullptr && brief_ != nullptr) {
    delete brief_;
  }
  brief_ = nullptr;
}
void InnerMatchFighter::clear_extd() {
  if (GetArenaForAllocation() == nullptr && extd_ != nullptr) {
    delete extd_;
  }
  extd_ = nullptr;
}
InnerMatchFighter::InnerMatchFighter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchFighter)
}
InnerMatchFighter::InnerMatchFighter(const InnerMatchFighter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_brief()) {
    brief_ = new ::common::RoleBrief(*from.brief_);
  } else {
    brief_ = nullptr;
  }
  if (from._internal_has_extd()) {
    extd_ = new ::common::MatchFighterExtend(*from.extd_);
  } else {
    extd_ = nullptr;
  }
  localleaderid_ = from.localleaderid_;
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchFighter)
}

inline void InnerMatchFighter::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&brief_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&localleaderid_) -
    reinterpret_cast<char*>(&brief_)) + sizeof(localleaderid_));
}

InnerMatchFighter::~InnerMatchFighter() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchFighter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerMatchFighter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete brief_;
  if (this != internal_default_instance()) delete extd_;
}

void InnerMatchFighter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchFighter::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchFighter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && brief_ != nullptr) {
    delete brief_;
  }
  brief_ = nullptr;
  if (GetArenaForAllocation() == nullptr && extd_ != nullptr) {
    delete extd_;
  }
  extd_ = nullptr;
  localleaderid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchFighter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.RoleBrief brief = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_brief(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.MatchFighterExtend extd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extd(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 localLeaderId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          localleaderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchFighter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchFighter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.RoleBrief brief = 1;
  if (this->_internal_has_brief()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::brief(this),
        _Internal::brief(this).GetCachedSize(), target, stream);
  }

  // .common.MatchFighterExtend extd = 2;
  if (this->_internal_has_extd()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::extd(this),
        _Internal::extd(this).GetCachedSize(), target, stream);
  }

  // uint64 localLeaderId = 4;
  if (this->_internal_localleaderid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_localleaderid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchFighter)
  return target;
}

size_t InnerMatchFighter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchFighter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.RoleBrief brief = 1;
  if (this->_internal_has_brief()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *brief_);
  }

  // .common.MatchFighterExtend extd = 2;
  if (this->_internal_has_extd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extd_);
  }

  // uint64 localLeaderId = 4;
  if (this->_internal_localleaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_localleaderid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchFighter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchFighter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchFighter::GetClassData() const { return &_class_data_; }

void InnerMatchFighter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchFighter *>(to)->MergeFrom(
      static_cast<const InnerMatchFighter &>(from));
}


void InnerMatchFighter::MergeFrom(const InnerMatchFighter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchFighter)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_brief()) {
    _internal_mutable_brief()->::common::RoleBrief::MergeFrom(from._internal_brief());
  }
  if (from._internal_has_extd()) {
    _internal_mutable_extd()->::common::MatchFighterExtend::MergeFrom(from._internal_extd());
  }
  if (from._internal_localleaderid() != 0) {
    _internal_set_localleaderid(from._internal_localleaderid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchFighter::CopyFrom(const InnerMatchFighter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchFighter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchFighter::IsInitialized() const {
  return true;
}

void InnerMatchFighter::InternalSwap(InnerMatchFighter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerMatchFighter, localleaderid_)
      + sizeof(InnerMatchFighter::localleaderid_)
      - PROTOBUF_FIELD_OFFSET(InnerMatchFighter, brief_)>(
          reinterpret_cast<char*>(&brief_),
          reinterpret_cast<char*>(&other->brief_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchFighter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[3]);
}

// ===================================================================

InnerMatchUnit_RolesEntry_DoNotUse::InnerMatchUnit_RolesEntry_DoNotUse() {}
InnerMatchUnit_RolesEntry_DoNotUse::InnerMatchUnit_RolesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InnerMatchUnit_RolesEntry_DoNotUse::MergeFrom(const InnerMatchUnit_RolesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchUnit_RolesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[4]);
}

// ===================================================================

InnerMatchUnit_RobotsEntry_DoNotUse::InnerMatchUnit_RobotsEntry_DoNotUse() {}
InnerMatchUnit_RobotsEntry_DoNotUse::InnerMatchUnit_RobotsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InnerMatchUnit_RobotsEntry_DoNotUse::MergeFrom(const InnerMatchUnit_RobotsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchUnit_RobotsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[5]);
}

// ===================================================================

class InnerMatchUnit::_Internal {
 public:
};

InnerMatchUnit::InnerMatchUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roles_(arena),
  robots_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &InnerMatchUnit::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchUnit)
}
InnerMatchUnit::InnerMatchUnit(const InnerMatchUnit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roles_.MergeFrom(from.roles_);
  robots_.MergeFrom(from.robots_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchUnit)
}

inline void InnerMatchUnit::SharedCtor() {
}

InnerMatchUnit::~InnerMatchUnit() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchUnit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void InnerMatchUnit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  roles_.Destruct();
  robots_.Destruct();
}

void InnerMatchUnit::ArenaDtor(void* object) {
  InnerMatchUnit* _this = reinterpret_cast< InnerMatchUnit* >(object);
  _this->roles_.Destruct();
  _this->robots_.Destruct();
}
void InnerMatchUnit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchUnit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  robots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchUnit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<uint64, .inner.InnerMatchFighter> roles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&roles_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint64, .inner.InnerMatchFighter> robots = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&robots_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchUnit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchUnit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .inner.InnerMatchFighter> roles = 1;
  if (!this->_internal_roles().empty()) {
    using MapType = ::_pb::Map<uint64_t, ::inner::InnerMatchFighter>;
    using WireHelper = InnerMatchUnit_RolesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_roles();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint64, .inner.InnerMatchFighter> robots = 2;
  if (!this->_internal_robots().empty()) {
    using MapType = ::_pb::Map<uint64_t, ::inner::InnerMatchFighter>;
    using WireHelper = InnerMatchUnit_RobotsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_robots();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchUnit)
  return target;
}

size_t InnerMatchUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchUnit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, .inner.InnerMatchFighter> roles = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_roles_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, ::inner::InnerMatchFighter >::const_iterator
      it = this->_internal_roles().begin();
      it != this->_internal_roles().end(); ++it) {
    total_size += InnerMatchUnit_RolesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint64, .inner.InnerMatchFighter> robots = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_robots_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, ::inner::InnerMatchFighter >::const_iterator
      it = this->_internal_robots().begin();
      it != this->_internal_robots().end(); ++it) {
    total_size += InnerMatchUnit_RobotsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchUnit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchUnit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchUnit::GetClassData() const { return &_class_data_; }

void InnerMatchUnit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchUnit *>(to)->MergeFrom(
      static_cast<const InnerMatchUnit &>(from));
}


void InnerMatchUnit::MergeFrom(const InnerMatchUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchUnit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  robots_.MergeFrom(from.robots_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchUnit::CopyFrom(const InnerMatchUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchUnit::IsInitialized() const {
  return true;
}

void InnerMatchUnit::InternalSwap(InnerMatchUnit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roles_.InternalSwap(&other->roles_);
  robots_.InternalSwap(&other->robots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchUnit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[6]);
}

// ===================================================================

InnerMatchGroup_UnitsEntry_DoNotUse::InnerMatchGroup_UnitsEntry_DoNotUse() {}
InnerMatchGroup_UnitsEntry_DoNotUse::InnerMatchGroup_UnitsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InnerMatchGroup_UnitsEntry_DoNotUse::MergeFrom(const InnerMatchGroup_UnitsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchGroup_UnitsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[7]);
}

// ===================================================================

class InnerMatchGroup::_Internal {
 public:
};

InnerMatchGroup::InnerMatchGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  units_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &InnerMatchGroup::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchGroup)
}
InnerMatchGroup::InnerMatchGroup(const InnerMatchGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  units_.MergeFrom(from.units_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchGroup)
}

inline void InnerMatchGroup::SharedCtor() {
}

InnerMatchGroup::~InnerMatchGroup() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void InnerMatchGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  units_.Destruct();
}

void InnerMatchGroup::ArenaDtor(void* object) {
  InnerMatchGroup* _this = reinterpret_cast< InnerMatchGroup* >(object);
  _this->units_.Destruct();
}
void InnerMatchGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<uint64, .inner.InnerMatchUnit> units = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&units_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .inner.InnerMatchUnit> units = 1;
  if (!this->_internal_units().empty()) {
    using MapType = ::_pb::Map<uint64_t, ::inner::InnerMatchUnit>;
    using WireHelper = InnerMatchGroup_UnitsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_units();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchGroup)
  return target;
}

size_t InnerMatchGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, .inner.InnerMatchUnit> units = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_units_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, ::inner::InnerMatchUnit >::const_iterator
      it = this->_internal_units().begin();
      it != this->_internal_units().end(); ++it) {
    total_size += InnerMatchGroup_UnitsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchGroup::GetClassData() const { return &_class_data_; }

void InnerMatchGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchGroup *>(to)->MergeFrom(
      static_cast<const InnerMatchGroup &>(from));
}


void InnerMatchGroup::MergeFrom(const InnerMatchGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchGroup)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchGroup::CopyFrom(const InnerMatchGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchGroup::IsInitialized() const {
  return true;
}

void InnerMatchGroup::InternalSwap(InnerMatchGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  units_.InternalSwap(&other->units_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[8]);
}

// ===================================================================

InnerMatchRoom_GroupsEntry_DoNotUse::InnerMatchRoom_GroupsEntry_DoNotUse() {}
InnerMatchRoom_GroupsEntry_DoNotUse::InnerMatchRoom_GroupsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InnerMatchRoom_GroupsEntry_DoNotUse::MergeFrom(const InnerMatchRoom_GroupsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchRoom_GroupsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[9]);
}

// ===================================================================

class InnerMatchRoom::_Internal {
 public:
};

InnerMatchRoom::InnerMatchRoom(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  groups_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &InnerMatchRoom::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchRoom)
}
InnerMatchRoom::InnerMatchRoom(const InnerMatchRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groups_.MergeFrom(from.groups_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(mtype_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchRoom)
}

inline void InnerMatchRoom::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&roomid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(mtype_));
}

InnerMatchRoom::~InnerMatchRoom() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchRoom)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void InnerMatchRoom::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  groups_.Destruct();
}

void InnerMatchRoom::ArenaDtor(void* object) {
  InnerMatchRoom* _this = reinterpret_cast< InnerMatchRoom* >(object);
  _this->groups_.Destruct();
}
void InnerMatchRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchRoom)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtype_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(mtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchRoom::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 mType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .inner.InnerMatchGroup> groups = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&groups_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchRoom::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchRoom)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomId = 1;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomid(), target);
  }

  // uint32 mType = 2;
  if (this->_internal_mtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_mtype(), target);
  }

  // map<uint32, .inner.InnerMatchGroup> groups = 5;
  if (!this->_internal_groups().empty()) {
    using MapType = ::_pb::Map<uint32_t, ::inner::InnerMatchGroup>;
    using WireHelper = InnerMatchRoom_GroupsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_groups();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchRoom)
  return target;
}

size_t InnerMatchRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchRoom)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .inner.InnerMatchGroup> groups = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_groups_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::inner::InnerMatchGroup >::const_iterator
      it = this->_internal_groups().begin();
      it != this->_internal_groups().end(); ++it) {
    total_size += InnerMatchRoom_GroupsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint64 roomId = 1;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  // uint32 mType = 2;
  if (this->_internal_mtype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_mtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchRoom::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchRoom::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchRoom::GetClassData() const { return &_class_data_; }

void InnerMatchRoom::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchRoom *>(to)->MergeFrom(
      static_cast<const InnerMatchRoom &>(from));
}


void InnerMatchRoom::MergeFrom(const InnerMatchRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchRoom)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  if (from._internal_roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from._internal_mtype() != 0) {
    _internal_set_mtype(from._internal_mtype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchRoom::CopyFrom(const InnerMatchRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchRoom::IsInitialized() const {
  return true;
}

void InnerMatchRoom::InternalSwap(InnerMatchRoom* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerMatchRoom, mtype_)
      + sizeof(InnerMatchRoom::mtype_)
      - PROTOBUF_FIELD_OFFSET(InnerMatchRoom, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchRoom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[10]);
}

// ===================================================================

class InnerMatchRoomCopyScene::_Internal {
 public:
};

InnerMatchRoomCopyScene::InnerMatchRoomCopyScene(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerMatchRoomCopyScene)
}
InnerMatchRoomCopyScene::InnerMatchRoomCopyScene(const InnerMatchRoomCopyScene& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&sceneid_, &from.sceneid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hashid_) -
    reinterpret_cast<char*>(&sceneid_)) + sizeof(hashid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerMatchRoomCopyScene)
}

inline void InnerMatchRoomCopyScene::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sceneid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hashid_) -
    reinterpret_cast<char*>(&sceneid_)) + sizeof(hashid_));
}

InnerMatchRoomCopyScene::~InnerMatchRoomCopyScene() {
  // @@protoc_insertion_point(destructor:inner.InnerMatchRoomCopyScene)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerMatchRoomCopyScene::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerMatchRoomCopyScene::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerMatchRoomCopyScene::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerMatchRoomCopyScene)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sceneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hashid_) -
      reinterpret_cast<char*>(&sceneid_)) + sizeof(hashid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerMatchRoomCopyScene::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 expire = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          expire_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 sceneId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          sceneid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 hashId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          hashid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerMatchRoomCopyScene::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerMatchRoomCopyScene)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire = 1;
  if (this->_internal_expire() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_expire(), target);
  }

  // uint64 sceneId = 2;
  if (this->_internal_sceneid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_sceneid(), target);
  }

  // uint32 hashId = 3;
  if (this->_internal_hashid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_hashid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerMatchRoomCopyScene)
  return target;
}

size_t InnerMatchRoomCopyScene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerMatchRoomCopyScene)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sceneId = 2;
  if (this->_internal_sceneid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_sceneid());
  }

  // uint32 expire = 1;
  if (this->_internal_expire() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_expire());
  }

  // uint32 hashId = 3;
  if (this->_internal_hashid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hashid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerMatchRoomCopyScene::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerMatchRoomCopyScene::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerMatchRoomCopyScene::GetClassData() const { return &_class_data_; }

void InnerMatchRoomCopyScene::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerMatchRoomCopyScene *>(to)->MergeFrom(
      static_cast<const InnerMatchRoomCopyScene &>(from));
}


void InnerMatchRoomCopyScene::MergeFrom(const InnerMatchRoomCopyScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerMatchRoomCopyScene)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sceneid() != 0) {
    _internal_set_sceneid(from._internal_sceneid());
  }
  if (from._internal_expire() != 0) {
    _internal_set_expire(from._internal_expire());
  }
  if (from._internal_hashid() != 0) {
    _internal_set_hashid(from._internal_hashid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerMatchRoomCopyScene::CopyFrom(const InnerMatchRoomCopyScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerMatchRoomCopyScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerMatchRoomCopyScene::IsInitialized() const {
  return true;
}

void InnerMatchRoomCopyScene::InternalSwap(InnerMatchRoomCopyScene* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerMatchRoomCopyScene, hashid_)
      + sizeof(InnerMatchRoomCopyScene::hashid_)
      - PROTOBUF_FIELD_OFFSET(InnerMatchRoomCopyScene, sceneid_)>(
          reinterpret_cast<char*>(&sceneid_),
          reinterpret_cast<char*>(&other->sceneid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerMatchRoomCopyScene::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innermatch_2eproto_getter, &descriptor_table_innermatch_2eproto_once,
      file_level_metadata_innermatch_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::inner::InnerMatchMatcher*
Arena::CreateMaybeMessage< ::inner::InnerMatchMatcher >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchMatcher >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchMatchList*
Arena::CreateMaybeMessage< ::inner::InnerMatchMatchList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchMatchList >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchPunishList*
Arena::CreateMaybeMessage< ::inner::InnerMatchPunishList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchPunishList >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchFighter*
Arena::CreateMaybeMessage< ::inner::InnerMatchFighter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchFighter >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchUnit_RolesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inner::InnerMatchUnit_RolesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchUnit_RolesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchUnit_RobotsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inner::InnerMatchUnit_RobotsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchUnit_RobotsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchUnit*
Arena::CreateMaybeMessage< ::inner::InnerMatchUnit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchUnit >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchGroup_UnitsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inner::InnerMatchGroup_UnitsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchGroup_UnitsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchGroup*
Arena::CreateMaybeMessage< ::inner::InnerMatchGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchRoom_GroupsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inner::InnerMatchRoom_GroupsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchRoom_GroupsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchRoom*
Arena::CreateMaybeMessage< ::inner::InnerMatchRoom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerMatchRoomCopyScene*
Arena::CreateMaybeMessage< ::inner::InnerMatchRoomCopyScene >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerMatchRoomCopyScene >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
