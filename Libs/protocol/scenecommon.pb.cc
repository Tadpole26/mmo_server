// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenecommon.proto

#include "scenecommon.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace common {
PROTOBUF_CONSTEXPR ModuleDataByte::ModuleDataByte(
    ::_pbi::ConstantInitialized)
  : data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(0u)
  , total_(0u){}
struct ModuleDataByteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDataByteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDataByteDefaultTypeInternal() {}
  union {
    ModuleDataByte _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDataByteDefaultTypeInternal _ModuleDataByte_default_instance_;
PROTOBUF_CONSTEXPR ModuleScene::ModuleScene(
    ::_pbi::ConstantInitialized)
  : rebirth_(nullptr){}
struct ModuleSceneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleSceneDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleSceneDefaultTypeInternal() {}
  union {
    ModuleScene _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleSceneDefaultTypeInternal _ModuleScene_default_instance_;
PROTOBUF_CONSTEXPR ModuleSceneView::ModuleSceneView(
    ::_pbi::ConstantInitialized)
  : state_(nullptr)
  , postto_(nullptr)
  , bar_(nullptr)
  , effectlist_(nullptr)
  , selectid_(uint64_t{0u})
  , speed_(0u){}
struct ModuleSceneViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleSceneViewDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleSceneViewDefaultTypeInternal() {}
  union {
    ModuleSceneView _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleSceneViewDefaultTypeInternal _ModuleSceneView_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectState::ViewObjectState(
    ::_pbi::ConstantInitialized)
  : statetimebegin_(uint64_t{0u})
  , state_(0u){}
struct ViewObjectStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectStateDefaultTypeInternal() {}
  union {
    ViewObjectState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectStateDefaultTypeInternal _ViewObjectState_default_instance_;
PROTOBUF_CONSTEXPR StaticViewList::StaticViewList(
    ::_pbi::ConstantInitialized)
  : objects_(){}
struct StaticViewListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticViewListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticViewListDefaultTypeInternal() {}
  union {
    StaticViewList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticViewListDefaultTypeInternal _StaticViewList_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectRole::ViewObjectRole(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u})
  , zoneidf_(0u){}
struct ViewObjectRoleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectRoleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectRoleDefaultTypeInternal() {}
  union {
    ViewObjectRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectRoleDefaultTypeInternal _ViewObjectRole_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpc::ViewObjectNpc(
    ::_pbi::ConstantInitialized)
  : state_(nullptr)
  , posto_(nullptr)
  , npcf_(nullptr)
  , npcm_(nullptr)
  , npcc_(nullptr)
  , npcs_(nullptr)
  , npct_(nullptr)
  , npcb_(nullptr)
  , npcr_(nullptr)
  , uid_(0u)
  , type_(0u)
  , tid_(0u){}
struct ViewObjectNpcDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcDefaultTypeInternal() {}
  union {
    ViewObjectNpc _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcDefaultTypeInternal _ViewObjectNpc_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcFunc::ViewObjectNpcFunc(
    ::_pbi::ConstantInitialized){}
struct ViewObjectNpcFuncDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcFuncDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcFuncDefaultTypeInternal() {}
  union {
    ViewObjectNpcFunc _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcFuncDefaultTypeInternal _ViewObjectNpcFunc_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcMonster::ViewObjectNpcMonster(
    ::_pbi::ConstantInitialized)
  : speak_(nullptr)
  , bar_(nullptr)
  , countdown_(nullptr)
  , hatredlist_(nullptr)
  , hp_(0u)
  , hpmax_(0u)
  , selectid_(uint64_t{0u})
  , level_(0u)
  , speed_(0u)
  , mp_(0u)
  , mpmax_(0u)
  , packid_(uint64_t{0u})
  , shield_(0u)
  , erosion_(0u){}
struct ViewObjectNpcMonsterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcMonsterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcMonsterDefaultTypeInternal() {}
  union {
    ViewObjectNpcMonster _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcMonsterDefaultTypeInternal _ViewObjectNpcMonster_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcCollection::ViewObjectNpcCollection(
    ::_pbi::ConstantInitialized)
  : collectstatus_(0u){}
struct ViewObjectNpcCollectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcCollectionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcCollectionDefaultTypeInternal() {}
  union {
    ViewObjectNpcCollection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcCollectionDefaultTypeInternal _ViewObjectNpcCollection_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcSkill::ViewObjectNpcSkill(
    ::_pbi::ConstantInitialized)
  : lasttime_(uint64_t{0u})
  , expre_(uint64_t{0u})
  , speed_(0u){}
struct ViewObjectNpcSkillDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcSkillDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcSkillDefaultTypeInternal() {}
  union {
    ViewObjectNpcSkill _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcSkillDefaultTypeInternal _ViewObjectNpcSkill_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcTrigger::ViewObjectNpcTrigger(
    ::_pbi::ConstantInitialized)
  : instanceid_(uint64_t{0u}){}
struct ViewObjectNpcTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcTriggerDefaultTypeInternal() {}
  union {
    ViewObjectNpcTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcTriggerDefaultTypeInternal _ViewObjectNpcTrigger_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcBlock::ViewObjectNpcBlock(
    ::_pbi::ConstantInitialized)
  : instanceid_(uint64_t{0u}){}
struct ViewObjectNpcBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcBlockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcBlockDefaultTypeInternal() {}
  union {
    ViewObjectNpcBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcBlockDefaultTypeInternal _ViewObjectNpcBlock_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectNpcRegional::ViewObjectNpcRegional(
    ::_pbi::ConstantInitialized)
  : data_(nullptr)
  , instanceid_(uint64_t{0u}){}
struct ViewObjectNpcRegionalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectNpcRegionalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectNpcRegionalDefaultTypeInternal() {}
  union {
    ViewObjectNpcRegional _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectNpcRegionalDefaultTypeInternal _ViewObjectNpcRegional_default_instance_;
PROTOBUF_CONSTEXPR ViewObject::ViewObject(
    ::_pbi::ConstantInitialized)
  : role_(nullptr)
  , npc_(nullptr){}
struct ViewObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectDefaultTypeInternal() {}
  union {
    ViewObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectDefaultTypeInternal _ViewObject_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectList::ViewObjectList(
    ::_pbi::ConstantInitialized)
  : objects_(){}
struct ViewObjectListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectListDefaultTypeInternal() {}
  union {
    ViewObjectList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectListDefaultTypeInternal _ViewObjectList_default_instance_;
PROTOBUF_CONSTEXPR ViewObjectIdList::ViewObjectIdList(
    ::_pbi::ConstantInitialized)
  : uids_()
  , _uids_cached_byte_size_(0){}
struct ViewObjectIdListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewObjectIdListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewObjectIdListDefaultTypeInternal() {}
  union {
    ViewObjectIdList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewObjectIdListDefaultTypeInternal _ViewObjectIdList_default_instance_;
PROTOBUF_CONSTEXPR RebirthInfo::RebirthInfo(
    ::_pbi::ConstantInitialized)
  : canrebirth_(0u)
  , rebornparam_(0u)
  , deathtimes_(0u)
  , userebirthcnt_(0u){}
struct RebirthInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RebirthInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RebirthInfoDefaultTypeInternal() {}
  union {
    RebirthInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RebirthInfoDefaultTypeInternal _RebirthInfo_default_instance_;
PROTOBUF_CONSTEXPR MapMark::MapMark(
    ::_pbi::ConstantInitialized)
  : posto_(nullptr)
  , uid_(0u)
  , type_(0u)
  , tid_(0u)
  , state_(0u){}
struct MapMarkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapMarkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapMarkDefaultTypeInternal() {}
  union {
    MapMark _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapMarkDefaultTypeInternal _MapMark_default_instance_;
PROTOBUF_CONSTEXPR OccupyViewData_OccupyProgress::OccupyViewData_OccupyProgress(
    ::_pbi::ConstantInitialized)
  : campid_(0u)
  , progress_(0u){}
struct OccupyViewData_OccupyProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OccupyViewData_OccupyProgressDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OccupyViewData_OccupyProgressDefaultTypeInternal() {}
  union {
    OccupyViewData_OccupyProgress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OccupyViewData_OccupyProgressDefaultTypeInternal _OccupyViewData_OccupyProgress_default_instance_;
PROTOBUF_CONSTEXPR OccupyViewData::OccupyViewData(
    ::_pbi::ConstantInitialized)
  : progress_(nullptr)
  , occupycampid_(0u){}
struct OccupyViewDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OccupyViewDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OccupyViewDataDefaultTypeInternal() {}
  union {
    OccupyViewData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OccupyViewDataDefaultTypeInternal _OccupyViewData_default_instance_;
PROTOBUF_CONSTEXPR ViewEffect::ViewEffect(
    ::_pbi::ConstantInitialized)
  : effectid_(0u)
  , begintime_(0u){}
struct ViewEffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewEffectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewEffectDefaultTypeInternal() {}
  union {
    ViewEffect _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewEffectDefaultTypeInternal _ViewEffect_default_instance_;
PROTOBUF_CONSTEXPR ViewEffectList::ViewEffectList(
    ::_pbi::ConstantInitialized)
  : effects_(){}
struct ViewEffectListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewEffectListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewEffectListDefaultTypeInternal() {}
  union {
    ViewEffectList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewEffectListDefaultTypeInternal _ViewEffectList_default_instance_;
PROTOBUF_CONSTEXPR ViewSpeed::ViewSpeed(
    ::_pbi::ConstantInitialized)
  : curspeed_(0u)
  , readyspeed_(0u){}
struct ViewSpeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewSpeedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewSpeedDefaultTypeInternal() {}
  union {
    ViewSpeed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewSpeedDefaultTypeInternal _ViewSpeed_default_instance_;
PROTOBUF_CONSTEXPR ViewHitProgress::ViewHitProgress(
    ::_pbi::ConstantInitialized)
  : transformid_(0u)
  , progress_(0u){}
struct ViewHitProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewHitProgressDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewHitProgressDefaultTypeInternal() {}
  union {
    ViewHitProgress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewHitProgressDefaultTypeInternal _ViewHitProgress_default_instance_;
}  // namespace common
static ::_pb::Metadata file_level_metadata_scenecommon_2eproto[25];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_scenecommon_2eproto[5];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_scenecommon_2eproto = nullptr;

const uint32_t TableStruct_scenecommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ModuleDataByte, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ModuleDataByte, type_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleDataByte, total_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleDataByte, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ModuleScene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ModuleScene, rebirth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, state_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, speed_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, postto_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, selectid_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, bar_),
  PROTOBUF_FIELD_OFFSET(::common::ModuleSceneView, effectlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectState, state_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectState, statetimebegin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::StaticViewList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::StaticViewList, objects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectRole, roleid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectRole, zoneidf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, uid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, type_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, tid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, state_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, posto_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npcf_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npcm_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npcc_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npcs_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npct_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npcb_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpc, npcr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcFunc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, hp_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, hpmax_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, level_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, selectid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, speed_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, mp_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, mpmax_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, shield_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, packid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, erosion_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, speak_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, bar_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, countdown_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcMonster, hatredlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcCollection, collectstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcSkill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcSkill, lasttime_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcSkill, expre_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcSkill, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcTrigger, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcBlock, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcRegional, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcRegional, instanceid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectNpcRegional, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObject, role_),
  PROTOBUF_FIELD_OFFSET(::common::ViewObject, npc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectList, objects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectIdList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewObjectIdList, uids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::RebirthInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::RebirthInfo, canrebirth_),
  PROTOBUF_FIELD_OFFSET(::common::RebirthInfo, rebornparam_),
  PROTOBUF_FIELD_OFFSET(::common::RebirthInfo, deathtimes_),
  PROTOBUF_FIELD_OFFSET(::common::RebirthInfo, userebirthcnt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::MapMark, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::MapMark, uid_),
  PROTOBUF_FIELD_OFFSET(::common::MapMark, type_),
  PROTOBUF_FIELD_OFFSET(::common::MapMark, tid_),
  PROTOBUF_FIELD_OFFSET(::common::MapMark, state_),
  PROTOBUF_FIELD_OFFSET(::common::MapMark, posto_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::OccupyViewData_OccupyProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::OccupyViewData_OccupyProgress, campid_),
  PROTOBUF_FIELD_OFFSET(::common::OccupyViewData_OccupyProgress, progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::OccupyViewData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::OccupyViewData, occupycampid_),
  PROTOBUF_FIELD_OFFSET(::common::OccupyViewData, progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewEffect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewEffect, effectid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewEffect, begintime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewEffectList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewEffectList, effects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewSpeed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewSpeed, curspeed_),
  PROTOBUF_FIELD_OFFSET(::common::ViewSpeed, readyspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::ViewHitProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::ViewHitProgress, transformid_),
  PROTOBUF_FIELD_OFFSET(::common::ViewHitProgress, progress_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::common::ModuleDataByte)},
  { 9, -1, -1, sizeof(::common::ModuleScene)},
  { 16, -1, -1, sizeof(::common::ModuleSceneView)},
  { 28, -1, -1, sizeof(::common::ViewObjectState)},
  { 36, -1, -1, sizeof(::common::StaticViewList)},
  { 43, -1, -1, sizeof(::common::ViewObjectRole)},
  { 51, -1, -1, sizeof(::common::ViewObjectNpc)},
  { 69, -1, -1, sizeof(::common::ViewObjectNpcFunc)},
  { 75, -1, -1, sizeof(::common::ViewObjectNpcMonster)},
  { 95, -1, -1, sizeof(::common::ViewObjectNpcCollection)},
  { 102, -1, -1, sizeof(::common::ViewObjectNpcSkill)},
  { 111, -1, -1, sizeof(::common::ViewObjectNpcTrigger)},
  { 118, -1, -1, sizeof(::common::ViewObjectNpcBlock)},
  { 125, -1, -1, sizeof(::common::ViewObjectNpcRegional)},
  { 133, -1, -1, sizeof(::common::ViewObject)},
  { 141, -1, -1, sizeof(::common::ViewObjectList)},
  { 148, -1, -1, sizeof(::common::ViewObjectIdList)},
  { 155, -1, -1, sizeof(::common::RebirthInfo)},
  { 165, -1, -1, sizeof(::common::MapMark)},
  { 176, -1, -1, sizeof(::common::OccupyViewData_OccupyProgress)},
  { 184, -1, -1, sizeof(::common::OccupyViewData)},
  { 192, -1, -1, sizeof(::common::ViewEffect)},
  { 200, -1, -1, sizeof(::common::ViewEffectList)},
  { 207, -1, -1, sizeof(::common::ViewSpeed)},
  { 215, -1, -1, sizeof(::common::ViewHitProgress)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::common::_ModuleDataByte_default_instance_._instance,
  &::common::_ModuleScene_default_instance_._instance,
  &::common::_ModuleSceneView_default_instance_._instance,
  &::common::_ViewObjectState_default_instance_._instance,
  &::common::_StaticViewList_default_instance_._instance,
  &::common::_ViewObjectRole_default_instance_._instance,
  &::common::_ViewObjectNpc_default_instance_._instance,
  &::common::_ViewObjectNpcFunc_default_instance_._instance,
  &::common::_ViewObjectNpcMonster_default_instance_._instance,
  &::common::_ViewObjectNpcCollection_default_instance_._instance,
  &::common::_ViewObjectNpcSkill_default_instance_._instance,
  &::common::_ViewObjectNpcTrigger_default_instance_._instance,
  &::common::_ViewObjectNpcBlock_default_instance_._instance,
  &::common::_ViewObjectNpcRegional_default_instance_._instance,
  &::common::_ViewObject_default_instance_._instance,
  &::common::_ViewObjectList_default_instance_._instance,
  &::common::_ViewObjectIdList_default_instance_._instance,
  &::common::_RebirthInfo_default_instance_._instance,
  &::common::_MapMark_default_instance_._instance,
  &::common::_OccupyViewData_OccupyProgress_default_instance_._instance,
  &::common::_OccupyViewData_default_instance_._instance,
  &::common::_ViewEffect_default_instance_._instance,
  &::common::_ViewEffectList_default_instance_._instance,
  &::common::_ViewSpeed_default_instance_._instance,
  &::common::_ViewHitProgress_default_instance_._instance,
};

const char descriptor_table_protodef_scenecommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021scenecommon.proto\022\006common\032\014common.prot"
  "o\";\n\016ModuleDataByte\022\014\n\004type\030\001 \001(\r\022\r\n\005tot"
  "al\030\002 \001(\r\022\014\n\004data\030\003 \001(\014\"3\n\013ModuleScene\022$\n"
  "\007rebirth\030\001 \001(\0132\023.common.RebirthInfo\"\323\001\n\017"
  "ModuleSceneView\022&\n\005state\030\001 \001(\0132\027.common."
  "ViewObjectState\022\r\n\005speed\030\002 \001(\r\022)\n\006postto"
  "\030\003 \001(\0132\031.common.ClientPosTogether\022\020\n\010sel"
  "ectId\030\004 \001(\004\022 \n\003bar\030\005 \001(\0132\023.common.Progre"
  "ssBar\022*\n\neffectList\030\006 \001(\0132\026.common.ViewE"
  "ffectList\"8\n\017ViewObjectState\022\r\n\005state\030\001 "
  "\001(\r\022\026\n\016stateTimeBegin\030\002 \001(\004\"5\n\016StaticVie"
  "wList\022#\n\007objects\030\001 \003(\0132\022.common.ViewObje"
  "ct\"1\n\016ViewObjectRole\022\016\n\006roleId\030\001 \001(\004\022\017\n\007"
  "zoneIdF\030\002 \001(\r\"\272\003\n\rViewObjectNpc\022\013\n\003uid\030\001"
  " \001(\r\022\014\n\004type\030\002 \001(\r\022\013\n\003tid\030\003 \001(\r\022&\n\005state"
  "\030\004 \001(\0132\027.common.ViewObjectState\022(\n\005posto"
  "\030\005 \001(\0132\031.common.ClientPosTogether\022\'\n\004npc"
  "f\030d \001(\0132\031.common.ViewObjectNpcFunc\022*\n\004np"
  "cm\030e \001(\0132\034.common.ViewObjectNpcMonster\022-"
  "\n\004npcc\030f \001(\0132\037.common.ViewObjectNpcColle"
  "ction\022(\n\004npcs\030g \001(\0132\032.common.ViewObjectN"
  "pcSkill\022*\n\004npct\030h \001(\0132\034.common.ViewObjec"
  "tNpcTrigger\022(\n\004npcb\030i \001(\0132\032.common.ViewO"
  "bjectNpcBlock\022+\n\004npcr\030j \001(\0132\035.common.Vie"
  "wObjectNpcRegional\"\023\n\021ViewObjectNpcFunc\""
  "\310\002\n\024ViewObjectNpcMonster\022\n\n\002hp\030\001 \001(\r\022\r\n\005"
  "hpmax\030\002 \001(\r\022\r\n\005level\030\003 \001(\r\022\020\n\010selectId\030\004"
  " \001(\004\022\r\n\005speed\030\005 \001(\r\022\n\n\002mp\030\006 \001(\r\022\r\n\005mpmax"
  "\030\007 \001(\r\022\016\n\006shield\030\010 \001(\r\022\016\n\006packId\030\t \001(\004\022\017"
  "\n\007erosion\030\n \001(\r\022\037\n\005speak\030\013 \001(\0132\020.common."
  "NpcSpeak\022 \n\003bar\030\014 \001(\0132\023.common.ProgressB"
  "ar\022+\n\tcountdown\030\r \001(\0132\030.common.NpcCountD"
  "ownList\022)\n\nhatredlist\030\016 \001(\0132\025.common.Npc"
  "HatredList\"0\n\027ViewObjectNpcCollection\022\025\n"
  "\rcollectstatus\030\001 \001(\r\"D\n\022ViewObjectNpcSki"
  "ll\022\020\n\010lasttime\030\001 \001(\004\022\r\n\005expre\030\002 \001(\004\022\r\n\005s"
  "peed\030\003 \001(\r\"*\n\024ViewObjectNpcTrigger\022\022\n\nin"
  "stanceid\030\001 \001(\004\"(\n\022ViewObjectNpcBlock\022\022\n\n"
  "instanceid\030\001 \001(\004\"Q\n\025ViewObjectNpcRegiona"
  "l\022\022\n\ninstanceid\030\001 \001(\004\022$\n\004data\030\002 \001(\0132\026.co"
  "mmon.OccupyViewData\"V\n\nViewObject\022$\n\004rol"
  "e\030\001 \001(\0132\026.common.ViewObjectRole\022\"\n\003npc\030\002"
  " \001(\0132\025.common.ViewObjectNpc\"5\n\016ViewObjec"
  "tList\022#\n\007objects\030\001 \003(\0132\022.common.ViewObje"
  "ct\" \n\020ViewObjectIdList\022\014\n\004uids\030\001 \003(\004\"a\n\013"
  "RebirthInfo\022\022\n\ncanRebirth\030\001 \001(\r\022\023\n\013rebor"
  "nParam\030\002 \001(\r\022\022\n\ndeathTimes\030\003 \001(\r\022\025\n\ruseR"
  "ebirthCnt\030\004 \001(\r\"j\n\007MapMark\022\013\n\003uid\030\001 \001(\r\022"
  "\014\n\004type\030\002 \001(\r\022\013\n\003tid\030\003 \001(\r\022\r\n\005state\030\004 \001("
  "\r\022(\n\005posto\030\005 \001(\0132\031.common.ClientPosToget"
  "her\"\223\001\n\016OccupyViewData\022\024\n\014occupyCampId\030\001"
  " \001(\r\0227\n\010progress\030\002 \001(\0132%.common.OccupyVi"
  "ewData.OccupyProgress\0322\n\016OccupyProgress\022"
  "\016\n\006campId\030\001 \001(\r\022\020\n\010progress\030\002 \001(\r\"1\n\nVie"
  "wEffect\022\020\n\010effectId\030\001 \001(\r\022\021\n\tbeginTime\030\002"
  " \001(\r\"5\n\016ViewEffectList\022#\n\007effects\030\001 \003(\0132"
  "\022.common.ViewEffect\"1\n\tViewSpeed\022\020\n\010curS"
  "peed\030\001 \001(\r\022\022\n\nreadySpeed\030\002 \001(\r\"8\n\017ViewHi"
  "tProgress\022\023\n\013transformId\030\001 \001(\r\022\020\n\010progre"
  "ss\030\002 \001(\r*I\n\nenViewType\022\023\n\017enViewType_Rol"
  "e\020\000\022\022\n\016enViewType_Npc\020\001\022\022\n\016enViewType_Ma"
  "x\020\002*\217\002\n\renNpcViewType\022\026\n\022enNpcViewType_N"
  "one\020\000\022\026\n\022enNpcViewType_Func\020\001\022\031\n\025enNpcVi"
  "ewType_Monster\020\002\022\034\n\030enNpcViewType_Collec"
  "tion\020\003\022\027\n\023enNpcViewType_Skill\020\004\022\025\n\021enNpc"
  "ViewType_Pet\020\005\022\031\n\025enNpcViewType_Trigger\020"
  "\006\022\027\n\023enNpcViewType_Block\020\007\022\032\n\026enNpcViewT"
  "ype_Regional\020\010\022\025\n\021enNpcViewType_Max\020\t*\213\002"
  "\n\021enViewObjectState\022\032\n\026enViewObjectState"
  "_None\020\000\022\032\n\026enViewObjectState_Born\020\001\022\034\n\030e"
  "nViewObjectState_Normal\020\002\022!\n\035enViewObjec"
  "tState_Death_Leave\020\003\022 \n\034enViewObjectStat"
  "e_Death_Fall\020\004\022\"\n\036enViewObjectState_Deat"
  "h_Normal\020\005\022\034\n\030enViewObjectState_Hidden\020\006"
  "\022\031\n\025enViewObjectState_Max\020\007*\250\006\n\017enViewFi"
  "eldType\022\026\n\022ViewFieldType_None\020\000\022\034\n\030enVie"
  "wFieldType_NickName\020\001\022\031\n\025enViewFieldType"
  "_Level\020\002\022\034\n\030enViewFieldType_CareerId\020\003\022\032"
  "\n\026enViewFieldType_TeamId\020\004\022\034\n\030enViewFiel"
  "dType_FamilyId\020\005\022\036\n\032enViewFieldType_Fami"
  "lyName\020\006\022!\n\035enViewFieldType_LeaderSceneI"
  "d\020\007\022\026\n\022enViewFieldType_Hp\020\010\022\031\n\025enViewFie"
  "ldType_MaxHp\020\t\022\034\n\030enViewFieldType_Select"
  "Id\020\n\022\034\n\030enViewFieldType_RoleFunc\020\013\022\031\n\025en"
  "ViewFieldType_State\020\014\022\031\n\025enViewFieldType"
  "_Speed\020\r\022\035\n\031enViewFieldType_MPartList\020\016\022"
  "\026\n\022enViewFieldType_Mp\020\017\022\031\n\025enViewFieldTy"
  "pe_MaxMp\020\020\022\032\n\026enViewFieldType_Shield\020\021\022\034"
  "\n\030enViewFieldType_NpcSpeak\020\022\022\037\n\033enViewFi"
  "eldType_ProgressBar\020\023\022\037\n\033enViewFieldType"
  "_FightStatus\020\024\022\035\n\031enViewFieldType_CountD"
  "own\020\025\022\034\n\030enViewFieldType_HeadIcon\020\026\022\035\n\031e"
  "nViewFieldType_HeadFrame\020\027\022\036\n\032enViewFiel"
  "dType_ViewObject\020\030\022!\n\035enViewFieldType_Co"
  "llectStatus\020\031\022\027\n\023enViewFieldType_Max\020\032*\201"
  "\002\n\021enPerformanceType\022\032\n\026enPerformanceTyp"
  "e_None\020\000\022\032\n\026enPerformanceType_Chat\020\001\022\036\n\032"
  "enPerformanceType_CutScene\020\002\022\035\n\031enPerfor"
  "manceType_Chapter\020\003\022\035\n\031enPerformanceType"
  "_Caption\020\004\022\034\n\030enPerformanceType_Dialog\020\005"
  "\022\035\n\031enPerformanceType_Warning\020\006\022\031\n\025enPer"
  "formanceType_Max\020\007b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_scenecommon_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::_pbi::once_flag descriptor_table_scenecommon_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_scenecommon_2eproto = {
    false, false, 4066, descriptor_table_protodef_scenecommon_2eproto,
    "scenecommon.proto",
    &descriptor_table_scenecommon_2eproto_once, descriptor_table_scenecommon_2eproto_deps, 1, 25,
    schemas, file_default_instances, TableStruct_scenecommon_2eproto::offsets,
    file_level_metadata_scenecommon_2eproto, file_level_enum_descriptors_scenecommon_2eproto,
    file_level_service_descriptors_scenecommon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_scenecommon_2eproto_getter() {
  return &descriptor_table_scenecommon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_scenecommon_2eproto(&descriptor_table_scenecommon_2eproto);
namespace common {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enViewType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenecommon_2eproto);
  return file_level_enum_descriptors_scenecommon_2eproto[0];
}
bool enViewType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enNpcViewType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenecommon_2eproto);
  return file_level_enum_descriptors_scenecommon_2eproto[1];
}
bool enNpcViewType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enViewObjectState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenecommon_2eproto);
  return file_level_enum_descriptors_scenecommon_2eproto[2];
}
bool enViewObjectState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enViewFieldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenecommon_2eproto);
  return file_level_enum_descriptors_scenecommon_2eproto[3];
}
bool enViewFieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enPerformanceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenecommon_2eproto);
  return file_level_enum_descriptors_scenecommon_2eproto[4];
}
bool enPerformanceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ModuleDataByte::_Internal {
 public:
};

ModuleDataByte::ModuleDataByte(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ModuleDataByte)
}
ModuleDataByte::ModuleDataByte(const ModuleDataByte& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&type_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:common.ModuleDataByte)
}

inline void ModuleDataByte::SharedCtor() {
data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&type_)) + sizeof(total_));
}

ModuleDataByte::~ModuleDataByte() {
  // @@protoc_insertion_point(destructor:common.ModuleDataByte)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleDataByte::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.Destroy();
}

void ModuleDataByte::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleDataByte::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ModuleDataByte)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&type_)) + sizeof(total_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleDataByte::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 total = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleDataByte::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ModuleDataByte)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_type(), target);
  }

  // uint32 total = 2;
  if (this->_internal_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_total(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ModuleDataByte)
  return target;
}

size_t ModuleDataByte::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ModuleDataByte)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  // uint32 total = 2;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_total());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleDataByte::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleDataByte::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleDataByte::GetClassData() const { return &_class_data_; }

void ModuleDataByte::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleDataByte *>(to)->MergeFrom(
      static_cast<const ModuleDataByte &>(from));
}


void ModuleDataByte::MergeFrom(const ModuleDataByte& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ModuleDataByte)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_total() != 0) {
    _internal_set_total(from._internal_total());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleDataByte::CopyFrom(const ModuleDataByte& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ModuleDataByte)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleDataByte::IsInitialized() const {
  return true;
}

void ModuleDataByte::InternalSwap(ModuleDataByte* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleDataByte, total_)
      + sizeof(ModuleDataByte::total_)
      - PROTOBUF_FIELD_OFFSET(ModuleDataByte, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleDataByte::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[0]);
}

// ===================================================================

class ModuleScene::_Internal {
 public:
  static const ::common::RebirthInfo& rebirth(const ModuleScene* msg);
};

const ::common::RebirthInfo&
ModuleScene::_Internal::rebirth(const ModuleScene* msg) {
  return *msg->rebirth_;
}
ModuleScene::ModuleScene(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ModuleScene)
}
ModuleScene::ModuleScene(const ModuleScene& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rebirth()) {
    rebirth_ = new ::common::RebirthInfo(*from.rebirth_);
  } else {
    rebirth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:common.ModuleScene)
}

inline void ModuleScene::SharedCtor() {
rebirth_ = nullptr;
}

ModuleScene::~ModuleScene() {
  // @@protoc_insertion_point(destructor:common.ModuleScene)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleScene::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete rebirth_;
}

void ModuleScene::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleScene::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ModuleScene)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && rebirth_ != nullptr) {
    delete rebirth_;
  }
  rebirth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleScene::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.RebirthInfo rebirth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_rebirth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleScene::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ModuleScene)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.RebirthInfo rebirth = 1;
  if (this->_internal_has_rebirth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::rebirth(this),
        _Internal::rebirth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ModuleScene)
  return target;
}

size_t ModuleScene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ModuleScene)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.RebirthInfo rebirth = 1;
  if (this->_internal_has_rebirth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rebirth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleScene::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleScene::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleScene::GetClassData() const { return &_class_data_; }

void ModuleScene::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleScene *>(to)->MergeFrom(
      static_cast<const ModuleScene &>(from));
}


void ModuleScene::MergeFrom(const ModuleScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ModuleScene)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_rebirth()) {
    _internal_mutable_rebirth()->::common::RebirthInfo::MergeFrom(from._internal_rebirth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleScene::CopyFrom(const ModuleScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ModuleScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleScene::IsInitialized() const {
  return true;
}

void ModuleScene::InternalSwap(ModuleScene* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(rebirth_, other->rebirth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleScene::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[1]);
}

// ===================================================================

class ModuleSceneView::_Internal {
 public:
  static const ::common::ViewObjectState& state(const ModuleSceneView* msg);
  static const ::common::ClientPosTogether& postto(const ModuleSceneView* msg);
  static const ::common::ProgressBar& bar(const ModuleSceneView* msg);
  static const ::common::ViewEffectList& effectlist(const ModuleSceneView* msg);
};

const ::common::ViewObjectState&
ModuleSceneView::_Internal::state(const ModuleSceneView* msg) {
  return *msg->state_;
}
const ::common::ClientPosTogether&
ModuleSceneView::_Internal::postto(const ModuleSceneView* msg) {
  return *msg->postto_;
}
const ::common::ProgressBar&
ModuleSceneView::_Internal::bar(const ModuleSceneView* msg) {
  return *msg->bar_;
}
const ::common::ViewEffectList&
ModuleSceneView::_Internal::effectlist(const ModuleSceneView* msg) {
  return *msg->effectlist_;
}
void ModuleSceneView::clear_postto() {
  if (GetArenaForAllocation() == nullptr && postto_ != nullptr) {
    delete postto_;
  }
  postto_ = nullptr;
}
void ModuleSceneView::clear_bar() {
  if (GetArenaForAllocation() == nullptr && bar_ != nullptr) {
    delete bar_;
  }
  bar_ = nullptr;
}
ModuleSceneView::ModuleSceneView(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ModuleSceneView)
}
ModuleSceneView::ModuleSceneView(const ModuleSceneView& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new ::common::ViewObjectState(*from.state_);
  } else {
    state_ = nullptr;
  }
  if (from._internal_has_postto()) {
    postto_ = new ::common::ClientPosTogether(*from.postto_);
  } else {
    postto_ = nullptr;
  }
  if (from._internal_has_bar()) {
    bar_ = new ::common::ProgressBar(*from.bar_);
  } else {
    bar_ = nullptr;
  }
  if (from._internal_has_effectlist()) {
    effectlist_ = new ::common::ViewEffectList(*from.effectlist_);
  } else {
    effectlist_ = nullptr;
  }
  ::memcpy(&selectid_, &from.selectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&selectid_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:common.ModuleSceneView)
}

inline void ModuleSceneView::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&state_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&state_)) + sizeof(speed_));
}

ModuleSceneView::~ModuleSceneView() {
  // @@protoc_insertion_point(destructor:common.ModuleSceneView)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleSceneView::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete postto_;
  if (this != internal_default_instance()) delete bar_;
  if (this != internal_default_instance()) delete effectlist_;
}

void ModuleSceneView::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleSceneView::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ModuleSceneView)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  if (GetArenaForAllocation() == nullptr && postto_ != nullptr) {
    delete postto_;
  }
  postto_ = nullptr;
  if (GetArenaForAllocation() == nullptr && bar_ != nullptr) {
    delete bar_;
  }
  bar_ = nullptr;
  if (GetArenaForAllocation() == nullptr && effectlist_ != nullptr) {
    delete effectlist_;
  }
  effectlist_ = nullptr;
  ::memset(&selectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&selectid_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleSceneView::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.ViewObjectState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 speed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ClientPosTogether postto = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_postto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 selectId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          selectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ProgressBar bar = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewEffectList effectList = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_effectlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleSceneView::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ModuleSceneView)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.ViewObjectState state = 1;
  if (this->_internal_has_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  // uint32 speed = 2;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_speed(), target);
  }

  // .common.ClientPosTogether postto = 3;
  if (this->_internal_has_postto()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::postto(this),
        _Internal::postto(this).GetCachedSize(), target, stream);
  }

  // uint64 selectId = 4;
  if (this->_internal_selectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_selectid(), target);
  }

  // .common.ProgressBar bar = 5;
  if (this->_internal_has_bar()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::bar(this),
        _Internal::bar(this).GetCachedSize(), target, stream);
  }

  // .common.ViewEffectList effectList = 6;
  if (this->_internal_has_effectlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::effectlist(this),
        _Internal::effectlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ModuleSceneView)
  return target;
}

size_t ModuleSceneView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ModuleSceneView)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.ViewObjectState state = 1;
  if (this->_internal_has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .common.ClientPosTogether postto = 3;
  if (this->_internal_has_postto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *postto_);
  }

  // .common.ProgressBar bar = 5;
  if (this->_internal_has_bar()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bar_);
  }

  // .common.ViewEffectList effectList = 6;
  if (this->_internal_has_effectlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *effectlist_);
  }

  // uint64 selectId = 4;
  if (this->_internal_selectid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_selectid());
  }

  // uint32 speed = 2;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_speed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleSceneView::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleSceneView::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleSceneView::GetClassData() const { return &_class_data_; }

void ModuleSceneView::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleSceneView *>(to)->MergeFrom(
      static_cast<const ModuleSceneView &>(from));
}


void ModuleSceneView::MergeFrom(const ModuleSceneView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ModuleSceneView)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_state()) {
    _internal_mutable_state()->::common::ViewObjectState::MergeFrom(from._internal_state());
  }
  if (from._internal_has_postto()) {
    _internal_mutable_postto()->::common::ClientPosTogether::MergeFrom(from._internal_postto());
  }
  if (from._internal_has_bar()) {
    _internal_mutable_bar()->::common::ProgressBar::MergeFrom(from._internal_bar());
  }
  if (from._internal_has_effectlist()) {
    _internal_mutable_effectlist()->::common::ViewEffectList::MergeFrom(from._internal_effectlist());
  }
  if (from._internal_selectid() != 0) {
    _internal_set_selectid(from._internal_selectid());
  }
  if (from._internal_speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleSceneView::CopyFrom(const ModuleSceneView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ModuleSceneView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleSceneView::IsInitialized() const {
  return true;
}

void ModuleSceneView::InternalSwap(ModuleSceneView* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleSceneView, speed_)
      + sizeof(ModuleSceneView::speed_)
      - PROTOBUF_FIELD_OFFSET(ModuleSceneView, state_)>(
          reinterpret_cast<char*>(&state_),
          reinterpret_cast<char*>(&other->state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleSceneView::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[2]);
}

// ===================================================================

class ViewObjectState::_Internal {
 public:
};

ViewObjectState::ViewObjectState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectState)
}
ViewObjectState::ViewObjectState(const ViewObjectState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&statetimebegin_, &from.statetimebegin_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&statetimebegin_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectState)
}

inline void ViewObjectState::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&statetimebegin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&statetimebegin_)) + sizeof(state_));
}

ViewObjectState::~ViewObjectState() {
  // @@protoc_insertion_point(destructor:common.ViewObjectState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectState::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&statetimebegin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&statetimebegin_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 stateTimeBegin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          statetimebegin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 state = 1;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_state(), target);
  }

  // uint64 stateTimeBegin = 2;
  if (this->_internal_statetimebegin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_statetimebegin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectState)
  return target;
}

size_t ViewObjectState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 stateTimeBegin = 2;
  if (this->_internal_statetimebegin() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_statetimebegin());
  }

  // uint32 state = 1;
  if (this->_internal_state() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectState::GetClassData() const { return &_class_data_; }

void ViewObjectState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectState *>(to)->MergeFrom(
      static_cast<const ViewObjectState &>(from));
}


void ViewObjectState::MergeFrom(const ViewObjectState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectState)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_statetimebegin() != 0) {
    _internal_set_statetimebegin(from._internal_statetimebegin());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectState::CopyFrom(const ViewObjectState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectState::IsInitialized() const {
  return true;
}

void ViewObjectState::InternalSwap(ViewObjectState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObjectState, state_)
      + sizeof(ViewObjectState::state_)
      - PROTOBUF_FIELD_OFFSET(ViewObjectState, statetimebegin_)>(
          reinterpret_cast<char*>(&statetimebegin_),
          reinterpret_cast<char*>(&other->statetimebegin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[3]);
}

// ===================================================================

class StaticViewList::_Internal {
 public:
};

StaticViewList::StaticViewList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  objects_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.StaticViewList)
}
StaticViewList::StaticViewList(const StaticViewList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.StaticViewList)
}

inline void StaticViewList::SharedCtor() {
}

StaticViewList::~StaticViewList() {
  // @@protoc_insertion_point(destructor:common.StaticViewList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StaticViewList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StaticViewList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StaticViewList::Clear() {
// @@protoc_insertion_point(message_clear_start:common.StaticViewList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StaticViewList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .common.ViewObject objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StaticViewList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.StaticViewList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.ViewObject objects = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_objects_size()); i < n; i++) {
    const auto& repfield = this->_internal_objects(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.StaticViewList)
  return target;
}

size_t StaticViewList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.StaticViewList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .common.ViewObject objects = 1;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StaticViewList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StaticViewList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StaticViewList::GetClassData() const { return &_class_data_; }

void StaticViewList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StaticViewList *>(to)->MergeFrom(
      static_cast<const StaticViewList &>(from));
}


void StaticViewList::MergeFrom(const StaticViewList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.StaticViewList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StaticViewList::CopyFrom(const StaticViewList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.StaticViewList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StaticViewList::IsInitialized() const {
  return true;
}

void StaticViewList::InternalSwap(StaticViewList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  objects_.InternalSwap(&other->objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StaticViewList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[4]);
}

// ===================================================================

class ViewObjectRole::_Internal {
 public:
};

ViewObjectRole::ViewObjectRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectRole)
}
ViewObjectRole::ViewObjectRole(const ViewObjectRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectRole)
}

inline void ViewObjectRole::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&roleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
}

ViewObjectRole::~ViewObjectRole() {
  // @@protoc_insertion_point(destructor:common.ViewObjectRole)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectRole::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectRole)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneidf_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectRole::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 zoneIdF = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          zoneidf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectRole::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectRole)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_zoneidf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectRole)
  return target;
}

size_t ViewObjectRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectRole)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_zoneidf());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectRole::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectRole::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectRole::GetClassData() const { return &_class_data_; }

void ViewObjectRole::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectRole *>(to)->MergeFrom(
      static_cast<const ViewObjectRole &>(from));
}


void ViewObjectRole::MergeFrom(const ViewObjectRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectRole)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_zoneidf() != 0) {
    _internal_set_zoneidf(from._internal_zoneidf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectRole::CopyFrom(const ViewObjectRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectRole::IsInitialized() const {
  return true;
}

void ViewObjectRole::InternalSwap(ViewObjectRole* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObjectRole, zoneidf_)
      + sizeof(ViewObjectRole::zoneidf_)
      - PROTOBUF_FIELD_OFFSET(ViewObjectRole, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectRole::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[5]);
}

// ===================================================================

class ViewObjectNpc::_Internal {
 public:
  static const ::common::ViewObjectState& state(const ViewObjectNpc* msg);
  static const ::common::ClientPosTogether& posto(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcFunc& npcf(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcMonster& npcm(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcCollection& npcc(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcSkill& npcs(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcTrigger& npct(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcBlock& npcb(const ViewObjectNpc* msg);
  static const ::common::ViewObjectNpcRegional& npcr(const ViewObjectNpc* msg);
};

const ::common::ViewObjectState&
ViewObjectNpc::_Internal::state(const ViewObjectNpc* msg) {
  return *msg->state_;
}
const ::common::ClientPosTogether&
ViewObjectNpc::_Internal::posto(const ViewObjectNpc* msg) {
  return *msg->posto_;
}
const ::common::ViewObjectNpcFunc&
ViewObjectNpc::_Internal::npcf(const ViewObjectNpc* msg) {
  return *msg->npcf_;
}
const ::common::ViewObjectNpcMonster&
ViewObjectNpc::_Internal::npcm(const ViewObjectNpc* msg) {
  return *msg->npcm_;
}
const ::common::ViewObjectNpcCollection&
ViewObjectNpc::_Internal::npcc(const ViewObjectNpc* msg) {
  return *msg->npcc_;
}
const ::common::ViewObjectNpcSkill&
ViewObjectNpc::_Internal::npcs(const ViewObjectNpc* msg) {
  return *msg->npcs_;
}
const ::common::ViewObjectNpcTrigger&
ViewObjectNpc::_Internal::npct(const ViewObjectNpc* msg) {
  return *msg->npct_;
}
const ::common::ViewObjectNpcBlock&
ViewObjectNpc::_Internal::npcb(const ViewObjectNpc* msg) {
  return *msg->npcb_;
}
const ::common::ViewObjectNpcRegional&
ViewObjectNpc::_Internal::npcr(const ViewObjectNpc* msg) {
  return *msg->npcr_;
}
void ViewObjectNpc::clear_posto() {
  if (GetArenaForAllocation() == nullptr && posto_ != nullptr) {
    delete posto_;
  }
  posto_ = nullptr;
}
ViewObjectNpc::ViewObjectNpc(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpc)
}
ViewObjectNpc::ViewObjectNpc(const ViewObjectNpc& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new ::common::ViewObjectState(*from.state_);
  } else {
    state_ = nullptr;
  }
  if (from._internal_has_posto()) {
    posto_ = new ::common::ClientPosTogether(*from.posto_);
  } else {
    posto_ = nullptr;
  }
  if (from._internal_has_npcf()) {
    npcf_ = new ::common::ViewObjectNpcFunc(*from.npcf_);
  } else {
    npcf_ = nullptr;
  }
  if (from._internal_has_npcm()) {
    npcm_ = new ::common::ViewObjectNpcMonster(*from.npcm_);
  } else {
    npcm_ = nullptr;
  }
  if (from._internal_has_npcc()) {
    npcc_ = new ::common::ViewObjectNpcCollection(*from.npcc_);
  } else {
    npcc_ = nullptr;
  }
  if (from._internal_has_npcs()) {
    npcs_ = new ::common::ViewObjectNpcSkill(*from.npcs_);
  } else {
    npcs_ = nullptr;
  }
  if (from._internal_has_npct()) {
    npct_ = new ::common::ViewObjectNpcTrigger(*from.npct_);
  } else {
    npct_ = nullptr;
  }
  if (from._internal_has_npcb()) {
    npcb_ = new ::common::ViewObjectNpcBlock(*from.npcb_);
  } else {
    npcb_ = nullptr;
  }
  if (from._internal_has_npcr()) {
    npcr_ = new ::common::ViewObjectNpcRegional(*from.npcr_);
  } else {
    npcr_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tid_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(tid_));
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpc)
}

inline void ViewObjectNpc::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&state_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&tid_) -
    reinterpret_cast<char*>(&state_)) + sizeof(tid_));
}

ViewObjectNpc::~ViewObjectNpc() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpc)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpc::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete posto_;
  if (this != internal_default_instance()) delete npcf_;
  if (this != internal_default_instance()) delete npcm_;
  if (this != internal_default_instance()) delete npcc_;
  if (this != internal_default_instance()) delete npcs_;
  if (this != internal_default_instance()) delete npct_;
  if (this != internal_default_instance()) delete npcb_;
  if (this != internal_default_instance()) delete npcr_;
}

void ViewObjectNpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpc::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpc)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  if (GetArenaForAllocation() == nullptr && posto_ != nullptr) {
    delete posto_;
  }
  posto_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npcf_ != nullptr) {
    delete npcf_;
  }
  npcf_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npcm_ != nullptr) {
    delete npcm_;
  }
  npcm_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npcc_ != nullptr) {
    delete npcc_;
  }
  npcc_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npcs_ != nullptr) {
    delete npcs_;
  }
  npcs_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npct_ != nullptr) {
    delete npct_;
  }
  npct_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npcb_ != nullptr) {
    delete npcb_;
  }
  npcb_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npcr_ != nullptr) {
    delete npcr_;
  }
  npcr_ = nullptr;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tid_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(tid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpc::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 tid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          tid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ClientPosTogether posto = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_posto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcFunc npcf = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_npcf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcMonster npcm = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_npcm(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcCollection npcc = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_npcc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcSkill npcs = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_npcs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcTrigger npct = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_npct(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcBlock npcb = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_npcb(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpcRegional npcr = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_npcr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpc::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpc)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uid(), target);
  }

  // uint32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_type(), target);
  }

  // uint32 tid = 3;
  if (this->_internal_tid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_tid(), target);
  }

  // .common.ViewObjectState state = 4;
  if (this->_internal_has_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  // .common.ClientPosTogether posto = 5;
  if (this->_internal_has_posto()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::posto(this),
        _Internal::posto(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcFunc npcf = 100;
  if (this->_internal_has_npcf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(100, _Internal::npcf(this),
        _Internal::npcf(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcMonster npcm = 101;
  if (this->_internal_has_npcm()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::npcm(this),
        _Internal::npcm(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcCollection npcc = 102;
  if (this->_internal_has_npcc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(102, _Internal::npcc(this),
        _Internal::npcc(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcSkill npcs = 103;
  if (this->_internal_has_npcs()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(103, _Internal::npcs(this),
        _Internal::npcs(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcTrigger npct = 104;
  if (this->_internal_has_npct()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(104, _Internal::npct(this),
        _Internal::npct(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcBlock npcb = 105;
  if (this->_internal_has_npcb()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(105, _Internal::npcb(this),
        _Internal::npcb(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpcRegional npcr = 106;
  if (this->_internal_has_npcr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(106, _Internal::npcr(this),
        _Internal::npcr(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpc)
  return target;
}

size_t ViewObjectNpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpc)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.ViewObjectState state = 4;
  if (this->_internal_has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .common.ClientPosTogether posto = 5;
  if (this->_internal_has_posto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *posto_);
  }

  // .common.ViewObjectNpcFunc npcf = 100;
  if (this->_internal_has_npcf()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npcf_);
  }

  // .common.ViewObjectNpcMonster npcm = 101;
  if (this->_internal_has_npcm()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npcm_);
  }

  // .common.ViewObjectNpcCollection npcc = 102;
  if (this->_internal_has_npcc()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npcc_);
  }

  // .common.ViewObjectNpcSkill npcs = 103;
  if (this->_internal_has_npcs()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npcs_);
  }

  // .common.ViewObjectNpcTrigger npct = 104;
  if (this->_internal_has_npct()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npct_);
  }

  // .common.ViewObjectNpcBlock npcb = 105;
  if (this->_internal_has_npcb()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npcb_);
  }

  // .common.ViewObjectNpcRegional npcr = 106;
  if (this->_internal_has_npcr()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npcr_);
  }

  // uint32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uid());
  }

  // uint32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  // uint32 tid = 3;
  if (this->_internal_tid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_tid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpc::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpc::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpc::GetClassData() const { return &_class_data_; }

void ViewObjectNpc::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpc *>(to)->MergeFrom(
      static_cast<const ViewObjectNpc &>(from));
}


void ViewObjectNpc::MergeFrom(const ViewObjectNpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpc)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_state()) {
    _internal_mutable_state()->::common::ViewObjectState::MergeFrom(from._internal_state());
  }
  if (from._internal_has_posto()) {
    _internal_mutable_posto()->::common::ClientPosTogether::MergeFrom(from._internal_posto());
  }
  if (from._internal_has_npcf()) {
    _internal_mutable_npcf()->::common::ViewObjectNpcFunc::MergeFrom(from._internal_npcf());
  }
  if (from._internal_has_npcm()) {
    _internal_mutable_npcm()->::common::ViewObjectNpcMonster::MergeFrom(from._internal_npcm());
  }
  if (from._internal_has_npcc()) {
    _internal_mutable_npcc()->::common::ViewObjectNpcCollection::MergeFrom(from._internal_npcc());
  }
  if (from._internal_has_npcs()) {
    _internal_mutable_npcs()->::common::ViewObjectNpcSkill::MergeFrom(from._internal_npcs());
  }
  if (from._internal_has_npct()) {
    _internal_mutable_npct()->::common::ViewObjectNpcTrigger::MergeFrom(from._internal_npct());
  }
  if (from._internal_has_npcb()) {
    _internal_mutable_npcb()->::common::ViewObjectNpcBlock::MergeFrom(from._internal_npcb());
  }
  if (from._internal_has_npcr()) {
    _internal_mutable_npcr()->::common::ViewObjectNpcRegional::MergeFrom(from._internal_npcr());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_tid() != 0) {
    _internal_set_tid(from._internal_tid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpc::CopyFrom(const ViewObjectNpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpc::IsInitialized() const {
  return true;
}

void ViewObjectNpc::InternalSwap(ViewObjectNpc* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObjectNpc, tid_)
      + sizeof(ViewObjectNpc::tid_)
      - PROTOBUF_FIELD_OFFSET(ViewObjectNpc, state_)>(
          reinterpret_cast<char*>(&state_),
          reinterpret_cast<char*>(&other->state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpc::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[6]);
}

// ===================================================================

class ViewObjectNpcFunc::_Internal {
 public:
};

ViewObjectNpcFunc::ViewObjectNpcFunc(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcFunc)
}
ViewObjectNpcFunc::ViewObjectNpcFunc(const ViewObjectNpcFunc& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcFunc)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcFunc::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcFunc::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcFunc::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[7]);
}

// ===================================================================

class ViewObjectNpcMonster::_Internal {
 public:
  static const ::common::NpcSpeak& speak(const ViewObjectNpcMonster* msg);
  static const ::common::ProgressBar& bar(const ViewObjectNpcMonster* msg);
  static const ::common::NpcCountDownList& countdown(const ViewObjectNpcMonster* msg);
  static const ::common::NpcHatredList& hatredlist(const ViewObjectNpcMonster* msg);
};

const ::common::NpcSpeak&
ViewObjectNpcMonster::_Internal::speak(const ViewObjectNpcMonster* msg) {
  return *msg->speak_;
}
const ::common::ProgressBar&
ViewObjectNpcMonster::_Internal::bar(const ViewObjectNpcMonster* msg) {
  return *msg->bar_;
}
const ::common::NpcCountDownList&
ViewObjectNpcMonster::_Internal::countdown(const ViewObjectNpcMonster* msg) {
  return *msg->countdown_;
}
const ::common::NpcHatredList&
ViewObjectNpcMonster::_Internal::hatredlist(const ViewObjectNpcMonster* msg) {
  return *msg->hatredlist_;
}
void ViewObjectNpcMonster::clear_speak() {
  if (GetArenaForAllocation() == nullptr && speak_ != nullptr) {
    delete speak_;
  }
  speak_ = nullptr;
}
void ViewObjectNpcMonster::clear_bar() {
  if (GetArenaForAllocation() == nullptr && bar_ != nullptr) {
    delete bar_;
  }
  bar_ = nullptr;
}
void ViewObjectNpcMonster::clear_countdown() {
  if (GetArenaForAllocation() == nullptr && countdown_ != nullptr) {
    delete countdown_;
  }
  countdown_ = nullptr;
}
void ViewObjectNpcMonster::clear_hatredlist() {
  if (GetArenaForAllocation() == nullptr && hatredlist_ != nullptr) {
    delete hatredlist_;
  }
  hatredlist_ = nullptr;
}
ViewObjectNpcMonster::ViewObjectNpcMonster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcMonster)
}
ViewObjectNpcMonster::ViewObjectNpcMonster(const ViewObjectNpcMonster& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_speak()) {
    speak_ = new ::common::NpcSpeak(*from.speak_);
  } else {
    speak_ = nullptr;
  }
  if (from._internal_has_bar()) {
    bar_ = new ::common::ProgressBar(*from.bar_);
  } else {
    bar_ = nullptr;
  }
  if (from._internal_has_countdown()) {
    countdown_ = new ::common::NpcCountDownList(*from.countdown_);
  } else {
    countdown_ = nullptr;
  }
  if (from._internal_has_hatredlist()) {
    hatredlist_ = new ::common::NpcHatredList(*from.hatredlist_);
  } else {
    hatredlist_ = nullptr;
  }
  ::memcpy(&hp_, &from.hp_,
    static_cast<size_t>(reinterpret_cast<char*>(&erosion_) -
    reinterpret_cast<char*>(&hp_)) + sizeof(erosion_));
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcMonster)
}

inline void ViewObjectNpcMonster::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&speak_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&erosion_) -
    reinterpret_cast<char*>(&speak_)) + sizeof(erosion_));
}

ViewObjectNpcMonster::~ViewObjectNpcMonster() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpcMonster)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpcMonster::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete speak_;
  if (this != internal_default_instance()) delete bar_;
  if (this != internal_default_instance()) delete countdown_;
  if (this != internal_default_instance()) delete hatredlist_;
}

void ViewObjectNpcMonster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpcMonster::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpcMonster)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && speak_ != nullptr) {
    delete speak_;
  }
  speak_ = nullptr;
  if (GetArenaForAllocation() == nullptr && bar_ != nullptr) {
    delete bar_;
  }
  bar_ = nullptr;
  if (GetArenaForAllocation() == nullptr && countdown_ != nullptr) {
    delete countdown_;
  }
  countdown_ = nullptr;
  if (GetArenaForAllocation() == nullptr && hatredlist_ != nullptr) {
    delete hatredlist_;
  }
  hatredlist_ = nullptr;
  ::memset(&hp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&erosion_) -
      reinterpret_cast<char*>(&hp_)) + sizeof(erosion_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpcMonster::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 hp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 hpmax = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          hpmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 selectId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          selectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 speed = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 mp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 mpmax = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          mpmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 shield = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          shield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 packId = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          packid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 erosion = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          erosion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.NpcSpeak speak = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_speak(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ProgressBar bar = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.NpcCountDownList countdown = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_countdown(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.NpcHatredList hatredlist = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_hatredlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpcMonster::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpcMonster)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hp = 1;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hp(), target);
  }

  // uint32 hpmax = 2;
  if (this->_internal_hpmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hpmax(), target);
  }

  // uint32 level = 3;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_level(), target);
  }

  // uint64 selectId = 4;
  if (this->_internal_selectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_selectid(), target);
  }

  // uint32 speed = 5;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_speed(), target);
  }

  // uint32 mp = 6;
  if (this->_internal_mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_mp(), target);
  }

  // uint32 mpmax = 7;
  if (this->_internal_mpmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_mpmax(), target);
  }

  // uint32 shield = 8;
  if (this->_internal_shield() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_shield(), target);
  }

  // uint64 packId = 9;
  if (this->_internal_packid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(9, this->_internal_packid(), target);
  }

  // uint32 erosion = 10;
  if (this->_internal_erosion() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(10, this->_internal_erosion(), target);
  }

  // .common.NpcSpeak speak = 11;
  if (this->_internal_has_speak()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::speak(this),
        _Internal::speak(this).GetCachedSize(), target, stream);
  }

  // .common.ProgressBar bar = 12;
  if (this->_internal_has_bar()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::bar(this),
        _Internal::bar(this).GetCachedSize(), target, stream);
  }

  // .common.NpcCountDownList countdown = 13;
  if (this->_internal_has_countdown()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::countdown(this),
        _Internal::countdown(this).GetCachedSize(), target, stream);
  }

  // .common.NpcHatredList hatredlist = 14;
  if (this->_internal_has_hatredlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::hatredlist(this),
        _Internal::hatredlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpcMonster)
  return target;
}

size_t ViewObjectNpcMonster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpcMonster)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.NpcSpeak speak = 11;
  if (this->_internal_has_speak()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *speak_);
  }

  // .common.ProgressBar bar = 12;
  if (this->_internal_has_bar()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bar_);
  }

  // .common.NpcCountDownList countdown = 13;
  if (this->_internal_has_countdown()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *countdown_);
  }

  // .common.NpcHatredList hatredlist = 14;
  if (this->_internal_has_hatredlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hatredlist_);
  }

  // uint32 hp = 1;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hp());
  }

  // uint32 hpmax = 2;
  if (this->_internal_hpmax() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hpmax());
  }

  // uint64 selectId = 4;
  if (this->_internal_selectid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_selectid());
  }

  // uint32 level = 3;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_level());
  }

  // uint32 speed = 5;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_speed());
  }

  // uint32 mp = 6;
  if (this->_internal_mp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_mp());
  }

  // uint32 mpmax = 7;
  if (this->_internal_mpmax() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_mpmax());
  }

  // uint64 packId = 9;
  if (this->_internal_packid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_packid());
  }

  // uint32 shield = 8;
  if (this->_internal_shield() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_shield());
  }

  // uint32 erosion = 10;
  if (this->_internal_erosion() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_erosion());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcMonster::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpcMonster::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcMonster::GetClassData() const { return &_class_data_; }

void ViewObjectNpcMonster::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpcMonster *>(to)->MergeFrom(
      static_cast<const ViewObjectNpcMonster &>(from));
}


void ViewObjectNpcMonster::MergeFrom(const ViewObjectNpcMonster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpcMonster)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_speak()) {
    _internal_mutable_speak()->::common::NpcSpeak::MergeFrom(from._internal_speak());
  }
  if (from._internal_has_bar()) {
    _internal_mutable_bar()->::common::ProgressBar::MergeFrom(from._internal_bar());
  }
  if (from._internal_has_countdown()) {
    _internal_mutable_countdown()->::common::NpcCountDownList::MergeFrom(from._internal_countdown());
  }
  if (from._internal_has_hatredlist()) {
    _internal_mutable_hatredlist()->::common::NpcHatredList::MergeFrom(from._internal_hatredlist());
  }
  if (from._internal_hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from._internal_hpmax() != 0) {
    _internal_set_hpmax(from._internal_hpmax());
  }
  if (from._internal_selectid() != 0) {
    _internal_set_selectid(from._internal_selectid());
  }
  if (from._internal_level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from._internal_speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (from._internal_mp() != 0) {
    _internal_set_mp(from._internal_mp());
  }
  if (from._internal_mpmax() != 0) {
    _internal_set_mpmax(from._internal_mpmax());
  }
  if (from._internal_packid() != 0) {
    _internal_set_packid(from._internal_packid());
  }
  if (from._internal_shield() != 0) {
    _internal_set_shield(from._internal_shield());
  }
  if (from._internal_erosion() != 0) {
    _internal_set_erosion(from._internal_erosion());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpcMonster::CopyFrom(const ViewObjectNpcMonster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpcMonster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpcMonster::IsInitialized() const {
  return true;
}

void ViewObjectNpcMonster::InternalSwap(ViewObjectNpcMonster* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObjectNpcMonster, erosion_)
      + sizeof(ViewObjectNpcMonster::erosion_)
      - PROTOBUF_FIELD_OFFSET(ViewObjectNpcMonster, speak_)>(
          reinterpret_cast<char*>(&speak_),
          reinterpret_cast<char*>(&other->speak_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcMonster::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[8]);
}

// ===================================================================

class ViewObjectNpcCollection::_Internal {
 public:
};

ViewObjectNpcCollection::ViewObjectNpcCollection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcCollection)
}
ViewObjectNpcCollection::ViewObjectNpcCollection(const ViewObjectNpcCollection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  collectstatus_ = from.collectstatus_;
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcCollection)
}

inline void ViewObjectNpcCollection::SharedCtor() {
collectstatus_ = 0u;
}

ViewObjectNpcCollection::~ViewObjectNpcCollection() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpcCollection)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpcCollection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectNpcCollection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpcCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpcCollection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collectstatus_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpcCollection::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 collectstatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          collectstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpcCollection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpcCollection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 collectstatus = 1;
  if (this->_internal_collectstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_collectstatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpcCollection)
  return target;
}

size_t ViewObjectNpcCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpcCollection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 collectstatus = 1;
  if (this->_internal_collectstatus() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_collectstatus());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcCollection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpcCollection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcCollection::GetClassData() const { return &_class_data_; }

void ViewObjectNpcCollection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpcCollection *>(to)->MergeFrom(
      static_cast<const ViewObjectNpcCollection &>(from));
}


void ViewObjectNpcCollection::MergeFrom(const ViewObjectNpcCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpcCollection)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_collectstatus() != 0) {
    _internal_set_collectstatus(from._internal_collectstatus());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpcCollection::CopyFrom(const ViewObjectNpcCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpcCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpcCollection::IsInitialized() const {
  return true;
}

void ViewObjectNpcCollection::InternalSwap(ViewObjectNpcCollection* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(collectstatus_, other->collectstatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcCollection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[9]);
}

// ===================================================================

class ViewObjectNpcSkill::_Internal {
 public:
};

ViewObjectNpcSkill::ViewObjectNpcSkill(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcSkill)
}
ViewObjectNpcSkill::ViewObjectNpcSkill(const ViewObjectNpcSkill& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lasttime_, &from.lasttime_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&lasttime_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcSkill)
}

inline void ViewObjectNpcSkill::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lasttime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&lasttime_)) + sizeof(speed_));
}

ViewObjectNpcSkill::~ViewObjectNpcSkill() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpcSkill)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpcSkill::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectNpcSkill::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpcSkill::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpcSkill)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lasttime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&lasttime_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpcSkill::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 lasttime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 expre = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          expre_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpcSkill::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpcSkill)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lasttime = 1;
  if (this->_internal_lasttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lasttime(), target);
  }

  // uint64 expre = 2;
  if (this->_internal_expre() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_expre(), target);
  }

  // uint32 speed = 3;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpcSkill)
  return target;
}

size_t ViewObjectNpcSkill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpcSkill)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 lasttime = 1;
  if (this->_internal_lasttime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lasttime());
  }

  // uint64 expre = 2;
  if (this->_internal_expre() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_expre());
  }

  // uint32 speed = 3;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_speed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcSkill::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpcSkill::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcSkill::GetClassData() const { return &_class_data_; }

void ViewObjectNpcSkill::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpcSkill *>(to)->MergeFrom(
      static_cast<const ViewObjectNpcSkill &>(from));
}


void ViewObjectNpcSkill::MergeFrom(const ViewObjectNpcSkill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpcSkill)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lasttime() != 0) {
    _internal_set_lasttime(from._internal_lasttime());
  }
  if (from._internal_expre() != 0) {
    _internal_set_expre(from._internal_expre());
  }
  if (from._internal_speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpcSkill::CopyFrom(const ViewObjectNpcSkill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpcSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpcSkill::IsInitialized() const {
  return true;
}

void ViewObjectNpcSkill::InternalSwap(ViewObjectNpcSkill* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObjectNpcSkill, speed_)
      + sizeof(ViewObjectNpcSkill::speed_)
      - PROTOBUF_FIELD_OFFSET(ViewObjectNpcSkill, lasttime_)>(
          reinterpret_cast<char*>(&lasttime_),
          reinterpret_cast<char*>(&other->lasttime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcSkill::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[10]);
}

// ===================================================================

class ViewObjectNpcTrigger::_Internal {
 public:
};

ViewObjectNpcTrigger::ViewObjectNpcTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcTrigger)
}
ViewObjectNpcTrigger::ViewObjectNpcTrigger(const ViewObjectNpcTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instanceid_ = from.instanceid_;
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcTrigger)
}

inline void ViewObjectNpcTrigger::SharedCtor() {
instanceid_ = uint64_t{0u};
}

ViewObjectNpcTrigger::~ViewObjectNpcTrigger() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpcTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpcTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectNpcTrigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpcTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpcTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instanceid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpcTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 instanceid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpcTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpcTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 instanceid = 1;
  if (this->_internal_instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpcTrigger)
  return target;
}

size_t ViewObjectNpcTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpcTrigger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 instanceid = 1;
  if (this->_internal_instanceid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_instanceid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpcTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcTrigger::GetClassData() const { return &_class_data_; }

void ViewObjectNpcTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpcTrigger *>(to)->MergeFrom(
      static_cast<const ViewObjectNpcTrigger &>(from));
}


void ViewObjectNpcTrigger::MergeFrom(const ViewObjectNpcTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpcTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpcTrigger::CopyFrom(const ViewObjectNpcTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpcTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpcTrigger::IsInitialized() const {
  return true;
}

void ViewObjectNpcTrigger::InternalSwap(ViewObjectNpcTrigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[11]);
}

// ===================================================================

class ViewObjectNpcBlock::_Internal {
 public:
};

ViewObjectNpcBlock::ViewObjectNpcBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcBlock)
}
ViewObjectNpcBlock::ViewObjectNpcBlock(const ViewObjectNpcBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instanceid_ = from.instanceid_;
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcBlock)
}

inline void ViewObjectNpcBlock::SharedCtor() {
instanceid_ = uint64_t{0u};
}

ViewObjectNpcBlock::~ViewObjectNpcBlock() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpcBlock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpcBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectNpcBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpcBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpcBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instanceid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpcBlock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 instanceid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpcBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpcBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 instanceid = 1;
  if (this->_internal_instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpcBlock)
  return target;
}

size_t ViewObjectNpcBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpcBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 instanceid = 1;
  if (this->_internal_instanceid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_instanceid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpcBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcBlock::GetClassData() const { return &_class_data_; }

void ViewObjectNpcBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpcBlock *>(to)->MergeFrom(
      static_cast<const ViewObjectNpcBlock &>(from));
}


void ViewObjectNpcBlock::MergeFrom(const ViewObjectNpcBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpcBlock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpcBlock::CopyFrom(const ViewObjectNpcBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpcBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpcBlock::IsInitialized() const {
  return true;
}

void ViewObjectNpcBlock::InternalSwap(ViewObjectNpcBlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcBlock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[12]);
}

// ===================================================================

class ViewObjectNpcRegional::_Internal {
 public:
  static const ::common::OccupyViewData& data(const ViewObjectNpcRegional* msg);
};

const ::common::OccupyViewData&
ViewObjectNpcRegional::_Internal::data(const ViewObjectNpcRegional* msg) {
  return *msg->data_;
}
ViewObjectNpcRegional::ViewObjectNpcRegional(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectNpcRegional)
}
ViewObjectNpcRegional::ViewObjectNpcRegional(const ViewObjectNpcRegional& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::common::OccupyViewData(*from.data_);
  } else {
    data_ = nullptr;
  }
  instanceid_ = from.instanceid_;
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectNpcRegional)
}

inline void ViewObjectNpcRegional::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&instanceid_) -
    reinterpret_cast<char*>(&data_)) + sizeof(instanceid_));
}

ViewObjectNpcRegional::~ViewObjectNpcRegional() {
  // @@protoc_insertion_point(destructor:common.ViewObjectNpcRegional)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectNpcRegional::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void ViewObjectNpcRegional::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectNpcRegional::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectNpcRegional)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  instanceid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectNpcRegional::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 instanceid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.OccupyViewData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectNpcRegional::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectNpcRegional)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 instanceid = 1;
  if (this->_internal_instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_instanceid(), target);
  }

  // .common.OccupyViewData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectNpcRegional)
  return target;
}

size_t ViewObjectNpcRegional::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectNpcRegional)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.OccupyViewData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 instanceid = 1;
  if (this->_internal_instanceid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_instanceid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectNpcRegional::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectNpcRegional::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectNpcRegional::GetClassData() const { return &_class_data_; }

void ViewObjectNpcRegional::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectNpcRegional *>(to)->MergeFrom(
      static_cast<const ViewObjectNpcRegional &>(from));
}


void ViewObjectNpcRegional::MergeFrom(const ViewObjectNpcRegional& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectNpcRegional)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _internal_mutable_data()->::common::OccupyViewData::MergeFrom(from._internal_data());
  }
  if (from._internal_instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectNpcRegional::CopyFrom(const ViewObjectNpcRegional& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectNpcRegional)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectNpcRegional::IsInitialized() const {
  return true;
}

void ViewObjectNpcRegional::InternalSwap(ViewObjectNpcRegional* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObjectNpcRegional, instanceid_)
      + sizeof(ViewObjectNpcRegional::instanceid_)
      - PROTOBUF_FIELD_OFFSET(ViewObjectNpcRegional, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectNpcRegional::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[13]);
}

// ===================================================================

class ViewObject::_Internal {
 public:
  static const ::common::ViewObjectRole& role(const ViewObject* msg);
  static const ::common::ViewObjectNpc& npc(const ViewObject* msg);
};

const ::common::ViewObjectRole&
ViewObject::_Internal::role(const ViewObject* msg) {
  return *msg->role_;
}
const ::common::ViewObjectNpc&
ViewObject::_Internal::npc(const ViewObject* msg) {
  return *msg->npc_;
}
ViewObject::ViewObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObject)
}
ViewObject::ViewObject(const ViewObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role()) {
    role_ = new ::common::ViewObjectRole(*from.role_);
  } else {
    role_ = nullptr;
  }
  if (from._internal_has_npc()) {
    npc_ = new ::common::ViewObjectNpc(*from.npc_);
  } else {
    npc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:common.ViewObject)
}

inline void ViewObject::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&npc_) -
    reinterpret_cast<char*>(&role_)) + sizeof(npc_));
}

ViewObject::~ViewObject() {
  // @@protoc_insertion_point(destructor:common.ViewObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete npc_;
}

void ViewObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObject::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  if (GetArenaForAllocation() == nullptr && npc_ != nullptr) {
    delete npc_;
  }
  npc_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.ViewObjectRole role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ViewObjectNpc npc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_npc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.ViewObjectRole role = 1;
  if (this->_internal_has_role()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::role(this),
        _Internal::role(this).GetCachedSize(), target, stream);
  }

  // .common.ViewObjectNpc npc = 2;
  if (this->_internal_has_npc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::npc(this),
        _Internal::npc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObject)
  return target;
}

size_t ViewObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.ViewObjectRole role = 1;
  if (this->_internal_has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .common.ViewObjectNpc npc = 2;
  if (this->_internal_has_npc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *npc_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObject::GetClassData() const { return &_class_data_; }

void ViewObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObject *>(to)->MergeFrom(
      static_cast<const ViewObject &>(from));
}


void ViewObject::MergeFrom(const ViewObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObject)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_role()) {
    _internal_mutable_role()->::common::ViewObjectRole::MergeFrom(from._internal_role());
  }
  if (from._internal_has_npc()) {
    _internal_mutable_npc()->::common::ViewObjectNpc::MergeFrom(from._internal_npc());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObject::CopyFrom(const ViewObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObject::IsInitialized() const {
  return true;
}

void ViewObject::InternalSwap(ViewObject* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewObject, npc_)
      + sizeof(ViewObject::npc_)
      - PROTOBUF_FIELD_OFFSET(ViewObject, role_)>(
          reinterpret_cast<char*>(&role_),
          reinterpret_cast<char*>(&other->role_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[14]);
}

// ===================================================================

class ViewObjectList::_Internal {
 public:
};

ViewObjectList::ViewObjectList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  objects_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectList)
}
ViewObjectList::ViewObjectList(const ViewObjectList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectList)
}

inline void ViewObjectList::SharedCtor() {
}

ViewObjectList::~ViewObjectList() {
  // @@protoc_insertion_point(destructor:common.ViewObjectList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectList::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .common.ViewObject objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.ViewObject objects = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_objects_size()); i < n; i++) {
    const auto& repfield = this->_internal_objects(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectList)
  return target;
}

size_t ViewObjectList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .common.ViewObject objects = 1;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectList::GetClassData() const { return &_class_data_; }

void ViewObjectList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectList *>(to)->MergeFrom(
      static_cast<const ViewObjectList &>(from));
}


void ViewObjectList::MergeFrom(const ViewObjectList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectList::CopyFrom(const ViewObjectList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectList::IsInitialized() const {
  return true;
}

void ViewObjectList::InternalSwap(ViewObjectList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  objects_.InternalSwap(&other->objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[15]);
}

// ===================================================================

class ViewObjectIdList::_Internal {
 public:
};

ViewObjectIdList::ViewObjectIdList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  uids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewObjectIdList)
}
ViewObjectIdList::ViewObjectIdList(const ViewObjectIdList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      uids_(from.uids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.ViewObjectIdList)
}

inline void ViewObjectIdList::SharedCtor() {
}

ViewObjectIdList::~ViewObjectIdList() {
  // @@protoc_insertion_point(destructor:common.ViewObjectIdList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewObjectIdList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewObjectIdList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewObjectIdList::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewObjectIdList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewObjectIdList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 uids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_uids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_uids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewObjectIdList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewObjectIdList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 uids = 1;
  {
    int byte_size = _uids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_uids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewObjectIdList)
  return target;
}

size_t ViewObjectIdList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewObjectIdList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 uids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->uids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _uids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewObjectIdList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewObjectIdList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewObjectIdList::GetClassData() const { return &_class_data_; }

void ViewObjectIdList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewObjectIdList *>(to)->MergeFrom(
      static_cast<const ViewObjectIdList &>(from));
}


void ViewObjectIdList::MergeFrom(const ViewObjectIdList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewObjectIdList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  uids_.MergeFrom(from.uids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewObjectIdList::CopyFrom(const ViewObjectIdList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewObjectIdList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewObjectIdList::IsInitialized() const {
  return true;
}

void ViewObjectIdList::InternalSwap(ViewObjectIdList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  uids_.InternalSwap(&other->uids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewObjectIdList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[16]);
}

// ===================================================================

class RebirthInfo::_Internal {
 public:
};

RebirthInfo::RebirthInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.RebirthInfo)
}
RebirthInfo::RebirthInfo(const RebirthInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&canrebirth_, &from.canrebirth_,
    static_cast<size_t>(reinterpret_cast<char*>(&userebirthcnt_) -
    reinterpret_cast<char*>(&canrebirth_)) + sizeof(userebirthcnt_));
  // @@protoc_insertion_point(copy_constructor:common.RebirthInfo)
}

inline void RebirthInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&canrebirth_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&userebirthcnt_) -
    reinterpret_cast<char*>(&canrebirth_)) + sizeof(userebirthcnt_));
}

RebirthInfo::~RebirthInfo() {
  // @@protoc_insertion_point(destructor:common.RebirthInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RebirthInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RebirthInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebirthInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:common.RebirthInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&canrebirth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userebirthcnt_) -
      reinterpret_cast<char*>(&canrebirth_)) + sizeof(userebirthcnt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebirthInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 canRebirth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          canrebirth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 rebornParam = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rebornparam_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 deathTimes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          deathtimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 useRebirthCnt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          userebirthcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RebirthInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.RebirthInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 canRebirth = 1;
  if (this->_internal_canrebirth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_canrebirth(), target);
  }

  // uint32 rebornParam = 2;
  if (this->_internal_rebornparam() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rebornparam(), target);
  }

  // uint32 deathTimes = 3;
  if (this->_internal_deathtimes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_deathtimes(), target);
  }

  // uint32 useRebirthCnt = 4;
  if (this->_internal_userebirthcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_userebirthcnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.RebirthInfo)
  return target;
}

size_t RebirthInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.RebirthInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 canRebirth = 1;
  if (this->_internal_canrebirth() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_canrebirth());
  }

  // uint32 rebornParam = 2;
  if (this->_internal_rebornparam() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rebornparam());
  }

  // uint32 deathTimes = 3;
  if (this->_internal_deathtimes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_deathtimes());
  }

  // uint32 useRebirthCnt = 4;
  if (this->_internal_userebirthcnt() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_userebirthcnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RebirthInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RebirthInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RebirthInfo::GetClassData() const { return &_class_data_; }

void RebirthInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RebirthInfo *>(to)->MergeFrom(
      static_cast<const RebirthInfo &>(from));
}


void RebirthInfo::MergeFrom(const RebirthInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.RebirthInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_canrebirth() != 0) {
    _internal_set_canrebirth(from._internal_canrebirth());
  }
  if (from._internal_rebornparam() != 0) {
    _internal_set_rebornparam(from._internal_rebornparam());
  }
  if (from._internal_deathtimes() != 0) {
    _internal_set_deathtimes(from._internal_deathtimes());
  }
  if (from._internal_userebirthcnt() != 0) {
    _internal_set_userebirthcnt(from._internal_userebirthcnt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RebirthInfo::CopyFrom(const RebirthInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.RebirthInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebirthInfo::IsInitialized() const {
  return true;
}

void RebirthInfo::InternalSwap(RebirthInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RebirthInfo, userebirthcnt_)
      + sizeof(RebirthInfo::userebirthcnt_)
      - PROTOBUF_FIELD_OFFSET(RebirthInfo, canrebirth_)>(
          reinterpret_cast<char*>(&canrebirth_),
          reinterpret_cast<char*>(&other->canrebirth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RebirthInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[17]);
}

// ===================================================================

class MapMark::_Internal {
 public:
  static const ::common::ClientPosTogether& posto(const MapMark* msg);
};

const ::common::ClientPosTogether&
MapMark::_Internal::posto(const MapMark* msg) {
  return *msg->posto_;
}
void MapMark::clear_posto() {
  if (GetArenaForAllocation() == nullptr && posto_ != nullptr) {
    delete posto_;
  }
  posto_ = nullptr;
}
MapMark::MapMark(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.MapMark)
}
MapMark::MapMark(const MapMark& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_posto()) {
    posto_ = new ::common::ClientPosTogether(*from.posto_);
  } else {
    posto_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:common.MapMark)
}

inline void MapMark::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&posto_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&posto_)) + sizeof(state_));
}

MapMark::~MapMark() {
  // @@protoc_insertion_point(destructor:common.MapMark)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MapMark::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete posto_;
}

void MapMark::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MapMark::Clear() {
// @@protoc_insertion_point(message_clear_start:common.MapMark)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && posto_ != nullptr) {
    delete posto_;
  }
  posto_ = nullptr;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MapMark::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 tid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          tid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.ClientPosTogether posto = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_posto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MapMark::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.MapMark)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uid(), target);
  }

  // uint32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_type(), target);
  }

  // uint32 tid = 3;
  if (this->_internal_tid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_tid(), target);
  }

  // uint32 state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_state(), target);
  }

  // .common.ClientPosTogether posto = 5;
  if (this->_internal_has_posto()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::posto(this),
        _Internal::posto(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.MapMark)
  return target;
}

size_t MapMark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.MapMark)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.ClientPosTogether posto = 5;
  if (this->_internal_has_posto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *posto_);
  }

  // uint32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uid());
  }

  // uint32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  // uint32 tid = 3;
  if (this->_internal_tid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_tid());
  }

  // uint32 state = 4;
  if (this->_internal_state() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MapMark::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MapMark::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MapMark::GetClassData() const { return &_class_data_; }

void MapMark::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MapMark *>(to)->MergeFrom(
      static_cast<const MapMark &>(from));
}


void MapMark::MergeFrom(const MapMark& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.MapMark)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_posto()) {
    _internal_mutable_posto()->::common::ClientPosTogether::MergeFrom(from._internal_posto());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_tid() != 0) {
    _internal_set_tid(from._internal_tid());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MapMark::CopyFrom(const MapMark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.MapMark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapMark::IsInitialized() const {
  return true;
}

void MapMark::InternalSwap(MapMark* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapMark, state_)
      + sizeof(MapMark::state_)
      - PROTOBUF_FIELD_OFFSET(MapMark, posto_)>(
          reinterpret_cast<char*>(&posto_),
          reinterpret_cast<char*>(&other->posto_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MapMark::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[18]);
}

// ===================================================================

class OccupyViewData_OccupyProgress::_Internal {
 public:
};

OccupyViewData_OccupyProgress::OccupyViewData_OccupyProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.OccupyViewData.OccupyProgress)
}
OccupyViewData_OccupyProgress::OccupyViewData_OccupyProgress(const OccupyViewData_OccupyProgress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&campid_, &from.campid_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&campid_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:common.OccupyViewData.OccupyProgress)
}

inline void OccupyViewData_OccupyProgress::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&campid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&campid_)) + sizeof(progress_));
}

OccupyViewData_OccupyProgress::~OccupyViewData_OccupyProgress() {
  // @@protoc_insertion_point(destructor:common.OccupyViewData.OccupyProgress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OccupyViewData_OccupyProgress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OccupyViewData_OccupyProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OccupyViewData_OccupyProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:common.OccupyViewData.OccupyProgress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&campid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&campid_)) + sizeof(progress_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OccupyViewData_OccupyProgress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 campId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          campid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OccupyViewData_OccupyProgress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.OccupyViewData.OccupyProgress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 campId = 1;
  if (this->_internal_campid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_campid(), target);
  }

  // uint32 progress = 2;
  if (this->_internal_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.OccupyViewData.OccupyProgress)
  return target;
}

size_t OccupyViewData_OccupyProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.OccupyViewData.OccupyProgress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 campId = 1;
  if (this->_internal_campid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_campid());
  }

  // uint32 progress = 2;
  if (this->_internal_progress() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_progress());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OccupyViewData_OccupyProgress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OccupyViewData_OccupyProgress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OccupyViewData_OccupyProgress::GetClassData() const { return &_class_data_; }

void OccupyViewData_OccupyProgress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OccupyViewData_OccupyProgress *>(to)->MergeFrom(
      static_cast<const OccupyViewData_OccupyProgress &>(from));
}


void OccupyViewData_OccupyProgress::MergeFrom(const OccupyViewData_OccupyProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.OccupyViewData.OccupyProgress)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_campid() != 0) {
    _internal_set_campid(from._internal_campid());
  }
  if (from._internal_progress() != 0) {
    _internal_set_progress(from._internal_progress());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OccupyViewData_OccupyProgress::CopyFrom(const OccupyViewData_OccupyProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.OccupyViewData.OccupyProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OccupyViewData_OccupyProgress::IsInitialized() const {
  return true;
}

void OccupyViewData_OccupyProgress::InternalSwap(OccupyViewData_OccupyProgress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OccupyViewData_OccupyProgress, progress_)
      + sizeof(OccupyViewData_OccupyProgress::progress_)
      - PROTOBUF_FIELD_OFFSET(OccupyViewData_OccupyProgress, campid_)>(
          reinterpret_cast<char*>(&campid_),
          reinterpret_cast<char*>(&other->campid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OccupyViewData_OccupyProgress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[19]);
}

// ===================================================================

class OccupyViewData::_Internal {
 public:
  static const ::common::OccupyViewData_OccupyProgress& progress(const OccupyViewData* msg);
};

const ::common::OccupyViewData_OccupyProgress&
OccupyViewData::_Internal::progress(const OccupyViewData* msg) {
  return *msg->progress_;
}
OccupyViewData::OccupyViewData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.OccupyViewData)
}
OccupyViewData::OccupyViewData(const OccupyViewData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_progress()) {
    progress_ = new ::common::OccupyViewData_OccupyProgress(*from.progress_);
  } else {
    progress_ = nullptr;
  }
  occupycampid_ = from.occupycampid_;
  // @@protoc_insertion_point(copy_constructor:common.OccupyViewData)
}

inline void OccupyViewData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&progress_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&occupycampid_) -
    reinterpret_cast<char*>(&progress_)) + sizeof(occupycampid_));
}

OccupyViewData::~OccupyViewData() {
  // @@protoc_insertion_point(destructor:common.OccupyViewData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OccupyViewData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete progress_;
}

void OccupyViewData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OccupyViewData::Clear() {
// @@protoc_insertion_point(message_clear_start:common.OccupyViewData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && progress_ != nullptr) {
    delete progress_;
  }
  progress_ = nullptr;
  occupycampid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OccupyViewData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 occupyCampId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          occupycampid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.OccupyViewData.OccupyProgress progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_progress(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OccupyViewData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.OccupyViewData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 occupyCampId = 1;
  if (this->_internal_occupycampid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_occupycampid(), target);
  }

  // .common.OccupyViewData.OccupyProgress progress = 2;
  if (this->_internal_has_progress()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::progress(this),
        _Internal::progress(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.OccupyViewData)
  return target;
}

size_t OccupyViewData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.OccupyViewData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.OccupyViewData.OccupyProgress progress = 2;
  if (this->_internal_has_progress()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *progress_);
  }

  // uint32 occupyCampId = 1;
  if (this->_internal_occupycampid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_occupycampid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OccupyViewData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OccupyViewData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OccupyViewData::GetClassData() const { return &_class_data_; }

void OccupyViewData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OccupyViewData *>(to)->MergeFrom(
      static_cast<const OccupyViewData &>(from));
}


void OccupyViewData::MergeFrom(const OccupyViewData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.OccupyViewData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_progress()) {
    _internal_mutable_progress()->::common::OccupyViewData_OccupyProgress::MergeFrom(from._internal_progress());
  }
  if (from._internal_occupycampid() != 0) {
    _internal_set_occupycampid(from._internal_occupycampid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OccupyViewData::CopyFrom(const OccupyViewData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.OccupyViewData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OccupyViewData::IsInitialized() const {
  return true;
}

void OccupyViewData::InternalSwap(OccupyViewData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OccupyViewData, occupycampid_)
      + sizeof(OccupyViewData::occupycampid_)
      - PROTOBUF_FIELD_OFFSET(OccupyViewData, progress_)>(
          reinterpret_cast<char*>(&progress_),
          reinterpret_cast<char*>(&other->progress_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OccupyViewData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[20]);
}

// ===================================================================

class ViewEffect::_Internal {
 public:
};

ViewEffect::ViewEffect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewEffect)
}
ViewEffect::ViewEffect(const ViewEffect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&effectid_, &from.effectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&begintime_) -
    reinterpret_cast<char*>(&effectid_)) + sizeof(begintime_));
  // @@protoc_insertion_point(copy_constructor:common.ViewEffect)
}

inline void ViewEffect::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&effectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&begintime_) -
    reinterpret_cast<char*>(&effectid_)) + sizeof(begintime_));
}

ViewEffect::~ViewEffect() {
  // @@protoc_insertion_point(destructor:common.ViewEffect)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewEffect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewEffect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewEffect)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&effectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&begintime_) -
      reinterpret_cast<char*>(&effectid_)) + sizeof(begintime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewEffect::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 effectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          effectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 beginTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          begintime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewEffect::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewEffect)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 effectId = 1;
  if (this->_internal_effectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_effectid(), target);
  }

  // uint32 beginTime = 2;
  if (this->_internal_begintime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_begintime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewEffect)
  return target;
}

size_t ViewEffect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewEffect)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 effectId = 1;
  if (this->_internal_effectid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_effectid());
  }

  // uint32 beginTime = 2;
  if (this->_internal_begintime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_begintime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewEffect::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewEffect::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewEffect::GetClassData() const { return &_class_data_; }

void ViewEffect::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewEffect *>(to)->MergeFrom(
      static_cast<const ViewEffect &>(from));
}


void ViewEffect::MergeFrom(const ViewEffect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewEffect)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_effectid() != 0) {
    _internal_set_effectid(from._internal_effectid());
  }
  if (from._internal_begintime() != 0) {
    _internal_set_begintime(from._internal_begintime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewEffect::CopyFrom(const ViewEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewEffect::IsInitialized() const {
  return true;
}

void ViewEffect::InternalSwap(ViewEffect* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewEffect, begintime_)
      + sizeof(ViewEffect::begintime_)
      - PROTOBUF_FIELD_OFFSET(ViewEffect, effectid_)>(
          reinterpret_cast<char*>(&effectid_),
          reinterpret_cast<char*>(&other->effectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewEffect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[21]);
}

// ===================================================================

class ViewEffectList::_Internal {
 public:
};

ViewEffectList::ViewEffectList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  effects_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewEffectList)
}
ViewEffectList::ViewEffectList(const ViewEffectList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      effects_(from.effects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.ViewEffectList)
}

inline void ViewEffectList::SharedCtor() {
}

ViewEffectList::~ViewEffectList() {
  // @@protoc_insertion_point(destructor:common.ViewEffectList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewEffectList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewEffectList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewEffectList::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewEffectList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  effects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewEffectList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .common.ViewEffect effects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_effects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewEffectList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewEffectList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.ViewEffect effects = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_effects_size()); i < n; i++) {
    const auto& repfield = this->_internal_effects(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewEffectList)
  return target;
}

size_t ViewEffectList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewEffectList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .common.ViewEffect effects = 1;
  total_size += 1UL * this->_internal_effects_size();
  for (const auto& msg : this->effects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewEffectList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewEffectList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewEffectList::GetClassData() const { return &_class_data_; }

void ViewEffectList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewEffectList *>(to)->MergeFrom(
      static_cast<const ViewEffectList &>(from));
}


void ViewEffectList::MergeFrom(const ViewEffectList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewEffectList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  effects_.MergeFrom(from.effects_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewEffectList::CopyFrom(const ViewEffectList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewEffectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewEffectList::IsInitialized() const {
  return true;
}

void ViewEffectList::InternalSwap(ViewEffectList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  effects_.InternalSwap(&other->effects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewEffectList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[22]);
}

// ===================================================================

class ViewSpeed::_Internal {
 public:
};

ViewSpeed::ViewSpeed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewSpeed)
}
ViewSpeed::ViewSpeed(const ViewSpeed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&curspeed_, &from.curspeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&readyspeed_) -
    reinterpret_cast<char*>(&curspeed_)) + sizeof(readyspeed_));
  // @@protoc_insertion_point(copy_constructor:common.ViewSpeed)
}

inline void ViewSpeed::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&curspeed_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&readyspeed_) -
    reinterpret_cast<char*>(&curspeed_)) + sizeof(readyspeed_));
}

ViewSpeed::~ViewSpeed() {
  // @@protoc_insertion_point(destructor:common.ViewSpeed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewSpeed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewSpeed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewSpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewSpeed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&curspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&readyspeed_) -
      reinterpret_cast<char*>(&curspeed_)) + sizeof(readyspeed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewSpeed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 curSpeed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          curspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 readySpeed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          readyspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewSpeed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewSpeed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 curSpeed = 1;
  if (this->_internal_curspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_curspeed(), target);
  }

  // uint32 readySpeed = 2;
  if (this->_internal_readyspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_readyspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewSpeed)
  return target;
}

size_t ViewSpeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewSpeed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 curSpeed = 1;
  if (this->_internal_curspeed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_curspeed());
  }

  // uint32 readySpeed = 2;
  if (this->_internal_readyspeed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_readyspeed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewSpeed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewSpeed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewSpeed::GetClassData() const { return &_class_data_; }

void ViewSpeed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewSpeed *>(to)->MergeFrom(
      static_cast<const ViewSpeed &>(from));
}


void ViewSpeed::MergeFrom(const ViewSpeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewSpeed)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_curspeed() != 0) {
    _internal_set_curspeed(from._internal_curspeed());
  }
  if (from._internal_readyspeed() != 0) {
    _internal_set_readyspeed(from._internal_readyspeed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewSpeed::CopyFrom(const ViewSpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewSpeed::IsInitialized() const {
  return true;
}

void ViewSpeed::InternalSwap(ViewSpeed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewSpeed, readyspeed_)
      + sizeof(ViewSpeed::readyspeed_)
      - PROTOBUF_FIELD_OFFSET(ViewSpeed, curspeed_)>(
          reinterpret_cast<char*>(&curspeed_),
          reinterpret_cast<char*>(&other->curspeed_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewSpeed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[23]);
}

// ===================================================================

class ViewHitProgress::_Internal {
 public:
};

ViewHitProgress::ViewHitProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:common.ViewHitProgress)
}
ViewHitProgress::ViewHitProgress(const ViewHitProgress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&transformid_, &from.transformid_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&transformid_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:common.ViewHitProgress)
}

inline void ViewHitProgress::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&transformid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&transformid_)) + sizeof(progress_));
}

ViewHitProgress::~ViewHitProgress() {
  // @@protoc_insertion_point(destructor:common.ViewHitProgress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ViewHitProgress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ViewHitProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ViewHitProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ViewHitProgress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&transformid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&transformid_)) + sizeof(progress_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewHitProgress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 transformId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          transformid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ViewHitProgress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.ViewHitProgress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 transformId = 1;
  if (this->_internal_transformid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_transformid(), target);
  }

  // uint32 progress = 2;
  if (this->_internal_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ViewHitProgress)
  return target;
}

size_t ViewHitProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ViewHitProgress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 transformId = 1;
  if (this->_internal_transformid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_transformid());
  }

  // uint32 progress = 2;
  if (this->_internal_progress() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_progress());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ViewHitProgress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ViewHitProgress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ViewHitProgress::GetClassData() const { return &_class_data_; }

void ViewHitProgress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ViewHitProgress *>(to)->MergeFrom(
      static_cast<const ViewHitProgress &>(from));
}


void ViewHitProgress::MergeFrom(const ViewHitProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ViewHitProgress)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_transformid() != 0) {
    _internal_set_transformid(from._internal_transformid());
  }
  if (from._internal_progress() != 0) {
    _internal_set_progress(from._internal_progress());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ViewHitProgress::CopyFrom(const ViewHitProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ViewHitProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewHitProgress::IsInitialized() const {
  return true;
}

void ViewHitProgress::InternalSwap(ViewHitProgress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewHitProgress, progress_)
      + sizeof(ViewHitProgress::progress_)
      - PROTOBUF_FIELD_OFFSET(ViewHitProgress, transformid_)>(
          reinterpret_cast<char*>(&transformid_),
          reinterpret_cast<char*>(&other->transformid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewHitProgress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenecommon_2eproto_getter, &descriptor_table_scenecommon_2eproto_once,
      file_level_metadata_scenecommon_2eproto[24]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::common::ModuleDataByte*
Arena::CreateMaybeMessage< ::common::ModuleDataByte >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ModuleDataByte >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ModuleScene*
Arena::CreateMaybeMessage< ::common::ModuleScene >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ModuleScene >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ModuleSceneView*
Arena::CreateMaybeMessage< ::common::ModuleSceneView >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ModuleSceneView >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectState*
Arena::CreateMaybeMessage< ::common::ViewObjectState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectState >(arena);
}
template<> PROTOBUF_NOINLINE ::common::StaticViewList*
Arena::CreateMaybeMessage< ::common::StaticViewList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::StaticViewList >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectRole*
Arena::CreateMaybeMessage< ::common::ViewObjectRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectRole >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpc*
Arena::CreateMaybeMessage< ::common::ViewObjectNpc >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpc >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcFunc*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcFunc >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcFunc >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcMonster*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcMonster >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcMonster >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcCollection*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcCollection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcCollection >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcSkill*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcSkill >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcSkill >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcTrigger*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcBlock*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectNpcRegional*
Arena::CreateMaybeMessage< ::common::ViewObjectNpcRegional >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectNpcRegional >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObject*
Arena::CreateMaybeMessage< ::common::ViewObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObject >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectList*
Arena::CreateMaybeMessage< ::common::ViewObjectList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectList >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewObjectIdList*
Arena::CreateMaybeMessage< ::common::ViewObjectIdList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewObjectIdList >(arena);
}
template<> PROTOBUF_NOINLINE ::common::RebirthInfo*
Arena::CreateMaybeMessage< ::common::RebirthInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::RebirthInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::common::MapMark*
Arena::CreateMaybeMessage< ::common::MapMark >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::MapMark >(arena);
}
template<> PROTOBUF_NOINLINE ::common::OccupyViewData_OccupyProgress*
Arena::CreateMaybeMessage< ::common::OccupyViewData_OccupyProgress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::OccupyViewData_OccupyProgress >(arena);
}
template<> PROTOBUF_NOINLINE ::common::OccupyViewData*
Arena::CreateMaybeMessage< ::common::OccupyViewData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::OccupyViewData >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewEffect*
Arena::CreateMaybeMessage< ::common::ViewEffect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewEffect >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewEffectList*
Arena::CreateMaybeMessage< ::common::ViewEffectList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewEffectList >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewSpeed*
Arena::CreateMaybeMessage< ::common::ViewSpeed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewSpeed >(arena);
}
template<> PROTOBUF_NOINLINE ::common::ViewHitProgress*
Arena::CreateMaybeMessage< ::common::ViewHitProgress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::ViewHitProgress >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
