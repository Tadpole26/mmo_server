// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_cfg_ins.proto

#include "msg_cfg_ins.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace packet {
PROTOBUF_CONSTEXPR Grid_Point::Grid_Point(
    ::_pbi::ConstantInitialized)
  : posx_(0u)
  , posy_(0u){}
struct Grid_PointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_PointDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_PointDefaultTypeInternal() {}
  union {
    Grid_Point _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_PointDefaultTypeInternal _Grid_Point_default_instance_;
PROTOBUF_CONSTEXPR Grid_Rotation::Grid_Rotation(
    ::_pbi::ConstantInitialized)
  : rotax_(0u)
  , rotay_(0u)
  , rotaz_(0u){}
struct Grid_RotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_RotationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_RotationDefaultTypeInternal() {}
  union {
    Grid_Rotation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_RotationDefaultTypeInternal _Grid_Rotation_default_instance_;
PROTOBUF_CONSTEXPR Grid_Rect::Grid_Rect(
    ::_pbi::ConstantInitialized)
  : minpos_(nullptr)
  , maxpos_(nullptr){}
struct Grid_RectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_RectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_RectDefaultTypeInternal() {}
  union {
    Grid_Rect _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_RectDefaultTypeInternal _Grid_Rect_default_instance_;
PROTOBUF_CONSTEXPR Grid_RigNPC::Grid_RigNPC(
    ::_pbi::ConstantInitialized)
  : triggerrect_(nullptr)
  , rota_(nullptr)
  , pos_(nullptr)
  , triggerrectsecond_(nullptr)
  , npcid_(0u){}
struct Grid_RigNPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_RigNPCDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_RigNPCDefaultTypeInternal() {}
  union {
    Grid_RigNPC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_RigNPCDefaultTypeInternal _Grid_RigNPC_default_instance_;
PROTOBUF_CONSTEXPR Map_RigNPC::Map_RigNPC(
    ::_pbi::ConstantInitialized)
  : vecgrids_(){}
struct Map_RigNPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_RigNPCDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_RigNPCDefaultTypeInternal() {}
  union {
    Map_RigNPC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_RigNPCDefaultTypeInternal _Map_RigNPC_default_instance_;
PROTOBUF_CONSTEXPR Grid_Teleporter::Grid_Teleporter(
    ::_pbi::ConstantInitialized)
  : triggerrect_(nullptr)
  , rota_(nullptr)
  , pos_(nullptr)
  , teltype_(0u)
  , targetmap_(0u)
  , telanim_(0u){}
struct Grid_TeleporterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_TeleporterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_TeleporterDefaultTypeInternal() {}
  union {
    Grid_Teleporter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_TeleporterDefaultTypeInternal _Grid_Teleporter_default_instance_;
PROTOBUF_CONSTEXPR Map_Teleporter::Map_Teleporter(
    ::_pbi::ConstantInitialized)
  : vecgrids_(){}
struct Map_TeleporterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_TeleporterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_TeleporterDefaultTypeInternal() {}
  union {
    Map_Teleporter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_TeleporterDefaultTypeInternal _Map_Teleporter_default_instance_;
PROTOBUF_CONSTEXPR Grid_BlockArea::Grid_BlockArea(
    ::_pbi::ConstantInitialized)
  : blockrect_(nullptr)
  , instanceid_(uint64_t{0u})
  , blockareaid_(0u){}
struct Grid_BlockAreaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_BlockAreaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_BlockAreaDefaultTypeInternal() {}
  union {
    Grid_BlockArea _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_BlockAreaDefaultTypeInternal _Grid_BlockArea_default_instance_;
PROTOBUF_CONSTEXPR Map_BlockArea::Map_BlockArea(
    ::_pbi::ConstantInitialized)
  : vecgrids_(){}
struct Map_BlockAreaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_BlockAreaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_BlockAreaDefaultTypeInternal() {}
  union {
    Map_BlockArea _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_BlockAreaDefaultTypeInternal _Map_BlockArea_default_instance_;
PROTOBUF_CONSTEXPR Grid_MonsterGroup_Grid_MonsterGroupUnit::Grid_MonsterGroup_Grid_MonsterGroupUnit(
    ::_pbi::ConstantInitialized)
  : createrect_(nullptr)
  , rota_(nullptr)
  , pos_(nullptr)
  , monstergroupid_(0u){}
struct Grid_MonsterGroup_Grid_MonsterGroupUnitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_MonsterGroup_Grid_MonsterGroupUnitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_MonsterGroup_Grid_MonsterGroupUnitDefaultTypeInternal() {}
  union {
    Grid_MonsterGroup_Grid_MonsterGroupUnit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_MonsterGroup_Grid_MonsterGroupUnitDefaultTypeInternal _Grid_MonsterGroup_Grid_MonsterGroupUnit_default_instance_;
PROTOBUF_CONSTEXPR Grid_MonsterGroup::Grid_MonsterGroup(
    ::_pbi::ConstantInitialized)
  : vecgroups_(){}
struct Grid_MonsterGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Grid_MonsterGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Grid_MonsterGroupDefaultTypeInternal() {}
  union {
    Grid_MonsterGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Grid_MonsterGroupDefaultTypeInternal _Grid_MonsterGroup_default_instance_;
PROTOBUF_CONSTEXPR Map_MonsterGroup::Map_MonsterGroup(
    ::_pbi::ConstantInitialized)
  : vecgrids_(){}
struct Map_MonsterGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_MonsterGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_MonsterGroupDefaultTypeInternal() {}
  union {
    Map_MonsterGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_MonsterGroupDefaultTypeInternal _Map_MonsterGroup_default_instance_;
PROTOBUF_CONSTEXPR Map_Info::Map_Info(
    ::_pbi::ConstantInitialized)
  : width_(0u)
  , height_(0u){}
struct Map_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_InfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_InfoDefaultTypeInternal() {}
  union {
    Map_Info _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_InfoDefaultTypeInternal _Map_Info_default_instance_;
PROTOBUF_CONSTEXPR Map_AllTypes::Map_AllTypes(
    ::_pbi::ConstantInitialized)
  : maprignpc_(nullptr)
  , maptel_(nullptr)
  , mapblock_(nullptr)
  , mapmonstergroup_(nullptr)
  , type_(0)
{}
struct Map_AllTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_AllTypesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_AllTypesDefaultTypeInternal() {}
  union {
    Map_AllTypes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_AllTypesDefaultTypeInternal _Map_AllTypes_default_instance_;
}  // namespace packet
static ::_pb::Metadata file_level_metadata_msg_5fcfg_5fins_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msg_5fcfg_5fins_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_msg_5fcfg_5fins_2eproto = nullptr;

const uint32_t TableStruct_msg_5fcfg_5fins_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Point, posx_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Point, posy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rotation, rotax_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rotation, rotay_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rotation, rotaz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rect, minpos_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Rect, maxpos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_RigNPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_RigNPC, npcid_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_RigNPC, triggerrect_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_RigNPC, rota_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_RigNPC, pos_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_RigNPC, triggerrectsecond_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Map_RigNPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Map_RigNPC, vecgrids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, teltype_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, targetmap_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, telanim_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, triggerrect_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, rota_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_Teleporter, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Map_Teleporter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Map_Teleporter, vecgrids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_BlockArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_BlockArea, blockareaid_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_BlockArea, blockrect_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_BlockArea, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Map_BlockArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Map_BlockArea, vecgrids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit, monstergroupid_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit, createrect_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit, rota_),
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Grid_MonsterGroup, vecgroups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Map_MonsterGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Map_MonsterGroup, vecgrids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Map_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Map_Info, width_),
  PROTOBUF_FIELD_OFFSET(::packet::Map_Info, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::packet::Map_AllTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::packet::Map_AllTypes, type_),
  PROTOBUF_FIELD_OFFSET(::packet::Map_AllTypes, maprignpc_),
  PROTOBUF_FIELD_OFFSET(::packet::Map_AllTypes, maptel_),
  PROTOBUF_FIELD_OFFSET(::packet::Map_AllTypes, mapblock_),
  PROTOBUF_FIELD_OFFSET(::packet::Map_AllTypes, mapmonstergroup_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::packet::Grid_Point)},
  { 8, -1, -1, sizeof(::packet::Grid_Rotation)},
  { 17, -1, -1, sizeof(::packet::Grid_Rect)},
  { 25, -1, -1, sizeof(::packet::Grid_RigNPC)},
  { 36, -1, -1, sizeof(::packet::Map_RigNPC)},
  { 43, -1, -1, sizeof(::packet::Grid_Teleporter)},
  { 55, -1, -1, sizeof(::packet::Map_Teleporter)},
  { 62, -1, -1, sizeof(::packet::Grid_BlockArea)},
  { 71, -1, -1, sizeof(::packet::Map_BlockArea)},
  { 78, -1, -1, sizeof(::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit)},
  { 88, -1, -1, sizeof(::packet::Grid_MonsterGroup)},
  { 95, -1, -1, sizeof(::packet::Map_MonsterGroup)},
  { 102, -1, -1, sizeof(::packet::Map_Info)},
  { 110, -1, -1, sizeof(::packet::Map_AllTypes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::packet::_Grid_Point_default_instance_._instance,
  &::packet::_Grid_Rotation_default_instance_._instance,
  &::packet::_Grid_Rect_default_instance_._instance,
  &::packet::_Grid_RigNPC_default_instance_._instance,
  &::packet::_Map_RigNPC_default_instance_._instance,
  &::packet::_Grid_Teleporter_default_instance_._instance,
  &::packet::_Map_Teleporter_default_instance_._instance,
  &::packet::_Grid_BlockArea_default_instance_._instance,
  &::packet::_Map_BlockArea_default_instance_._instance,
  &::packet::_Grid_MonsterGroup_Grid_MonsterGroupUnit_default_instance_._instance,
  &::packet::_Grid_MonsterGroup_default_instance_._instance,
  &::packet::_Map_MonsterGroup_default_instance_._instance,
  &::packet::_Map_Info_default_instance_._instance,
  &::packet::_Map_AllTypes_default_instance_._instance,
};

const char descriptor_table_protodef_msg_5fcfg_5fins_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021msg_cfg_ins.proto\022\006packet\"(\n\nGrid_Poin"
  "t\022\014\n\004PosX\030\001 \001(\r\022\014\n\004PosY\030\002 \001(\r\"<\n\rGrid_Ro"
  "tation\022\r\n\005RotaX\030\001 \001(\r\022\r\n\005RotaY\030\002 \001(\r\022\r\n\005"
  "RotaZ\030\003 \001(\r\"S\n\tGrid_Rect\022\"\n\006minPos\030\001 \001(\013"
  "2\022.packet.Grid_Point\022\"\n\006maxPos\030\002 \001(\0132\022.p"
  "acket.Grid_Point\"\270\001\n\013Grid_RigNPC\022\r\n\005npcI"
  "d\030\001 \001(\r\022&\n\013triggerRect\030\002 \001(\0132\021.packet.Gr"
  "id_Rect\022#\n\004rota\030\003 \001(\0132\025.packet.Grid_Rota"
  "tion\022\037\n\003pos\030\004 \001(\0132\022.packet.Grid_Point\022,\n"
  "\021triggerRectSecond\030\005 \001(\0132\021.packet.Grid_R"
  "ect\"3\n\nMap_RigNPC\022%\n\010vecGrids\030\001 \003(\0132\023.pa"
  "cket.Grid_RigNPC\"\264\001\n\017Grid_Teleporter\022\017\n\007"
  "telType\030\001 \001(\r\022\021\n\ttargetMap\030\002 \001(\r\022\017\n\007telA"
  "nim\030\003 \001(\r\022&\n\013triggerRect\030\004 \001(\0132\021.packet."
  "Grid_Rect\022#\n\004rota\030\005 \001(\0132\025.packet.Grid_Ro"
  "tation\022\037\n\003pos\030\006 \001(\0132\022.packet.Grid_Point\""
  ";\n\016Map_Teleporter\022)\n\010vecGrids\030\001 \003(\0132\027.pa"
  "cket.Grid_Teleporter\"_\n\016Grid_BlockArea\022\023"
  "\n\013blockAreaId\030\001 \001(\r\022$\n\tblockRect\030\002 \001(\0132\021"
  ".packet.Grid_Rect\022\022\n\ninstanceId\030\003 \001(\004\"9\n"
  "\rMap_BlockArea\022(\n\010vecGrids\030\001 \003(\0132\026.packe"
  "t.Grid_BlockArea\"\366\001\n\021Grid_MonsterGroup\022B"
  "\n\tvecGroups\030\001 \003(\0132/.packet.Grid_MonsterG"
  "roup.Grid_MonsterGroupUnit\032\234\001\n\025Grid_Mons"
  "terGroupUnit\022\026\n\016monsterGroupId\030\001 \001(\r\022%\n\n"
  "createRect\030\002 \001(\0132\021.packet.Grid_Rect\022#\n\004r"
  "ota\030\003 \001(\0132\025.packet.Grid_Rotation\022\037\n\003pos\030"
  "\004 \001(\0132\022.packet.Grid_Point\"\?\n\020Map_Monster"
  "Group\022+\n\010vecGrids\030\001 \003(\0132\031.packet.Grid_Mo"
  "nsterGroup\")\n\010Map_Info\022\r\n\005width\030\001 \001(\r\022\016\n"
  "\006height\030\002 \001(\r\"\332\001\n\014Map_AllTypes\022\037\n\004type\030\001"
  " \001(\0162\021.packet.BrushType\022%\n\tmapRigNPC\030\002 \001"
  "(\0132\022.packet.Map_RigNPC\022&\n\006mapTel\030\003 \001(\0132\026"
  ".packet.Map_Teleporter\022\'\n\010mapBlock\030\004 \001(\013"
  "2\025.packet.Map_BlockArea\0221\n\017mapMonsterGro"
  "up\030\005 \001(\0132\030.packet.Map_MonsterGroup*h\n\tBr"
  "ushType\022\022\n\016BrushType_None\020\000\022\024\n\020BrushType"
  "_RigNPC\020\001\022\030\n\024BrushType_Teleporter\020\002\022\027\n\023B"
  "rushType_BlockArea\020\003b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_msg_5fcfg_5fins_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_5fcfg_5fins_2eproto = {
    false, false, 1548, descriptor_table_protodef_msg_5fcfg_5fins_2eproto,
    "msg_cfg_ins.proto",
    &descriptor_table_msg_5fcfg_5fins_2eproto_once, nullptr, 0, 14,
    schemas, file_default_instances, TableStruct_msg_5fcfg_5fins_2eproto::offsets,
    file_level_metadata_msg_5fcfg_5fins_2eproto, file_level_enum_descriptors_msg_5fcfg_5fins_2eproto,
    file_level_service_descriptors_msg_5fcfg_5fins_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_5fcfg_5fins_2eproto_getter() {
  return &descriptor_table_msg_5fcfg_5fins_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_5fcfg_5fins_2eproto(&descriptor_table_msg_5fcfg_5fins_2eproto);
namespace packet {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BrushType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fcfg_5fins_2eproto);
  return file_level_enum_descriptors_msg_5fcfg_5fins_2eproto[0];
}
bool BrushType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Grid_Point::_Internal {
 public:
};

Grid_Point::Grid_Point(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_Point)
}
Grid_Point::Grid_Point(const Grid_Point& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&posx_, &from.posx_,
    static_cast<size_t>(reinterpret_cast<char*>(&posy_) -
    reinterpret_cast<char*>(&posx_)) + sizeof(posy_));
  // @@protoc_insertion_point(copy_constructor:packet.Grid_Point)
}

inline void Grid_Point::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&posx_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&posy_) -
    reinterpret_cast<char*>(&posx_)) + sizeof(posy_));
}

Grid_Point::~Grid_Point() {
  // @@protoc_insertion_point(destructor:packet.Grid_Point)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_Point::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Grid_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_Point)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&posx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&posy_) -
      reinterpret_cast<char*>(&posx_)) + sizeof(posy_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_Point::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 PosX = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          posx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PosY = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          posy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_Point::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_Point)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PosX = 1;
  if (this->_internal_posx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_posx(), target);
  }

  // uint32 PosY = 2;
  if (this->_internal_posy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_posy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_Point)
  return target;
}

size_t Grid_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_Point)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 PosX = 1;
  if (this->_internal_posx() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_posx());
  }

  // uint32 PosY = 2;
  if (this->_internal_posy() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_posy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_Point::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_Point::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_Point::GetClassData() const { return &_class_data_; }

void Grid_Point::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_Point *>(to)->MergeFrom(
      static_cast<const Grid_Point &>(from));
}


void Grid_Point::MergeFrom(const Grid_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_Point)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_posx() != 0) {
    _internal_set_posx(from._internal_posx());
  }
  if (from._internal_posy() != 0) {
    _internal_set_posy(from._internal_posy());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_Point::CopyFrom(const Grid_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_Point::IsInitialized() const {
  return true;
}

void Grid_Point::InternalSwap(Grid_Point* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_Point, posy_)
      + sizeof(Grid_Point::posy_)
      - PROTOBUF_FIELD_OFFSET(Grid_Point, posx_)>(
          reinterpret_cast<char*>(&posx_),
          reinterpret_cast<char*>(&other->posx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_Point::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[0]);
}

// ===================================================================

class Grid_Rotation::_Internal {
 public:
};

Grid_Rotation::Grid_Rotation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_Rotation)
}
Grid_Rotation::Grid_Rotation(const Grid_Rotation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rotax_, &from.rotax_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotaz_) -
    reinterpret_cast<char*>(&rotax_)) + sizeof(rotaz_));
  // @@protoc_insertion_point(copy_constructor:packet.Grid_Rotation)
}

inline void Grid_Rotation::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rotax_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rotaz_) -
    reinterpret_cast<char*>(&rotax_)) + sizeof(rotaz_));
}

Grid_Rotation::~Grid_Rotation() {
  // @@protoc_insertion_point(destructor:packet.Grid_Rotation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_Rotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Grid_Rotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_Rotation::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_Rotation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rotax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotaz_) -
      reinterpret_cast<char*>(&rotax_)) + sizeof(rotaz_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_Rotation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RotaX = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          rotax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RotaY = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rotay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RotaZ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rotaz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_Rotation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_Rotation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RotaX = 1;
  if (this->_internal_rotax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_rotax(), target);
  }

  // uint32 RotaY = 2;
  if (this->_internal_rotay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rotay(), target);
  }

  // uint32 RotaZ = 3;
  if (this->_internal_rotaz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rotaz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_Rotation)
  return target;
}

size_t Grid_Rotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_Rotation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RotaX = 1;
  if (this->_internal_rotax() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rotax());
  }

  // uint32 RotaY = 2;
  if (this->_internal_rotay() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rotay());
  }

  // uint32 RotaZ = 3;
  if (this->_internal_rotaz() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rotaz());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_Rotation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_Rotation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_Rotation::GetClassData() const { return &_class_data_; }

void Grid_Rotation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_Rotation *>(to)->MergeFrom(
      static_cast<const Grid_Rotation &>(from));
}


void Grid_Rotation::MergeFrom(const Grid_Rotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_Rotation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rotax() != 0) {
    _internal_set_rotax(from._internal_rotax());
  }
  if (from._internal_rotay() != 0) {
    _internal_set_rotay(from._internal_rotay());
  }
  if (from._internal_rotaz() != 0) {
    _internal_set_rotaz(from._internal_rotaz());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_Rotation::CopyFrom(const Grid_Rotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_Rotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_Rotation::IsInitialized() const {
  return true;
}

void Grid_Rotation::InternalSwap(Grid_Rotation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_Rotation, rotaz_)
      + sizeof(Grid_Rotation::rotaz_)
      - PROTOBUF_FIELD_OFFSET(Grid_Rotation, rotax_)>(
          reinterpret_cast<char*>(&rotax_),
          reinterpret_cast<char*>(&other->rotax_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_Rotation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[1]);
}

// ===================================================================

class Grid_Rect::_Internal {
 public:
  static const ::packet::Grid_Point& minpos(const Grid_Rect* msg);
  static const ::packet::Grid_Point& maxpos(const Grid_Rect* msg);
};

const ::packet::Grid_Point&
Grid_Rect::_Internal::minpos(const Grid_Rect* msg) {
  return *msg->minpos_;
}
const ::packet::Grid_Point&
Grid_Rect::_Internal::maxpos(const Grid_Rect* msg) {
  return *msg->maxpos_;
}
Grid_Rect::Grid_Rect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_Rect)
}
Grid_Rect::Grid_Rect(const Grid_Rect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_minpos()) {
    minpos_ = new ::packet::Grid_Point(*from.minpos_);
  } else {
    minpos_ = nullptr;
  }
  if (from._internal_has_maxpos()) {
    maxpos_ = new ::packet::Grid_Point(*from.maxpos_);
  } else {
    maxpos_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:packet.Grid_Rect)
}

inline void Grid_Rect::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&minpos_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxpos_) -
    reinterpret_cast<char*>(&minpos_)) + sizeof(maxpos_));
}

Grid_Rect::~Grid_Rect() {
  // @@protoc_insertion_point(destructor:packet.Grid_Rect)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_Rect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete minpos_;
  if (this != internal_default_instance()) delete maxpos_;
}

void Grid_Rect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_Rect::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_Rect)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && minpos_ != nullptr) {
    delete minpos_;
  }
  minpos_ = nullptr;
  if (GetArenaForAllocation() == nullptr && maxpos_ != nullptr) {
    delete maxpos_;
  }
  maxpos_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_Rect::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .packet.Grid_Point minPos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_minpos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Point maxPos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxpos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_Rect::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_Rect)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Grid_Point minPos = 1;
  if (this->_internal_has_minpos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::minpos(this),
        _Internal::minpos(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Point maxPos = 2;
  if (this->_internal_has_maxpos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::maxpos(this),
        _Internal::maxpos(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_Rect)
  return target;
}

size_t Grid_Rect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_Rect)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .packet.Grid_Point minPos = 1;
  if (this->_internal_has_minpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *minpos_);
  }

  // .packet.Grid_Point maxPos = 2;
  if (this->_internal_has_maxpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxpos_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_Rect::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_Rect::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_Rect::GetClassData() const { return &_class_data_; }

void Grid_Rect::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_Rect *>(to)->MergeFrom(
      static_cast<const Grid_Rect &>(from));
}


void Grid_Rect::MergeFrom(const Grid_Rect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_Rect)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_minpos()) {
    _internal_mutable_minpos()->::packet::Grid_Point::MergeFrom(from._internal_minpos());
  }
  if (from._internal_has_maxpos()) {
    _internal_mutable_maxpos()->::packet::Grid_Point::MergeFrom(from._internal_maxpos());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_Rect::CopyFrom(const Grid_Rect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_Rect::IsInitialized() const {
  return true;
}

void Grid_Rect::InternalSwap(Grid_Rect* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_Rect, maxpos_)
      + sizeof(Grid_Rect::maxpos_)
      - PROTOBUF_FIELD_OFFSET(Grid_Rect, minpos_)>(
          reinterpret_cast<char*>(&minpos_),
          reinterpret_cast<char*>(&other->minpos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_Rect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[2]);
}

// ===================================================================

class Grid_RigNPC::_Internal {
 public:
  static const ::packet::Grid_Rect& triggerrect(const Grid_RigNPC* msg);
  static const ::packet::Grid_Rotation& rota(const Grid_RigNPC* msg);
  static const ::packet::Grid_Point& pos(const Grid_RigNPC* msg);
  static const ::packet::Grid_Rect& triggerrectsecond(const Grid_RigNPC* msg);
};

const ::packet::Grid_Rect&
Grid_RigNPC::_Internal::triggerrect(const Grid_RigNPC* msg) {
  return *msg->triggerrect_;
}
const ::packet::Grid_Rotation&
Grid_RigNPC::_Internal::rota(const Grid_RigNPC* msg) {
  return *msg->rota_;
}
const ::packet::Grid_Point&
Grid_RigNPC::_Internal::pos(const Grid_RigNPC* msg) {
  return *msg->pos_;
}
const ::packet::Grid_Rect&
Grid_RigNPC::_Internal::triggerrectsecond(const Grid_RigNPC* msg) {
  return *msg->triggerrectsecond_;
}
Grid_RigNPC::Grid_RigNPC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_RigNPC)
}
Grid_RigNPC::Grid_RigNPC(const Grid_RigNPC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_triggerrect()) {
    triggerrect_ = new ::packet::Grid_Rect(*from.triggerrect_);
  } else {
    triggerrect_ = nullptr;
  }
  if (from._internal_has_rota()) {
    rota_ = new ::packet::Grid_Rotation(*from.rota_);
  } else {
    rota_ = nullptr;
  }
  if (from._internal_has_pos()) {
    pos_ = new ::packet::Grid_Point(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  if (from._internal_has_triggerrectsecond()) {
    triggerrectsecond_ = new ::packet::Grid_Rect(*from.triggerrectsecond_);
  } else {
    triggerrectsecond_ = nullptr;
  }
  npcid_ = from.npcid_;
  // @@protoc_insertion_point(copy_constructor:packet.Grid_RigNPC)
}

inline void Grid_RigNPC::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&triggerrect_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&npcid_) -
    reinterpret_cast<char*>(&triggerrect_)) + sizeof(npcid_));
}

Grid_RigNPC::~Grid_RigNPC() {
  // @@protoc_insertion_point(destructor:packet.Grid_RigNPC)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_RigNPC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete triggerrect_;
  if (this != internal_default_instance()) delete rota_;
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete triggerrectsecond_;
}

void Grid_RigNPC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_RigNPC::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_RigNPC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && triggerrect_ != nullptr) {
    delete triggerrect_;
  }
  triggerrect_ = nullptr;
  if (GetArenaForAllocation() == nullptr && rota_ != nullptr) {
    delete rota_;
  }
  rota_ = nullptr;
  if (GetArenaForAllocation() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  if (GetArenaForAllocation() == nullptr && triggerrectsecond_ != nullptr) {
    delete triggerrectsecond_;
  }
  triggerrectsecond_ = nullptr;
  npcid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_RigNPC::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 npcId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          npcid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rect triggerRect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_triggerrect(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rotation rota = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_rota(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Point pos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rect triggerRectSecond = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_triggerrectsecond(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_RigNPC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_RigNPC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npcId = 1;
  if (this->_internal_npcid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_npcid(), target);
  }

  // .packet.Grid_Rect triggerRect = 2;
  if (this->_internal_has_triggerrect()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::triggerrect(this),
        _Internal::triggerrect(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Rotation rota = 3;
  if (this->_internal_has_rota()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::rota(this),
        _Internal::rota(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Point pos = 4;
  if (this->_internal_has_pos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pos(this),
        _Internal::pos(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Rect triggerRectSecond = 5;
  if (this->_internal_has_triggerrectsecond()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::triggerrectsecond(this),
        _Internal::triggerrectsecond(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_RigNPC)
  return target;
}

size_t Grid_RigNPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_RigNPC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .packet.Grid_Rect triggerRect = 2;
  if (this->_internal_has_triggerrect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *triggerrect_);
  }

  // .packet.Grid_Rotation rota = 3;
  if (this->_internal_has_rota()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rota_);
  }

  // .packet.Grid_Point pos = 4;
  if (this->_internal_has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // .packet.Grid_Rect triggerRectSecond = 5;
  if (this->_internal_has_triggerrectsecond()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *triggerrectsecond_);
  }

  // uint32 npcId = 1;
  if (this->_internal_npcid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_npcid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_RigNPC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_RigNPC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_RigNPC::GetClassData() const { return &_class_data_; }

void Grid_RigNPC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_RigNPC *>(to)->MergeFrom(
      static_cast<const Grid_RigNPC &>(from));
}


void Grid_RigNPC::MergeFrom(const Grid_RigNPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_RigNPC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_triggerrect()) {
    _internal_mutable_triggerrect()->::packet::Grid_Rect::MergeFrom(from._internal_triggerrect());
  }
  if (from._internal_has_rota()) {
    _internal_mutable_rota()->::packet::Grid_Rotation::MergeFrom(from._internal_rota());
  }
  if (from._internal_has_pos()) {
    _internal_mutable_pos()->::packet::Grid_Point::MergeFrom(from._internal_pos());
  }
  if (from._internal_has_triggerrectsecond()) {
    _internal_mutable_triggerrectsecond()->::packet::Grid_Rect::MergeFrom(from._internal_triggerrectsecond());
  }
  if (from._internal_npcid() != 0) {
    _internal_set_npcid(from._internal_npcid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_RigNPC::CopyFrom(const Grid_RigNPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_RigNPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_RigNPC::IsInitialized() const {
  return true;
}

void Grid_RigNPC::InternalSwap(Grid_RigNPC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_RigNPC, npcid_)
      + sizeof(Grid_RigNPC::npcid_)
      - PROTOBUF_FIELD_OFFSET(Grid_RigNPC, triggerrect_)>(
          reinterpret_cast<char*>(&triggerrect_),
          reinterpret_cast<char*>(&other->triggerrect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_RigNPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[3]);
}

// ===================================================================

class Map_RigNPC::_Internal {
 public:
};

Map_RigNPC::Map_RigNPC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecgrids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Map_RigNPC)
}
Map_RigNPC::Map_RigNPC(const Map_RigNPC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecgrids_(from.vecgrids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.Map_RigNPC)
}

inline void Map_RigNPC::SharedCtor() {
}

Map_RigNPC::~Map_RigNPC() {
  // @@protoc_insertion_point(destructor:packet.Map_RigNPC)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Map_RigNPC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Map_RigNPC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Map_RigNPC::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Map_RigNPC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecgrids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map_RigNPC::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .packet.Grid_RigNPC vecGrids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecgrids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map_RigNPC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Map_RigNPC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Grid_RigNPC vecGrids = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecgrids_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecgrids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Map_RigNPC)
  return target;
}

size_t Map_RigNPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Map_RigNPC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .packet.Grid_RigNPC vecGrids = 1;
  total_size += 1UL * this->_internal_vecgrids_size();
  for (const auto& msg : this->vecgrids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map_RigNPC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Map_RigNPC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map_RigNPC::GetClassData() const { return &_class_data_; }

void Map_RigNPC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Map_RigNPC *>(to)->MergeFrom(
      static_cast<const Map_RigNPC &>(from));
}


void Map_RigNPC::MergeFrom(const Map_RigNPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Map_RigNPC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecgrids_.MergeFrom(from.vecgrids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map_RigNPC::CopyFrom(const Map_RigNPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Map_RigNPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RigNPC::IsInitialized() const {
  return true;
}

void Map_RigNPC::InternalSwap(Map_RigNPC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecgrids_.InternalSwap(&other->vecgrids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Map_RigNPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[4]);
}

// ===================================================================

class Grid_Teleporter::_Internal {
 public:
  static const ::packet::Grid_Rect& triggerrect(const Grid_Teleporter* msg);
  static const ::packet::Grid_Rotation& rota(const Grid_Teleporter* msg);
  static const ::packet::Grid_Point& pos(const Grid_Teleporter* msg);
};

const ::packet::Grid_Rect&
Grid_Teleporter::_Internal::triggerrect(const Grid_Teleporter* msg) {
  return *msg->triggerrect_;
}
const ::packet::Grid_Rotation&
Grid_Teleporter::_Internal::rota(const Grid_Teleporter* msg) {
  return *msg->rota_;
}
const ::packet::Grid_Point&
Grid_Teleporter::_Internal::pos(const Grid_Teleporter* msg) {
  return *msg->pos_;
}
Grid_Teleporter::Grid_Teleporter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_Teleporter)
}
Grid_Teleporter::Grid_Teleporter(const Grid_Teleporter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_triggerrect()) {
    triggerrect_ = new ::packet::Grid_Rect(*from.triggerrect_);
  } else {
    triggerrect_ = nullptr;
  }
  if (from._internal_has_rota()) {
    rota_ = new ::packet::Grid_Rotation(*from.rota_);
  } else {
    rota_ = nullptr;
  }
  if (from._internal_has_pos()) {
    pos_ = new ::packet::Grid_Point(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  ::memcpy(&teltype_, &from.teltype_,
    static_cast<size_t>(reinterpret_cast<char*>(&telanim_) -
    reinterpret_cast<char*>(&teltype_)) + sizeof(telanim_));
  // @@protoc_insertion_point(copy_constructor:packet.Grid_Teleporter)
}

inline void Grid_Teleporter::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&triggerrect_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&telanim_) -
    reinterpret_cast<char*>(&triggerrect_)) + sizeof(telanim_));
}

Grid_Teleporter::~Grid_Teleporter() {
  // @@protoc_insertion_point(destructor:packet.Grid_Teleporter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_Teleporter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete triggerrect_;
  if (this != internal_default_instance()) delete rota_;
  if (this != internal_default_instance()) delete pos_;
}

void Grid_Teleporter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_Teleporter::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_Teleporter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && triggerrect_ != nullptr) {
    delete triggerrect_;
  }
  triggerrect_ = nullptr;
  if (GetArenaForAllocation() == nullptr && rota_ != nullptr) {
    delete rota_;
  }
  rota_ = nullptr;
  if (GetArenaForAllocation() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  ::memset(&teltype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&telanim_) -
      reinterpret_cast<char*>(&teltype_)) + sizeof(telanim_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_Teleporter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 telType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          teltype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 targetMap = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          targetmap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 telAnim = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          telanim_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rect triggerRect = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_triggerrect(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rotation rota = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_rota(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Point pos = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_Teleporter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_Teleporter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 telType = 1;
  if (this->_internal_teltype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_teltype(), target);
  }

  // uint32 targetMap = 2;
  if (this->_internal_targetmap() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_targetmap(), target);
  }

  // uint32 telAnim = 3;
  if (this->_internal_telanim() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_telanim(), target);
  }

  // .packet.Grid_Rect triggerRect = 4;
  if (this->_internal_has_triggerrect()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::triggerrect(this),
        _Internal::triggerrect(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Rotation rota = 5;
  if (this->_internal_has_rota()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::rota(this),
        _Internal::rota(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Point pos = 6;
  if (this->_internal_has_pos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::pos(this),
        _Internal::pos(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_Teleporter)
  return target;
}

size_t Grid_Teleporter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_Teleporter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .packet.Grid_Rect triggerRect = 4;
  if (this->_internal_has_triggerrect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *triggerrect_);
  }

  // .packet.Grid_Rotation rota = 5;
  if (this->_internal_has_rota()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rota_);
  }

  // .packet.Grid_Point pos = 6;
  if (this->_internal_has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // uint32 telType = 1;
  if (this->_internal_teltype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_teltype());
  }

  // uint32 targetMap = 2;
  if (this->_internal_targetmap() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targetmap());
  }

  // uint32 telAnim = 3;
  if (this->_internal_telanim() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_telanim());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_Teleporter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_Teleporter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_Teleporter::GetClassData() const { return &_class_data_; }

void Grid_Teleporter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_Teleporter *>(to)->MergeFrom(
      static_cast<const Grid_Teleporter &>(from));
}


void Grid_Teleporter::MergeFrom(const Grid_Teleporter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_Teleporter)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_triggerrect()) {
    _internal_mutable_triggerrect()->::packet::Grid_Rect::MergeFrom(from._internal_triggerrect());
  }
  if (from._internal_has_rota()) {
    _internal_mutable_rota()->::packet::Grid_Rotation::MergeFrom(from._internal_rota());
  }
  if (from._internal_has_pos()) {
    _internal_mutable_pos()->::packet::Grid_Point::MergeFrom(from._internal_pos());
  }
  if (from._internal_teltype() != 0) {
    _internal_set_teltype(from._internal_teltype());
  }
  if (from._internal_targetmap() != 0) {
    _internal_set_targetmap(from._internal_targetmap());
  }
  if (from._internal_telanim() != 0) {
    _internal_set_telanim(from._internal_telanim());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_Teleporter::CopyFrom(const Grid_Teleporter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_Teleporter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_Teleporter::IsInitialized() const {
  return true;
}

void Grid_Teleporter::InternalSwap(Grid_Teleporter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_Teleporter, telanim_)
      + sizeof(Grid_Teleporter::telanim_)
      - PROTOBUF_FIELD_OFFSET(Grid_Teleporter, triggerrect_)>(
          reinterpret_cast<char*>(&triggerrect_),
          reinterpret_cast<char*>(&other->triggerrect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_Teleporter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[5]);
}

// ===================================================================

class Map_Teleporter::_Internal {
 public:
};

Map_Teleporter::Map_Teleporter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecgrids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Map_Teleporter)
}
Map_Teleporter::Map_Teleporter(const Map_Teleporter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecgrids_(from.vecgrids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.Map_Teleporter)
}

inline void Map_Teleporter::SharedCtor() {
}

Map_Teleporter::~Map_Teleporter() {
  // @@protoc_insertion_point(destructor:packet.Map_Teleporter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Map_Teleporter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Map_Teleporter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Map_Teleporter::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Map_Teleporter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecgrids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map_Teleporter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .packet.Grid_Teleporter vecGrids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecgrids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map_Teleporter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Map_Teleporter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Grid_Teleporter vecGrids = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecgrids_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecgrids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Map_Teleporter)
  return target;
}

size_t Map_Teleporter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Map_Teleporter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .packet.Grid_Teleporter vecGrids = 1;
  total_size += 1UL * this->_internal_vecgrids_size();
  for (const auto& msg : this->vecgrids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map_Teleporter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Map_Teleporter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map_Teleporter::GetClassData() const { return &_class_data_; }

void Map_Teleporter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Map_Teleporter *>(to)->MergeFrom(
      static_cast<const Map_Teleporter &>(from));
}


void Map_Teleporter::MergeFrom(const Map_Teleporter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Map_Teleporter)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecgrids_.MergeFrom(from.vecgrids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map_Teleporter::CopyFrom(const Map_Teleporter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Map_Teleporter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_Teleporter::IsInitialized() const {
  return true;
}

void Map_Teleporter::InternalSwap(Map_Teleporter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecgrids_.InternalSwap(&other->vecgrids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Map_Teleporter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[6]);
}

// ===================================================================

class Grid_BlockArea::_Internal {
 public:
  static const ::packet::Grid_Rect& blockrect(const Grid_BlockArea* msg);
};

const ::packet::Grid_Rect&
Grid_BlockArea::_Internal::blockrect(const Grid_BlockArea* msg) {
  return *msg->blockrect_;
}
Grid_BlockArea::Grid_BlockArea(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_BlockArea)
}
Grid_BlockArea::Grid_BlockArea(const Grid_BlockArea& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_blockrect()) {
    blockrect_ = new ::packet::Grid_Rect(*from.blockrect_);
  } else {
    blockrect_ = nullptr;
  }
  ::memcpy(&instanceid_, &from.instanceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&blockareaid_) -
    reinterpret_cast<char*>(&instanceid_)) + sizeof(blockareaid_));
  // @@protoc_insertion_point(copy_constructor:packet.Grid_BlockArea)
}

inline void Grid_BlockArea::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&blockrect_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&blockareaid_) -
    reinterpret_cast<char*>(&blockrect_)) + sizeof(blockareaid_));
}

Grid_BlockArea::~Grid_BlockArea() {
  // @@protoc_insertion_point(destructor:packet.Grid_BlockArea)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_BlockArea::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete blockrect_;
}

void Grid_BlockArea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_BlockArea::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_BlockArea)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && blockrect_ != nullptr) {
    delete blockrect_;
  }
  blockrect_ = nullptr;
  ::memset(&instanceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blockareaid_) -
      reinterpret_cast<char*>(&instanceid_)) + sizeof(blockareaid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_BlockArea::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 blockAreaId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          blockareaid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rect blockRect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_blockrect(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 instanceId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_BlockArea::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_BlockArea)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 blockAreaId = 1;
  if (this->_internal_blockareaid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_blockareaid(), target);
  }

  // .packet.Grid_Rect blockRect = 2;
  if (this->_internal_has_blockrect()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::blockrect(this),
        _Internal::blockrect(this).GetCachedSize(), target, stream);
  }

  // uint64 instanceId = 3;
  if (this->_internal_instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_BlockArea)
  return target;
}

size_t Grid_BlockArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_BlockArea)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .packet.Grid_Rect blockRect = 2;
  if (this->_internal_has_blockrect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *blockrect_);
  }

  // uint64 instanceId = 3;
  if (this->_internal_instanceid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_instanceid());
  }

  // uint32 blockAreaId = 1;
  if (this->_internal_blockareaid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_blockareaid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_BlockArea::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_BlockArea::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_BlockArea::GetClassData() const { return &_class_data_; }

void Grid_BlockArea::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_BlockArea *>(to)->MergeFrom(
      static_cast<const Grid_BlockArea &>(from));
}


void Grid_BlockArea::MergeFrom(const Grid_BlockArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_BlockArea)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_blockrect()) {
    _internal_mutable_blockrect()->::packet::Grid_Rect::MergeFrom(from._internal_blockrect());
  }
  if (from._internal_instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
  if (from._internal_blockareaid() != 0) {
    _internal_set_blockareaid(from._internal_blockareaid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_BlockArea::CopyFrom(const Grid_BlockArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_BlockArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_BlockArea::IsInitialized() const {
  return true;
}

void Grid_BlockArea::InternalSwap(Grid_BlockArea* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_BlockArea, blockareaid_)
      + sizeof(Grid_BlockArea::blockareaid_)
      - PROTOBUF_FIELD_OFFSET(Grid_BlockArea, blockrect_)>(
          reinterpret_cast<char*>(&blockrect_),
          reinterpret_cast<char*>(&other->blockrect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_BlockArea::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[7]);
}

// ===================================================================

class Map_BlockArea::_Internal {
 public:
};

Map_BlockArea::Map_BlockArea(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecgrids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Map_BlockArea)
}
Map_BlockArea::Map_BlockArea(const Map_BlockArea& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecgrids_(from.vecgrids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.Map_BlockArea)
}

inline void Map_BlockArea::SharedCtor() {
}

Map_BlockArea::~Map_BlockArea() {
  // @@protoc_insertion_point(destructor:packet.Map_BlockArea)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Map_BlockArea::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Map_BlockArea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Map_BlockArea::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Map_BlockArea)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecgrids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map_BlockArea::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .packet.Grid_BlockArea vecGrids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecgrids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map_BlockArea::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Map_BlockArea)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Grid_BlockArea vecGrids = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecgrids_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecgrids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Map_BlockArea)
  return target;
}

size_t Map_BlockArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Map_BlockArea)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .packet.Grid_BlockArea vecGrids = 1;
  total_size += 1UL * this->_internal_vecgrids_size();
  for (const auto& msg : this->vecgrids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map_BlockArea::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Map_BlockArea::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map_BlockArea::GetClassData() const { return &_class_data_; }

void Map_BlockArea::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Map_BlockArea *>(to)->MergeFrom(
      static_cast<const Map_BlockArea &>(from));
}


void Map_BlockArea::MergeFrom(const Map_BlockArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Map_BlockArea)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecgrids_.MergeFrom(from.vecgrids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map_BlockArea::CopyFrom(const Map_BlockArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Map_BlockArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_BlockArea::IsInitialized() const {
  return true;
}

void Map_BlockArea::InternalSwap(Map_BlockArea* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecgrids_.InternalSwap(&other->vecgrids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Map_BlockArea::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[8]);
}

// ===================================================================

class Grid_MonsterGroup_Grid_MonsterGroupUnit::_Internal {
 public:
  static const ::packet::Grid_Rect& createrect(const Grid_MonsterGroup_Grid_MonsterGroupUnit* msg);
  static const ::packet::Grid_Rotation& rota(const Grid_MonsterGroup_Grid_MonsterGroupUnit* msg);
  static const ::packet::Grid_Point& pos(const Grid_MonsterGroup_Grid_MonsterGroupUnit* msg);
};

const ::packet::Grid_Rect&
Grid_MonsterGroup_Grid_MonsterGroupUnit::_Internal::createrect(const Grid_MonsterGroup_Grid_MonsterGroupUnit* msg) {
  return *msg->createrect_;
}
const ::packet::Grid_Rotation&
Grid_MonsterGroup_Grid_MonsterGroupUnit::_Internal::rota(const Grid_MonsterGroup_Grid_MonsterGroupUnit* msg) {
  return *msg->rota_;
}
const ::packet::Grid_Point&
Grid_MonsterGroup_Grid_MonsterGroupUnit::_Internal::pos(const Grid_MonsterGroup_Grid_MonsterGroupUnit* msg) {
  return *msg->pos_;
}
Grid_MonsterGroup_Grid_MonsterGroupUnit::Grid_MonsterGroup_Grid_MonsterGroupUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
}
Grid_MonsterGroup_Grid_MonsterGroupUnit::Grid_MonsterGroup_Grid_MonsterGroupUnit(const Grid_MonsterGroup_Grid_MonsterGroupUnit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_createrect()) {
    createrect_ = new ::packet::Grid_Rect(*from.createrect_);
  } else {
    createrect_ = nullptr;
  }
  if (from._internal_has_rota()) {
    rota_ = new ::packet::Grid_Rotation(*from.rota_);
  } else {
    rota_ = nullptr;
  }
  if (from._internal_has_pos()) {
    pos_ = new ::packet::Grid_Point(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  monstergroupid_ = from.monstergroupid_;
  // @@protoc_insertion_point(copy_constructor:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
}

inline void Grid_MonsterGroup_Grid_MonsterGroupUnit::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&createrect_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&monstergroupid_) -
    reinterpret_cast<char*>(&createrect_)) + sizeof(monstergroupid_));
}

Grid_MonsterGroup_Grid_MonsterGroupUnit::~Grid_MonsterGroup_Grid_MonsterGroupUnit() {
  // @@protoc_insertion_point(destructor:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_MonsterGroup_Grid_MonsterGroupUnit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete createrect_;
  if (this != internal_default_instance()) delete rota_;
  if (this != internal_default_instance()) delete pos_;
}

void Grid_MonsterGroup_Grid_MonsterGroupUnit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_MonsterGroup_Grid_MonsterGroupUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && createrect_ != nullptr) {
    delete createrect_;
  }
  createrect_ = nullptr;
  if (GetArenaForAllocation() == nullptr && rota_ != nullptr) {
    delete rota_;
  }
  rota_ = nullptr;
  if (GetArenaForAllocation() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  monstergroupid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_MonsterGroup_Grid_MonsterGroupUnit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 monsterGroupId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          monstergroupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rect createRect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_createrect(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Rotation rota = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_rota(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Grid_Point pos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_MonsterGroup_Grid_MonsterGroupUnit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monsterGroupId = 1;
  if (this->_internal_monstergroupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_monstergroupid(), target);
  }

  // .packet.Grid_Rect createRect = 2;
  if (this->_internal_has_createrect()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::createrect(this),
        _Internal::createrect(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Rotation rota = 3;
  if (this->_internal_has_rota()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::rota(this),
        _Internal::rota(this).GetCachedSize(), target, stream);
  }

  // .packet.Grid_Point pos = 4;
  if (this->_internal_has_pos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pos(this),
        _Internal::pos(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  return target;
}

size_t Grid_MonsterGroup_Grid_MonsterGroupUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .packet.Grid_Rect createRect = 2;
  if (this->_internal_has_createrect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *createrect_);
  }

  // .packet.Grid_Rotation rota = 3;
  if (this->_internal_has_rota()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rota_);
  }

  // .packet.Grid_Point pos = 4;
  if (this->_internal_has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // uint32 monsterGroupId = 1;
  if (this->_internal_monstergroupid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_monstergroupid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_MonsterGroup_Grid_MonsterGroupUnit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_MonsterGroup_Grid_MonsterGroupUnit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_MonsterGroup_Grid_MonsterGroupUnit::GetClassData() const { return &_class_data_; }

void Grid_MonsterGroup_Grid_MonsterGroupUnit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_MonsterGroup_Grid_MonsterGroupUnit *>(to)->MergeFrom(
      static_cast<const Grid_MonsterGroup_Grid_MonsterGroupUnit &>(from));
}


void Grid_MonsterGroup_Grid_MonsterGroupUnit::MergeFrom(const Grid_MonsterGroup_Grid_MonsterGroupUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_createrect()) {
    _internal_mutable_createrect()->::packet::Grid_Rect::MergeFrom(from._internal_createrect());
  }
  if (from._internal_has_rota()) {
    _internal_mutable_rota()->::packet::Grid_Rotation::MergeFrom(from._internal_rota());
  }
  if (from._internal_has_pos()) {
    _internal_mutable_pos()->::packet::Grid_Point::MergeFrom(from._internal_pos());
  }
  if (from._internal_monstergroupid() != 0) {
    _internal_set_monstergroupid(from._internal_monstergroupid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_MonsterGroup_Grid_MonsterGroupUnit::CopyFrom(const Grid_MonsterGroup_Grid_MonsterGroupUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_MonsterGroup.Grid_MonsterGroupUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_MonsterGroup_Grid_MonsterGroupUnit::IsInitialized() const {
  return true;
}

void Grid_MonsterGroup_Grid_MonsterGroupUnit::InternalSwap(Grid_MonsterGroup_Grid_MonsterGroupUnit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grid_MonsterGroup_Grid_MonsterGroupUnit, monstergroupid_)
      + sizeof(Grid_MonsterGroup_Grid_MonsterGroupUnit::monstergroupid_)
      - PROTOBUF_FIELD_OFFSET(Grid_MonsterGroup_Grid_MonsterGroupUnit, createrect_)>(
          reinterpret_cast<char*>(&createrect_),
          reinterpret_cast<char*>(&other->createrect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_MonsterGroup_Grid_MonsterGroupUnit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[9]);
}

// ===================================================================

class Grid_MonsterGroup::_Internal {
 public:
};

Grid_MonsterGroup::Grid_MonsterGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecgroups_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Grid_MonsterGroup)
}
Grid_MonsterGroup::Grid_MonsterGroup(const Grid_MonsterGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecgroups_(from.vecgroups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.Grid_MonsterGroup)
}

inline void Grid_MonsterGroup::SharedCtor() {
}

Grid_MonsterGroup::~Grid_MonsterGroup() {
  // @@protoc_insertion_point(destructor:packet.Grid_MonsterGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Grid_MonsterGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Grid_MonsterGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grid_MonsterGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Grid_MonsterGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecgroups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grid_MonsterGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .packet.Grid_MonsterGroup.Grid_MonsterGroupUnit vecGroups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecgroups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grid_MonsterGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Grid_MonsterGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Grid_MonsterGroup.Grid_MonsterGroupUnit vecGroups = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecgroups_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecgroups(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Grid_MonsterGroup)
  return target;
}

size_t Grid_MonsterGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Grid_MonsterGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .packet.Grid_MonsterGroup.Grid_MonsterGroupUnit vecGroups = 1;
  total_size += 1UL * this->_internal_vecgroups_size();
  for (const auto& msg : this->vecgroups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grid_MonsterGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grid_MonsterGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grid_MonsterGroup::GetClassData() const { return &_class_data_; }

void Grid_MonsterGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grid_MonsterGroup *>(to)->MergeFrom(
      static_cast<const Grid_MonsterGroup &>(from));
}


void Grid_MonsterGroup::MergeFrom(const Grid_MonsterGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Grid_MonsterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecgroups_.MergeFrom(from.vecgroups_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grid_MonsterGroup::CopyFrom(const Grid_MonsterGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Grid_MonsterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid_MonsterGroup::IsInitialized() const {
  return true;
}

void Grid_MonsterGroup::InternalSwap(Grid_MonsterGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecgroups_.InternalSwap(&other->vecgroups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Grid_MonsterGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[10]);
}

// ===================================================================

class Map_MonsterGroup::_Internal {
 public:
};

Map_MonsterGroup::Map_MonsterGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecgrids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Map_MonsterGroup)
}
Map_MonsterGroup::Map_MonsterGroup(const Map_MonsterGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecgrids_(from.vecgrids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.Map_MonsterGroup)
}

inline void Map_MonsterGroup::SharedCtor() {
}

Map_MonsterGroup::~Map_MonsterGroup() {
  // @@protoc_insertion_point(destructor:packet.Map_MonsterGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Map_MonsterGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Map_MonsterGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Map_MonsterGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Map_MonsterGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecgrids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map_MonsterGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .packet.Grid_MonsterGroup vecGrids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecgrids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map_MonsterGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Map_MonsterGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Grid_MonsterGroup vecGrids = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecgrids_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecgrids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Map_MonsterGroup)
  return target;
}

size_t Map_MonsterGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Map_MonsterGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .packet.Grid_MonsterGroup vecGrids = 1;
  total_size += 1UL * this->_internal_vecgrids_size();
  for (const auto& msg : this->vecgrids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map_MonsterGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Map_MonsterGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map_MonsterGroup::GetClassData() const { return &_class_data_; }

void Map_MonsterGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Map_MonsterGroup *>(to)->MergeFrom(
      static_cast<const Map_MonsterGroup &>(from));
}


void Map_MonsterGroup::MergeFrom(const Map_MonsterGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Map_MonsterGroup)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecgrids_.MergeFrom(from.vecgrids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map_MonsterGroup::CopyFrom(const Map_MonsterGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Map_MonsterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_MonsterGroup::IsInitialized() const {
  return true;
}

void Map_MonsterGroup::InternalSwap(Map_MonsterGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecgrids_.InternalSwap(&other->vecgrids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Map_MonsterGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[11]);
}

// ===================================================================

class Map_Info::_Internal {
 public:
};

Map_Info::Map_Info(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Map_Info)
}
Map_Info::Map_Info(const Map_Info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:packet.Map_Info)
}

inline void Map_Info::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&width_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

Map_Info::~Map_Info() {
  // @@protoc_insertion_point(destructor:packet.Map_Info)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Map_Info::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Map_Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Map_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Map_Info)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map_Info::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 width = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map_Info::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Map_Info)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_width(), target);
  }

  // uint32 height = 2;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Map_Info)
  return target;
}

size_t Map_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Map_Info)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_width());
  }

  // uint32 height = 2;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map_Info::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Map_Info::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map_Info::GetClassData() const { return &_class_data_; }

void Map_Info::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Map_Info *>(to)->MergeFrom(
      static_cast<const Map_Info &>(from));
}


void Map_Info::MergeFrom(const Map_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Map_Info)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _internal_set_height(from._internal_height());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map_Info::CopyFrom(const Map_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Map_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_Info::IsInitialized() const {
  return true;
}

void Map_Info::InternalSwap(Map_Info* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Map_Info, height_)
      + sizeof(Map_Info::height_)
      - PROTOBUF_FIELD_OFFSET(Map_Info, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Map_Info::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[12]);
}

// ===================================================================

class Map_AllTypes::_Internal {
 public:
  static const ::packet::Map_RigNPC& maprignpc(const Map_AllTypes* msg);
  static const ::packet::Map_Teleporter& maptel(const Map_AllTypes* msg);
  static const ::packet::Map_BlockArea& mapblock(const Map_AllTypes* msg);
  static const ::packet::Map_MonsterGroup& mapmonstergroup(const Map_AllTypes* msg);
};

const ::packet::Map_RigNPC&
Map_AllTypes::_Internal::maprignpc(const Map_AllTypes* msg) {
  return *msg->maprignpc_;
}
const ::packet::Map_Teleporter&
Map_AllTypes::_Internal::maptel(const Map_AllTypes* msg) {
  return *msg->maptel_;
}
const ::packet::Map_BlockArea&
Map_AllTypes::_Internal::mapblock(const Map_AllTypes* msg) {
  return *msg->mapblock_;
}
const ::packet::Map_MonsterGroup&
Map_AllTypes::_Internal::mapmonstergroup(const Map_AllTypes* msg) {
  return *msg->mapmonstergroup_;
}
Map_AllTypes::Map_AllTypes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:packet.Map_AllTypes)
}
Map_AllTypes::Map_AllTypes(const Map_AllTypes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_maprignpc()) {
    maprignpc_ = new ::packet::Map_RigNPC(*from.maprignpc_);
  } else {
    maprignpc_ = nullptr;
  }
  if (from._internal_has_maptel()) {
    maptel_ = new ::packet::Map_Teleporter(*from.maptel_);
  } else {
    maptel_ = nullptr;
  }
  if (from._internal_has_mapblock()) {
    mapblock_ = new ::packet::Map_BlockArea(*from.mapblock_);
  } else {
    mapblock_ = nullptr;
  }
  if (from._internal_has_mapmonstergroup()) {
    mapmonstergroup_ = new ::packet::Map_MonsterGroup(*from.mapmonstergroup_);
  } else {
    mapmonstergroup_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:packet.Map_AllTypes)
}

inline void Map_AllTypes::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&maprignpc_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&maprignpc_)) + sizeof(type_));
}

Map_AllTypes::~Map_AllTypes() {
  // @@protoc_insertion_point(destructor:packet.Map_AllTypes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Map_AllTypes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete maprignpc_;
  if (this != internal_default_instance()) delete maptel_;
  if (this != internal_default_instance()) delete mapblock_;
  if (this != internal_default_instance()) delete mapmonstergroup_;
}

void Map_AllTypes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Map_AllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Map_AllTypes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && maprignpc_ != nullptr) {
    delete maprignpc_;
  }
  maprignpc_ = nullptr;
  if (GetArenaForAllocation() == nullptr && maptel_ != nullptr) {
    delete maptel_;
  }
  maptel_ = nullptr;
  if (GetArenaForAllocation() == nullptr && mapblock_ != nullptr) {
    delete mapblock_;
  }
  mapblock_ = nullptr;
  if (GetArenaForAllocation() == nullptr && mapmonstergroup_ != nullptr) {
    delete mapmonstergroup_;
  }
  mapmonstergroup_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map_AllTypes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .packet.BrushType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::packet::BrushType>(val));
        } else
          goto handle_unusual;
        continue;
      // .packet.Map_RigNPC mapRigNPC = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_maprignpc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Map_Teleporter mapTel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_maptel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Map_BlockArea mapBlock = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_mapblock(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .packet.Map_MonsterGroup mapMonsterGroup = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_mapmonstergroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map_AllTypes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.Map_AllTypes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.BrushType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .packet.Map_RigNPC mapRigNPC = 2;
  if (this->_internal_has_maprignpc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::maprignpc(this),
        _Internal::maprignpc(this).GetCachedSize(), target, stream);
  }

  // .packet.Map_Teleporter mapTel = 3;
  if (this->_internal_has_maptel()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::maptel(this),
        _Internal::maptel(this).GetCachedSize(), target, stream);
  }

  // .packet.Map_BlockArea mapBlock = 4;
  if (this->_internal_has_mapblock()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::mapblock(this),
        _Internal::mapblock(this).GetCachedSize(), target, stream);
  }

  // .packet.Map_MonsterGroup mapMonsterGroup = 5;
  if (this->_internal_has_mapmonstergroup()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::mapmonstergroup(this),
        _Internal::mapmonstergroup(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Map_AllTypes)
  return target;
}

size_t Map_AllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Map_AllTypes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .packet.Map_RigNPC mapRigNPC = 2;
  if (this->_internal_has_maprignpc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maprignpc_);
  }

  // .packet.Map_Teleporter mapTel = 3;
  if (this->_internal_has_maptel()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maptel_);
  }

  // .packet.Map_BlockArea mapBlock = 4;
  if (this->_internal_has_mapblock()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mapblock_);
  }

  // .packet.Map_MonsterGroup mapMonsterGroup = 5;
  if (this->_internal_has_mapmonstergroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mapmonstergroup_);
  }

  // .packet.BrushType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map_AllTypes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Map_AllTypes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map_AllTypes::GetClassData() const { return &_class_data_; }

void Map_AllTypes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Map_AllTypes *>(to)->MergeFrom(
      static_cast<const Map_AllTypes &>(from));
}


void Map_AllTypes::MergeFrom(const Map_AllTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Map_AllTypes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_maprignpc()) {
    _internal_mutable_maprignpc()->::packet::Map_RigNPC::MergeFrom(from._internal_maprignpc());
  }
  if (from._internal_has_maptel()) {
    _internal_mutable_maptel()->::packet::Map_Teleporter::MergeFrom(from._internal_maptel());
  }
  if (from._internal_has_mapblock()) {
    _internal_mutable_mapblock()->::packet::Map_BlockArea::MergeFrom(from._internal_mapblock());
  }
  if (from._internal_has_mapmonstergroup()) {
    _internal_mutable_mapmonstergroup()->::packet::Map_MonsterGroup::MergeFrom(from._internal_mapmonstergroup());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map_AllTypes::CopyFrom(const Map_AllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Map_AllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_AllTypes::IsInitialized() const {
  return true;
}

void Map_AllTypes::InternalSwap(Map_AllTypes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Map_AllTypes, type_)
      + sizeof(Map_AllTypes::type_)
      - PROTOBUF_FIELD_OFFSET(Map_AllTypes, maprignpc_)>(
          reinterpret_cast<char*>(&maprignpc_),
          reinterpret_cast<char*>(&other->maprignpc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Map_AllTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fcfg_5fins_2eproto_getter, &descriptor_table_msg_5fcfg_5fins_2eproto_once,
      file_level_metadata_msg_5fcfg_5fins_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace packet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::packet::Grid_Point*
Arena::CreateMaybeMessage< ::packet::Grid_Point >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_Point >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_Rotation*
Arena::CreateMaybeMessage< ::packet::Grid_Rotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_Rotation >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_Rect*
Arena::CreateMaybeMessage< ::packet::Grid_Rect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_Rect >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_RigNPC*
Arena::CreateMaybeMessage< ::packet::Grid_RigNPC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_RigNPC >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Map_RigNPC*
Arena::CreateMaybeMessage< ::packet::Map_RigNPC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Map_RigNPC >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_Teleporter*
Arena::CreateMaybeMessage< ::packet::Grid_Teleporter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_Teleporter >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Map_Teleporter*
Arena::CreateMaybeMessage< ::packet::Map_Teleporter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Map_Teleporter >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_BlockArea*
Arena::CreateMaybeMessage< ::packet::Grid_BlockArea >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_BlockArea >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Map_BlockArea*
Arena::CreateMaybeMessage< ::packet::Map_BlockArea >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Map_BlockArea >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit*
Arena::CreateMaybeMessage< ::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_MonsterGroup_Grid_MonsterGroupUnit >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Grid_MonsterGroup*
Arena::CreateMaybeMessage< ::packet::Grid_MonsterGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Grid_MonsterGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Map_MonsterGroup*
Arena::CreateMaybeMessage< ::packet::Map_MonsterGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Map_MonsterGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Map_Info*
Arena::CreateMaybeMessage< ::packet::Map_Info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Map_Info >(arena);
}
template<> PROTOBUF_NOINLINE ::packet::Map_AllTypes*
Arena::CreateMaybeMessage< ::packet::Map_AllTypes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::packet::Map_AllTypes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
