// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenesvr.proto

#include "scenesvr.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace inner {
PROTOBUF_CONSTEXPR InnerScenesvr::InnerScenesvr(
    ::_pbi::ConstantInitialized)
  : llfromuser_(uint64_t{0u})
  , _oneof_case_{}{}
struct InnerScenesvrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvrDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvrDefaultTypeInternal() {}
  union {
    InnerScenesvr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvrDefaultTypeInternal _InnerScenesvr_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_Test::InnerScenesvr_Fromfriend_Test(
    ::_pbi::ConstantInitialized){}
struct InnerScenesvr_Fromfriend_TestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_TestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_TestDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_Test _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_TestDefaultTypeInternal _InnerScenesvr_Fromfriend_Test_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_ReturnItem::InnerScenesvr_Fromfriend_ReturnItem(
    ::_pbi::ConstantInitialized)
  : lltouser_(uint64_t{0u})
  , uiitemid_(0u)
  , uicount_(0u)
  , bbind_(false){}
struct InnerScenesvr_Fromfriend_ReturnItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_ReturnItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_ReturnItemDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_ReturnItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_ReturnItemDefaultTypeInternal _InnerScenesvr_Fromfriend_ReturnItem_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftReceived::InnerScenesvr_Fromfriend_GiftReceived(
    ::_pbi::ConstantInitialized)
  : vectorolelist_()
  , _vectorolelist_cached_byte_size_(0)
  , llgiftuid_(uint64_t{0u})
  , llrecver_(uint64_t{0u})
  , uiitemid_(0u)
  , uicount_(0u){}
struct InnerScenesvr_Fromfriend_GiftReceivedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftReceivedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_GiftReceivedDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_GiftReceived _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_GiftReceivedDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftReceived_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftEmail::InnerScenesvr_Fromfriend_GiftEmail(
    ::_pbi::ConstantInitialized)
  : lltouser_(uint64_t{0u})
  , llsender_(uint64_t{0u})
  , uiitemid_(0u)
  , uicount_(0u)
  , llgiftud_(uint64_t{0u}){}
struct InnerScenesvr_Fromfriend_GiftEmailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftEmailDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_GiftEmailDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_GiftEmail _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_GiftEmailDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftEmail_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftExpire::InnerScenesvr_Fromfriend_GiftExpire(
    ::_pbi::ConstantInitialized)
  : lltouser_(uint64_t{0u})
  , llrecver_(uint64_t{0u})
  , uiitemid_(0u)
  , uicount_(0u)
  , llgiftuid_(uint64_t{0u}){}
struct InnerScenesvr_Fromfriend_GiftExpireDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftExpireDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_GiftExpireDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_GiftExpire _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_GiftExpireDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftExpire_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftVersion::InnerScenesvr_Fromfriend_GiftVersion(
    ::_pbi::ConstantInitialized)
  : lltouser_(uint64_t{0u})
  , uiversionid_(0u){}
struct InnerScenesvr_Fromfriend_GiftVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftVersionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_GiftVersionDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_GiftVersion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_GiftVersionDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftVersion_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_FriendList::InnerScenesvr_Fromfriend_FriendList(
    ::_pbi::ConstantInitialized)
  : vecfriendlist_(nullptr)
  , lltouser_(uint64_t{0u}){}
struct InnerScenesvr_Fromfriend_FriendListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_FriendListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_FriendListDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_FriendList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_FriendListDefaultTypeInternal _InnerScenesvr_Fromfriend_FriendList_default_instance_;
PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_FriendUpdate::InnerScenesvr_Fromfriend_FriendUpdate(
    ::_pbi::ConstantInitialized)
  : oonefriend_(nullptr)
  , lltouser_(uint64_t{0u}){}
struct InnerScenesvr_Fromfriend_FriendUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_FriendUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerScenesvr_Fromfriend_FriendUpdateDefaultTypeInternal() {}
  union {
    InnerScenesvr_Fromfriend_FriendUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerScenesvr_Fromfriend_FriendUpdateDefaultTypeInternal _InnerScenesvr_Fromfriend_FriendUpdate_default_instance_;
}  // namespace inner
static ::_pb::Metadata file_level_metadata_scenesvr_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_scenesvr_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_scenesvr_2eproto = nullptr;

const uint32_t TableStruct_scenesvr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr, llfromuser_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr, Fromfriend_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_Test, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_ReturnItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_ReturnItem, lltouser_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_ReturnItem, uiitemid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_ReturnItem, uicount_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_ReturnItem, bbind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftReceived, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftReceived, vectorolelist_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftReceived, llgiftuid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftReceived, llrecver_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftReceived, uiitemid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftReceived, uicount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftEmail, lltouser_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftEmail, llsender_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftEmail, uiitemid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftEmail, uicount_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftEmail, llgiftud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftExpire, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftExpire, lltouser_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftExpire, llrecver_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftExpire, uiitemid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftExpire, uicount_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftExpire, llgiftuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftVersion, lltouser_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_GiftVersion, uiversionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_FriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_FriendList, lltouser_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_FriendList, vecfriendlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_FriendUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_FriendUpdate, lltouser_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerScenesvr_Fromfriend_FriendUpdate, oonefriend_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::inner::InnerScenesvr)},
  { 16, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_Test)},
  { 22, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_ReturnItem)},
  { 32, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_GiftReceived)},
  { 43, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_GiftEmail)},
  { 54, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_GiftExpire)},
  { 65, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_GiftVersion)},
  { 73, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_FriendList)},
  { 81, -1, -1, sizeof(::inner::InnerScenesvr_Fromfriend_FriendUpdate)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::inner::_InnerScenesvr_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_Test_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_ReturnItem_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_GiftReceived_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_GiftEmail_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_GiftExpire_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_GiftVersion_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_FriendList_default_instance_._instance,
  &::inner::_InnerScenesvr_Fromfriend_FriendUpdate_default_instance_._instance,
};

const char descriptor_table_protodef_scenesvr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016scenesvr.proto\022\005inner\032\021innerfriend.pro"
  "to\"\225\005\n\rInnerScenesvr\022\022\n\nllFromUser\030\001 \001(\004"
  "\022\?\n\017fromfriend_test\030e \001(\0132$.inner.InnerS"
  "cenesvr_Fromfriend_TestH\000\022K\n\025fromfriend_"
  "returnitem\030f \001(\0132*.inner.InnerScenesvr_F"
  "romfriend_ReturnItemH\000\022O\n\027fromfriend_gif"
  "treceived\030g \001(\0132,.inner.InnerScenesvr_Fr"
  "omfriend_GiftReceivedH\000\022I\n\024fromfriend_gi"
  "ftemail\030h \001(\0132).inner.InnerScenesvr_From"
  "friend_GiftEmailH\000\022K\n\025fromfriend_giftexp"
  "ire\030i \001(\0132*.inner.InnerScenesvr_Fromfrie"
  "nd_GiftExpireH\000\022M\n\026fromfriend_giftversio"
  "n\030j \001(\0132+.inner.InnerScenesvr_Fromfriend"
  "_GiftVersionH\000\022K\n\025fromfriend_friendlist\030"
  "k \001(\0132*.inner.InnerScenesvr_Fromfriend_F"
  "riendListH\000\022O\n\027fromfriend_friendupdate\030l"
  " \001(\0132,.inner.InnerScenesvr_Fromfriend_Fr"
  "iendUpdateH\000B\014\n\nFromfriend\"\037\n\035InnerScene"
  "svr_Fromfriend_Test\"i\n#InnerScenesvr_Fro"
  "mfriend_ReturnItem\022\020\n\010llToUser\030\001 \001(\004\022\020\n\010"
  "uiItemId\030\002 \001(\r\022\017\n\007uiCount\030\003 \001(\r\022\r\n\005bBind"
  "\030\004 \001(\010\"\206\001\n%InnerScenesvr_Fromfriend_Gift"
  "Received\022\025\n\rvecToRoleList\030\001 \003(\004\022\021\n\tllGif"
  "tUid\030\002 \001(\004\022\020\n\010llRecver\030\003 \001(\004\022\020\n\010uiItemId"
  "\030\004 \001(\r\022\017\n\007uiCount\030\005 \001(\r\"}\n\"InnerScenesvr"
  "_Fromfriend_GiftEmail\022\020\n\010llToUser\030\001 \001(\004\022"
  "\020\n\010llSender\030\002 \001(\004\022\020\n\010uiItemId\030\003 \001(\r\022\017\n\007u"
  "iCount\030\004 \001(\r\022\020\n\010llGiftUd\030\005 \001(\004\"\177\n#InnerS"
  "cenesvr_Fromfriend_GiftExpire\022\020\n\010llToUse"
  "r\030\001 \001(\004\022\020\n\010llRecver\030\002 \001(\004\022\020\n\010uiItemId\030\003 "
  "\001(\r\022\017\n\007uiCount\030\004 \001(\r\022\021\n\tllGiftUid\030\005 \001(\004\""
  "M\n$InnerScenesvr_Fromfriend_GiftVersion\022"
  "\020\n\010llToUser\030\001 \001(\004\022\023\n\013uiVersionId\030\002 \001(\r\"f"
  "\n#InnerScenesvr_Fromfriend_FriendList\022\020\n"
  "\010llToUser\030\001 \001(\004\022-\n\rvecFriendList\030\002 \001(\0132\026"
  ".inner.InnerFriendList\"a\n%InnerScenesvr_"
  "Fromfriend_FriendUpdate\022\020\n\010llToUser\030\001 \001("
  "\004\022&\n\noOneFriend\030\002 \001(\0132\022.inner.InnerFrien"
  "db\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_scenesvr_2eproto_deps[1] = {
  &::descriptor_table_innerfriend_2eproto,
};
static ::_pbi::once_flag descriptor_table_scenesvr_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_scenesvr_2eproto = {
    false, false, 1529, descriptor_table_protodef_scenesvr_2eproto,
    "scenesvr.proto",
    &descriptor_table_scenesvr_2eproto_once, descriptor_table_scenesvr_2eproto_deps, 1, 9,
    schemas, file_default_instances, TableStruct_scenesvr_2eproto::offsets,
    file_level_metadata_scenesvr_2eproto, file_level_enum_descriptors_scenesvr_2eproto,
    file_level_service_descriptors_scenesvr_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_scenesvr_2eproto_getter() {
  return &descriptor_table_scenesvr_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_scenesvr_2eproto(&descriptor_table_scenesvr_2eproto);
namespace inner {

// ===================================================================

class InnerScenesvr::_Internal {
 public:
  static const ::inner::InnerScenesvr_Fromfriend_Test& fromfriend_test(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_ReturnItem& fromfriend_returnitem(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_GiftReceived& fromfriend_giftreceived(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_GiftEmail& fromfriend_giftemail(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_GiftExpire& fromfriend_giftexpire(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_GiftVersion& fromfriend_giftversion(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_FriendList& fromfriend_friendlist(const InnerScenesvr* msg);
  static const ::inner::InnerScenesvr_Fromfriend_FriendUpdate& fromfriend_friendupdate(const InnerScenesvr* msg);
};

const ::inner::InnerScenesvr_Fromfriend_Test&
InnerScenesvr::_Internal::fromfriend_test(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_test_;
}
const ::inner::InnerScenesvr_Fromfriend_ReturnItem&
InnerScenesvr::_Internal::fromfriend_returnitem(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_returnitem_;
}
const ::inner::InnerScenesvr_Fromfriend_GiftReceived&
InnerScenesvr::_Internal::fromfriend_giftreceived(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_giftreceived_;
}
const ::inner::InnerScenesvr_Fromfriend_GiftEmail&
InnerScenesvr::_Internal::fromfriend_giftemail(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_giftemail_;
}
const ::inner::InnerScenesvr_Fromfriend_GiftExpire&
InnerScenesvr::_Internal::fromfriend_giftexpire(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_giftexpire_;
}
const ::inner::InnerScenesvr_Fromfriend_GiftVersion&
InnerScenesvr::_Internal::fromfriend_giftversion(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_giftversion_;
}
const ::inner::InnerScenesvr_Fromfriend_FriendList&
InnerScenesvr::_Internal::fromfriend_friendlist(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_friendlist_;
}
const ::inner::InnerScenesvr_Fromfriend_FriendUpdate&
InnerScenesvr::_Internal::fromfriend_friendupdate(const InnerScenesvr* msg) {
  return *msg->Fromfriend_.fromfriend_friendupdate_;
}
void InnerScenesvr::set_allocated_fromfriend_test(::inner::InnerScenesvr_Fromfriend_Test* fromfriend_test) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_test) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_test);
    if (message_arena != submessage_arena) {
      fromfriend_test = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_test, submessage_arena);
    }
    set_has_fromfriend_test();
    Fromfriend_.fromfriend_test_ = fromfriend_test;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_test)
}
void InnerScenesvr::set_allocated_fromfriend_returnitem(::inner::InnerScenesvr_Fromfriend_ReturnItem* fromfriend_returnitem) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_returnitem) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_returnitem);
    if (message_arena != submessage_arena) {
      fromfriend_returnitem = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_returnitem, submessage_arena);
    }
    set_has_fromfriend_returnitem();
    Fromfriend_.fromfriend_returnitem_ = fromfriend_returnitem;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_returnitem)
}
void InnerScenesvr::set_allocated_fromfriend_giftreceived(::inner::InnerScenesvr_Fromfriend_GiftReceived* fromfriend_giftreceived) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_giftreceived) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_giftreceived);
    if (message_arena != submessage_arena) {
      fromfriend_giftreceived = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_giftreceived, submessage_arena);
    }
    set_has_fromfriend_giftreceived();
    Fromfriend_.fromfriend_giftreceived_ = fromfriend_giftreceived;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_giftreceived)
}
void InnerScenesvr::set_allocated_fromfriend_giftemail(::inner::InnerScenesvr_Fromfriend_GiftEmail* fromfriend_giftemail) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_giftemail) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_giftemail);
    if (message_arena != submessage_arena) {
      fromfriend_giftemail = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_giftemail, submessage_arena);
    }
    set_has_fromfriend_giftemail();
    Fromfriend_.fromfriend_giftemail_ = fromfriend_giftemail;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_giftemail)
}
void InnerScenesvr::set_allocated_fromfriend_giftexpire(::inner::InnerScenesvr_Fromfriend_GiftExpire* fromfriend_giftexpire) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_giftexpire) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_giftexpire);
    if (message_arena != submessage_arena) {
      fromfriend_giftexpire = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_giftexpire, submessage_arena);
    }
    set_has_fromfriend_giftexpire();
    Fromfriend_.fromfriend_giftexpire_ = fromfriend_giftexpire;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_giftexpire)
}
void InnerScenesvr::set_allocated_fromfriend_giftversion(::inner::InnerScenesvr_Fromfriend_GiftVersion* fromfriend_giftversion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_giftversion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_giftversion);
    if (message_arena != submessage_arena) {
      fromfriend_giftversion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_giftversion, submessage_arena);
    }
    set_has_fromfriend_giftversion();
    Fromfriend_.fromfriend_giftversion_ = fromfriend_giftversion;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_giftversion)
}
void InnerScenesvr::set_allocated_fromfriend_friendlist(::inner::InnerScenesvr_Fromfriend_FriendList* fromfriend_friendlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_friendlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_friendlist);
    if (message_arena != submessage_arena) {
      fromfriend_friendlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_friendlist, submessage_arena);
    }
    set_has_fromfriend_friendlist();
    Fromfriend_.fromfriend_friendlist_ = fromfriend_friendlist;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_friendlist)
}
void InnerScenesvr::set_allocated_fromfriend_friendupdate(::inner::InnerScenesvr_Fromfriend_FriendUpdate* fromfriend_friendupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromfriend();
  if (fromfriend_friendupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromfriend_friendupdate);
    if (message_arena != submessage_arena) {
      fromfriend_friendupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromfriend_friendupdate, submessage_arena);
    }
    set_has_fromfriend_friendupdate();
    Fromfriend_.fromfriend_friendupdate_ = fromfriend_friendupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr.fromfriend_friendupdate)
}
InnerScenesvr::InnerScenesvr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr)
}
InnerScenesvr::InnerScenesvr(const InnerScenesvr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  llfromuser_ = from.llfromuser_;
  clear_has_Fromfriend();
  switch (from.Fromfriend_case()) {
    case kFromfriendTest: {
      _internal_mutable_fromfriend_test()->::inner::InnerScenesvr_Fromfriend_Test::MergeFrom(from._internal_fromfriend_test());
      break;
    }
    case kFromfriendReturnitem: {
      _internal_mutable_fromfriend_returnitem()->::inner::InnerScenesvr_Fromfriend_ReturnItem::MergeFrom(from._internal_fromfriend_returnitem());
      break;
    }
    case kFromfriendGiftreceived: {
      _internal_mutable_fromfriend_giftreceived()->::inner::InnerScenesvr_Fromfriend_GiftReceived::MergeFrom(from._internal_fromfriend_giftreceived());
      break;
    }
    case kFromfriendGiftemail: {
      _internal_mutable_fromfriend_giftemail()->::inner::InnerScenesvr_Fromfriend_GiftEmail::MergeFrom(from._internal_fromfriend_giftemail());
      break;
    }
    case kFromfriendGiftexpire: {
      _internal_mutable_fromfriend_giftexpire()->::inner::InnerScenesvr_Fromfriend_GiftExpire::MergeFrom(from._internal_fromfriend_giftexpire());
      break;
    }
    case kFromfriendGiftversion: {
      _internal_mutable_fromfriend_giftversion()->::inner::InnerScenesvr_Fromfriend_GiftVersion::MergeFrom(from._internal_fromfriend_giftversion());
      break;
    }
    case kFromfriendFriendlist: {
      _internal_mutable_fromfriend_friendlist()->::inner::InnerScenesvr_Fromfriend_FriendList::MergeFrom(from._internal_fromfriend_friendlist());
      break;
    }
    case kFromfriendFriendupdate: {
      _internal_mutable_fromfriend_friendupdate()->::inner::InnerScenesvr_Fromfriend_FriendUpdate::MergeFrom(from._internal_fromfriend_friendupdate());
      break;
    }
    case FROMFRIEND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr)
}

inline void InnerScenesvr::SharedCtor() {
llfromuser_ = uint64_t{0u};
clear_has_Fromfriend();
}

InnerScenesvr::~InnerScenesvr() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Fromfriend()) {
    clear_Fromfriend();
  }
}

void InnerScenesvr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr::clear_Fromfriend() {
// @@protoc_insertion_point(one_of_clear_start:inner.InnerScenesvr)
  switch (Fromfriend_case()) {
    case kFromfriendTest: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_test_;
      }
      break;
    }
    case kFromfriendReturnitem: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_returnitem_;
      }
      break;
    }
    case kFromfriendGiftreceived: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_giftreceived_;
      }
      break;
    }
    case kFromfriendGiftemail: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_giftemail_;
      }
      break;
    }
    case kFromfriendGiftexpire: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_giftexpire_;
      }
      break;
    }
    case kFromfriendGiftversion: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_giftversion_;
      }
      break;
    }
    case kFromfriendFriendlist: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_friendlist_;
      }
      break;
    }
    case kFromfriendFriendupdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromfriend_.fromfriend_friendupdate_;
      }
      break;
    }
    case FROMFRIEND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FROMFRIEND_NOT_SET;
}


void InnerScenesvr::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  llfromuser_ = uint64_t{0u};
  clear_Fromfriend();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llFromUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llfromuser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_Test fromfriend_test = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_test(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_ReturnItem fromfriend_returnitem = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_returnitem(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_GiftReceived fromfriend_giftreceived = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_giftreceived(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_GiftEmail fromfriend_giftemail = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_giftemail(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_GiftExpire fromfriend_giftexpire = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_giftexpire(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_GiftVersion fromfriend_giftversion = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_giftversion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_FriendList fromfriend_friendlist = 107;
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_friendlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerScenesvr_Fromfriend_FriendUpdate fromfriend_friendupdate = 108;
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromfriend_friendupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llFromUser = 1;
  if (this->_internal_llfromuser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_llfromuser(), target);
  }

  // .inner.InnerScenesvr_Fromfriend_Test fromfriend_test = 101;
  if (_internal_has_fromfriend_test()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::fromfriend_test(this),
        _Internal::fromfriend_test(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_ReturnItem fromfriend_returnitem = 102;
  if (_internal_has_fromfriend_returnitem()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(102, _Internal::fromfriend_returnitem(this),
        _Internal::fromfriend_returnitem(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_GiftReceived fromfriend_giftreceived = 103;
  if (_internal_has_fromfriend_giftreceived()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(103, _Internal::fromfriend_giftreceived(this),
        _Internal::fromfriend_giftreceived(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_GiftEmail fromfriend_giftemail = 104;
  if (_internal_has_fromfriend_giftemail()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(104, _Internal::fromfriend_giftemail(this),
        _Internal::fromfriend_giftemail(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_GiftExpire fromfriend_giftexpire = 105;
  if (_internal_has_fromfriend_giftexpire()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(105, _Internal::fromfriend_giftexpire(this),
        _Internal::fromfriend_giftexpire(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_GiftVersion fromfriend_giftversion = 106;
  if (_internal_has_fromfriend_giftversion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(106, _Internal::fromfriend_giftversion(this),
        _Internal::fromfriend_giftversion(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_FriendList fromfriend_friendlist = 107;
  if (_internal_has_fromfriend_friendlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(107, _Internal::fromfriend_friendlist(this),
        _Internal::fromfriend_friendlist(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerScenesvr_Fromfriend_FriendUpdate fromfriend_friendupdate = 108;
  if (_internal_has_fromfriend_friendupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(108, _Internal::fromfriend_friendupdate(this),
        _Internal::fromfriend_friendupdate(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr)
  return target;
}

size_t InnerScenesvr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llFromUser = 1;
  if (this->_internal_llfromuser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llfromuser());
  }

  switch (Fromfriend_case()) {
    // .inner.InnerScenesvr_Fromfriend_Test fromfriend_test = 101;
    case kFromfriendTest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_test_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_ReturnItem fromfriend_returnitem = 102;
    case kFromfriendReturnitem: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_returnitem_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_GiftReceived fromfriend_giftreceived = 103;
    case kFromfriendGiftreceived: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_giftreceived_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_GiftEmail fromfriend_giftemail = 104;
    case kFromfriendGiftemail: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_giftemail_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_GiftExpire fromfriend_giftexpire = 105;
    case kFromfriendGiftexpire: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_giftexpire_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_GiftVersion fromfriend_giftversion = 106;
    case kFromfriendGiftversion: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_giftversion_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_FriendList fromfriend_friendlist = 107;
    case kFromfriendFriendlist: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_friendlist_);
      break;
    }
    // .inner.InnerScenesvr_Fromfriend_FriendUpdate fromfriend_friendupdate = 108;
    case kFromfriendFriendupdate: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromfriend_.fromfriend_friendupdate_);
      break;
    }
    case FROMFRIEND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr::GetClassData() const { return &_class_data_; }

void InnerScenesvr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr *>(to)->MergeFrom(
      static_cast<const InnerScenesvr &>(from));
}


void InnerScenesvr::MergeFrom(const InnerScenesvr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_llfromuser() != 0) {
    _internal_set_llfromuser(from._internal_llfromuser());
  }
  switch (from.Fromfriend_case()) {
    case kFromfriendTest: {
      _internal_mutable_fromfriend_test()->::inner::InnerScenesvr_Fromfriend_Test::MergeFrom(from._internal_fromfriend_test());
      break;
    }
    case kFromfriendReturnitem: {
      _internal_mutable_fromfriend_returnitem()->::inner::InnerScenesvr_Fromfriend_ReturnItem::MergeFrom(from._internal_fromfriend_returnitem());
      break;
    }
    case kFromfriendGiftreceived: {
      _internal_mutable_fromfriend_giftreceived()->::inner::InnerScenesvr_Fromfriend_GiftReceived::MergeFrom(from._internal_fromfriend_giftreceived());
      break;
    }
    case kFromfriendGiftemail: {
      _internal_mutable_fromfriend_giftemail()->::inner::InnerScenesvr_Fromfriend_GiftEmail::MergeFrom(from._internal_fromfriend_giftemail());
      break;
    }
    case kFromfriendGiftexpire: {
      _internal_mutable_fromfriend_giftexpire()->::inner::InnerScenesvr_Fromfriend_GiftExpire::MergeFrom(from._internal_fromfriend_giftexpire());
      break;
    }
    case kFromfriendGiftversion: {
      _internal_mutable_fromfriend_giftversion()->::inner::InnerScenesvr_Fromfriend_GiftVersion::MergeFrom(from._internal_fromfriend_giftversion());
      break;
    }
    case kFromfriendFriendlist: {
      _internal_mutable_fromfriend_friendlist()->::inner::InnerScenesvr_Fromfriend_FriendList::MergeFrom(from._internal_fromfriend_friendlist());
      break;
    }
    case kFromfriendFriendupdate: {
      _internal_mutable_fromfriend_friendupdate()->::inner::InnerScenesvr_Fromfriend_FriendUpdate::MergeFrom(from._internal_fromfriend_friendupdate());
      break;
    }
    case FROMFRIEND_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr::CopyFrom(const InnerScenesvr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr::IsInitialized() const {
  return true;
}

void InnerScenesvr::InternalSwap(InnerScenesvr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(llfromuser_, other->llfromuser_);
  swap(Fromfriend_, other->Fromfriend_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[0]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_Test::_Internal {
 public:
};

InnerScenesvr_Fromfriend_Test::InnerScenesvr_Fromfriend_Test(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_Test)
}
InnerScenesvr_Fromfriend_Test::InnerScenesvr_Fromfriend_Test(const InnerScenesvr_Fromfriend_Test& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_Test)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_Test::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_Test::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_Test::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[1]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_ReturnItem::_Internal {
 public:
};

InnerScenesvr_Fromfriend_ReturnItem::InnerScenesvr_Fromfriend_ReturnItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_ReturnItem)
}
InnerScenesvr_Fromfriend_ReturnItem::InnerScenesvr_Fromfriend_ReturnItem(const InnerScenesvr_Fromfriend_ReturnItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lltouser_, &from.lltouser_,
    static_cast<size_t>(reinterpret_cast<char*>(&bbind_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(bbind_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_ReturnItem)
}

inline void InnerScenesvr_Fromfriend_ReturnItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lltouser_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bbind_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(bbind_));
}

InnerScenesvr_Fromfriend_ReturnItem::~InnerScenesvr_Fromfriend_ReturnItem() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_ReturnItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_ReturnItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerScenesvr_Fromfriend_ReturnItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_ReturnItem::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_ReturnItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lltouser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bbind_) -
      reinterpret_cast<char*>(&lltouser_)) + sizeof(bbind_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_ReturnItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llToUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lltouser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiItemId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uicount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bBind = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          bbind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_ReturnItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_ReturnItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lltouser(), target);
  }

  // uint32 uiItemId = 2;
  if (this->_internal_uiitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uiitemid(), target);
  }

  // uint32 uiCount = 3;
  if (this->_internal_uicount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uicount(), target);
  }

  // bool bBind = 4;
  if (this->_internal_bbind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_bbind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_ReturnItem)
  return target;
}

size_t InnerScenesvr_Fromfriend_ReturnItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_ReturnItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lltouser());
  }

  // uint32 uiItemId = 2;
  if (this->_internal_uiitemid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiitemid());
  }

  // uint32 uiCount = 3;
  if (this->_internal_uicount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicount());
  }

  // bool bBind = 4;
  if (this->_internal_bbind() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_ReturnItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_ReturnItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_ReturnItem::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_ReturnItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_ReturnItem *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_ReturnItem &>(from));
}


void InnerScenesvr_Fromfriend_ReturnItem::MergeFrom(const InnerScenesvr_Fromfriend_ReturnItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_ReturnItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lltouser() != 0) {
    _internal_set_lltouser(from._internal_lltouser());
  }
  if (from._internal_uiitemid() != 0) {
    _internal_set_uiitemid(from._internal_uiitemid());
  }
  if (from._internal_uicount() != 0) {
    _internal_set_uicount(from._internal_uicount());
  }
  if (from._internal_bbind() != 0) {
    _internal_set_bbind(from._internal_bbind());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_ReturnItem::CopyFrom(const InnerScenesvr_Fromfriend_ReturnItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_ReturnItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_ReturnItem::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_ReturnItem::InternalSwap(InnerScenesvr_Fromfriend_ReturnItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_ReturnItem, bbind_)
      + sizeof(InnerScenesvr_Fromfriend_ReturnItem::bbind_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_ReturnItem, lltouser_)>(
          reinterpret_cast<char*>(&lltouser_),
          reinterpret_cast<char*>(&other->lltouser_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_ReturnItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[2]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_GiftReceived::_Internal {
 public:
};

InnerScenesvr_Fromfriend_GiftReceived::InnerScenesvr_Fromfriend_GiftReceived(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vectorolelist_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_GiftReceived)
}
InnerScenesvr_Fromfriend_GiftReceived::InnerScenesvr_Fromfriend_GiftReceived(const InnerScenesvr_Fromfriend_GiftReceived& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vectorolelist_(from.vectorolelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&llgiftuid_, &from.llgiftuid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uicount_) -
    reinterpret_cast<char*>(&llgiftuid_)) + sizeof(uicount_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_GiftReceived)
}

inline void InnerScenesvr_Fromfriend_GiftReceived::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llgiftuid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uicount_) -
    reinterpret_cast<char*>(&llgiftuid_)) + sizeof(uicount_));
}

InnerScenesvr_Fromfriend_GiftReceived::~InnerScenesvr_Fromfriend_GiftReceived() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_GiftReceived)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_GiftReceived::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerScenesvr_Fromfriend_GiftReceived::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_GiftReceived::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_GiftReceived)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vectorolelist_.Clear();
  ::memset(&llgiftuid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uicount_) -
      reinterpret_cast<char*>(&llgiftuid_)) + sizeof(uicount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_GiftReceived::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 vecToRoleList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_vectorolelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_vectorolelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 llGiftUid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          llgiftuid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 llRecver = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          llrecver_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiItemId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uiitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uicount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_GiftReceived::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_GiftReceived)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 vecToRoleList = 1;
  {
    int byte_size = _vectorolelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_vectorolelist(), byte_size, target);
    }
  }

  // uint64 llGiftUid = 2;
  if (this->_internal_llgiftuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_llgiftuid(), target);
  }

  // uint64 llRecver = 3;
  if (this->_internal_llrecver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_llrecver(), target);
  }

  // uint32 uiItemId = 4;
  if (this->_internal_uiitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_uiitemid(), target);
  }

  // uint32 uiCount = 5;
  if (this->_internal_uicount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uicount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_GiftReceived)
  return target;
}

size_t InnerScenesvr_Fromfriend_GiftReceived::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_GiftReceived)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 vecToRoleList = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->vectorolelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _vectorolelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 llGiftUid = 2;
  if (this->_internal_llgiftuid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llgiftuid());
  }

  // uint64 llRecver = 3;
  if (this->_internal_llrecver() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llrecver());
  }

  // uint32 uiItemId = 4;
  if (this->_internal_uiitemid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiitemid());
  }

  // uint32 uiCount = 5;
  if (this->_internal_uicount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_GiftReceived::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_GiftReceived::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_GiftReceived::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_GiftReceived::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_GiftReceived *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_GiftReceived &>(from));
}


void InnerScenesvr_Fromfriend_GiftReceived::MergeFrom(const InnerScenesvr_Fromfriend_GiftReceived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_GiftReceived)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vectorolelist_.MergeFrom(from.vectorolelist_);
  if (from._internal_llgiftuid() != 0) {
    _internal_set_llgiftuid(from._internal_llgiftuid());
  }
  if (from._internal_llrecver() != 0) {
    _internal_set_llrecver(from._internal_llrecver());
  }
  if (from._internal_uiitemid() != 0) {
    _internal_set_uiitemid(from._internal_uiitemid());
  }
  if (from._internal_uicount() != 0) {
    _internal_set_uicount(from._internal_uicount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_GiftReceived::CopyFrom(const InnerScenesvr_Fromfriend_GiftReceived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_GiftReceived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_GiftReceived::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_GiftReceived::InternalSwap(InnerScenesvr_Fromfriend_GiftReceived* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vectorolelist_.InternalSwap(&other->vectorolelist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftReceived, uicount_)
      + sizeof(InnerScenesvr_Fromfriend_GiftReceived::uicount_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftReceived, llgiftuid_)>(
          reinterpret_cast<char*>(&llgiftuid_),
          reinterpret_cast<char*>(&other->llgiftuid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_GiftReceived::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[3]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_GiftEmail::_Internal {
 public:
};

InnerScenesvr_Fromfriend_GiftEmail::InnerScenesvr_Fromfriend_GiftEmail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_GiftEmail)
}
InnerScenesvr_Fromfriend_GiftEmail::InnerScenesvr_Fromfriend_GiftEmail(const InnerScenesvr_Fromfriend_GiftEmail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lltouser_, &from.lltouser_,
    static_cast<size_t>(reinterpret_cast<char*>(&llgiftud_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(llgiftud_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_GiftEmail)
}

inline void InnerScenesvr_Fromfriend_GiftEmail::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lltouser_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&llgiftud_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(llgiftud_));
}

InnerScenesvr_Fromfriend_GiftEmail::~InnerScenesvr_Fromfriend_GiftEmail() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_GiftEmail)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_GiftEmail::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerScenesvr_Fromfriend_GiftEmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_GiftEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_GiftEmail)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lltouser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llgiftud_) -
      reinterpret_cast<char*>(&lltouser_)) + sizeof(llgiftud_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_GiftEmail::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llToUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lltouser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 llSender = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          llsender_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiItemId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uiitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uicount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 llGiftUd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          llgiftud_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_GiftEmail::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_GiftEmail)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lltouser(), target);
  }

  // uint64 llSender = 2;
  if (this->_internal_llsender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_llsender(), target);
  }

  // uint32 uiItemId = 3;
  if (this->_internal_uiitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uiitemid(), target);
  }

  // uint32 uiCount = 4;
  if (this->_internal_uicount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_uicount(), target);
  }

  // uint64 llGiftUd = 5;
  if (this->_internal_llgiftud() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_llgiftud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_GiftEmail)
  return target;
}

size_t InnerScenesvr_Fromfriend_GiftEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_GiftEmail)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lltouser());
  }

  // uint64 llSender = 2;
  if (this->_internal_llsender() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llsender());
  }

  // uint32 uiItemId = 3;
  if (this->_internal_uiitemid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiitemid());
  }

  // uint32 uiCount = 4;
  if (this->_internal_uicount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicount());
  }

  // uint64 llGiftUd = 5;
  if (this->_internal_llgiftud() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llgiftud());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_GiftEmail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_GiftEmail::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_GiftEmail::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_GiftEmail::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_GiftEmail *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_GiftEmail &>(from));
}


void InnerScenesvr_Fromfriend_GiftEmail::MergeFrom(const InnerScenesvr_Fromfriend_GiftEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_GiftEmail)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lltouser() != 0) {
    _internal_set_lltouser(from._internal_lltouser());
  }
  if (from._internal_llsender() != 0) {
    _internal_set_llsender(from._internal_llsender());
  }
  if (from._internal_uiitemid() != 0) {
    _internal_set_uiitemid(from._internal_uiitemid());
  }
  if (from._internal_uicount() != 0) {
    _internal_set_uicount(from._internal_uicount());
  }
  if (from._internal_llgiftud() != 0) {
    _internal_set_llgiftud(from._internal_llgiftud());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_GiftEmail::CopyFrom(const InnerScenesvr_Fromfriend_GiftEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_GiftEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_GiftEmail::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_GiftEmail::InternalSwap(InnerScenesvr_Fromfriend_GiftEmail* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftEmail, llgiftud_)
      + sizeof(InnerScenesvr_Fromfriend_GiftEmail::llgiftud_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftEmail, lltouser_)>(
          reinterpret_cast<char*>(&lltouser_),
          reinterpret_cast<char*>(&other->lltouser_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_GiftEmail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[4]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_GiftExpire::_Internal {
 public:
};

InnerScenesvr_Fromfriend_GiftExpire::InnerScenesvr_Fromfriend_GiftExpire(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_GiftExpire)
}
InnerScenesvr_Fromfriend_GiftExpire::InnerScenesvr_Fromfriend_GiftExpire(const InnerScenesvr_Fromfriend_GiftExpire& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lltouser_, &from.lltouser_,
    static_cast<size_t>(reinterpret_cast<char*>(&llgiftuid_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(llgiftuid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_GiftExpire)
}

inline void InnerScenesvr_Fromfriend_GiftExpire::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lltouser_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&llgiftuid_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(llgiftuid_));
}

InnerScenesvr_Fromfriend_GiftExpire::~InnerScenesvr_Fromfriend_GiftExpire() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_GiftExpire)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_GiftExpire::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerScenesvr_Fromfriend_GiftExpire::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_GiftExpire::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_GiftExpire)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lltouser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llgiftuid_) -
      reinterpret_cast<char*>(&lltouser_)) + sizeof(llgiftuid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_GiftExpire::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llToUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lltouser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 llRecver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          llrecver_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiItemId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uiitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uicount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 llGiftUid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          llgiftuid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_GiftExpire::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_GiftExpire)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lltouser(), target);
  }

  // uint64 llRecver = 2;
  if (this->_internal_llrecver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_llrecver(), target);
  }

  // uint32 uiItemId = 3;
  if (this->_internal_uiitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uiitemid(), target);
  }

  // uint32 uiCount = 4;
  if (this->_internal_uicount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_uicount(), target);
  }

  // uint64 llGiftUid = 5;
  if (this->_internal_llgiftuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_llgiftuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_GiftExpire)
  return target;
}

size_t InnerScenesvr_Fromfriend_GiftExpire::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_GiftExpire)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lltouser());
  }

  // uint64 llRecver = 2;
  if (this->_internal_llrecver() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llrecver());
  }

  // uint32 uiItemId = 3;
  if (this->_internal_uiitemid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiitemid());
  }

  // uint32 uiCount = 4;
  if (this->_internal_uicount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicount());
  }

  // uint64 llGiftUid = 5;
  if (this->_internal_llgiftuid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llgiftuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_GiftExpire::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_GiftExpire::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_GiftExpire::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_GiftExpire::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_GiftExpire *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_GiftExpire &>(from));
}


void InnerScenesvr_Fromfriend_GiftExpire::MergeFrom(const InnerScenesvr_Fromfriend_GiftExpire& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_GiftExpire)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lltouser() != 0) {
    _internal_set_lltouser(from._internal_lltouser());
  }
  if (from._internal_llrecver() != 0) {
    _internal_set_llrecver(from._internal_llrecver());
  }
  if (from._internal_uiitemid() != 0) {
    _internal_set_uiitemid(from._internal_uiitemid());
  }
  if (from._internal_uicount() != 0) {
    _internal_set_uicount(from._internal_uicount());
  }
  if (from._internal_llgiftuid() != 0) {
    _internal_set_llgiftuid(from._internal_llgiftuid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_GiftExpire::CopyFrom(const InnerScenesvr_Fromfriend_GiftExpire& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_GiftExpire)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_GiftExpire::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_GiftExpire::InternalSwap(InnerScenesvr_Fromfriend_GiftExpire* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftExpire, llgiftuid_)
      + sizeof(InnerScenesvr_Fromfriend_GiftExpire::llgiftuid_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftExpire, lltouser_)>(
          reinterpret_cast<char*>(&lltouser_),
          reinterpret_cast<char*>(&other->lltouser_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_GiftExpire::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[5]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_GiftVersion::_Internal {
 public:
};

InnerScenesvr_Fromfriend_GiftVersion::InnerScenesvr_Fromfriend_GiftVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_GiftVersion)
}
InnerScenesvr_Fromfriend_GiftVersion::InnerScenesvr_Fromfriend_GiftVersion(const InnerScenesvr_Fromfriend_GiftVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lltouser_, &from.lltouser_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiversionid_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(uiversionid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_GiftVersion)
}

inline void InnerScenesvr_Fromfriend_GiftVersion::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lltouser_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiversionid_) -
    reinterpret_cast<char*>(&lltouser_)) + sizeof(uiversionid_));
}

InnerScenesvr_Fromfriend_GiftVersion::~InnerScenesvr_Fromfriend_GiftVersion() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_GiftVersion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_GiftVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerScenesvr_Fromfriend_GiftVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_GiftVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_GiftVersion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lltouser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiversionid_) -
      reinterpret_cast<char*>(&lltouser_)) + sizeof(uiversionid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_GiftVersion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llToUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lltouser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiVersionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiversionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_GiftVersion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_GiftVersion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lltouser(), target);
  }

  // uint32 uiVersionId = 2;
  if (this->_internal_uiversionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uiversionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_GiftVersion)
  return target;
}

size_t InnerScenesvr_Fromfriend_GiftVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_GiftVersion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lltouser());
  }

  // uint32 uiVersionId = 2;
  if (this->_internal_uiversionid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiversionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_GiftVersion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_GiftVersion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_GiftVersion::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_GiftVersion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_GiftVersion *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_GiftVersion &>(from));
}


void InnerScenesvr_Fromfriend_GiftVersion::MergeFrom(const InnerScenesvr_Fromfriend_GiftVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_GiftVersion)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lltouser() != 0) {
    _internal_set_lltouser(from._internal_lltouser());
  }
  if (from._internal_uiversionid() != 0) {
    _internal_set_uiversionid(from._internal_uiversionid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_GiftVersion::CopyFrom(const InnerScenesvr_Fromfriend_GiftVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_GiftVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_GiftVersion::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_GiftVersion::InternalSwap(InnerScenesvr_Fromfriend_GiftVersion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftVersion, uiversionid_)
      + sizeof(InnerScenesvr_Fromfriend_GiftVersion::uiversionid_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_GiftVersion, lltouser_)>(
          reinterpret_cast<char*>(&lltouser_),
          reinterpret_cast<char*>(&other->lltouser_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_GiftVersion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[6]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_FriendList::_Internal {
 public:
  static const ::inner::InnerFriendList& vecfriendlist(const InnerScenesvr_Fromfriend_FriendList* msg);
};

const ::inner::InnerFriendList&
InnerScenesvr_Fromfriend_FriendList::_Internal::vecfriendlist(const InnerScenesvr_Fromfriend_FriendList* msg) {
  return *msg->vecfriendlist_;
}
void InnerScenesvr_Fromfriend_FriendList::clear_vecfriendlist() {
  if (GetArenaForAllocation() == nullptr && vecfriendlist_ != nullptr) {
    delete vecfriendlist_;
  }
  vecfriendlist_ = nullptr;
}
InnerScenesvr_Fromfriend_FriendList::InnerScenesvr_Fromfriend_FriendList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_FriendList)
}
InnerScenesvr_Fromfriend_FriendList::InnerScenesvr_Fromfriend_FriendList(const InnerScenesvr_Fromfriend_FriendList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_vecfriendlist()) {
    vecfriendlist_ = new ::inner::InnerFriendList(*from.vecfriendlist_);
  } else {
    vecfriendlist_ = nullptr;
  }
  lltouser_ = from.lltouser_;
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_FriendList)
}

inline void InnerScenesvr_Fromfriend_FriendList::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&vecfriendlist_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lltouser_) -
    reinterpret_cast<char*>(&vecfriendlist_)) + sizeof(lltouser_));
}

InnerScenesvr_Fromfriend_FriendList::~InnerScenesvr_Fromfriend_FriendList() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_FriendList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_FriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete vecfriendlist_;
}

void InnerScenesvr_Fromfriend_FriendList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_FriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_FriendList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && vecfriendlist_ != nullptr) {
    delete vecfriendlist_;
  }
  vecfriendlist_ = nullptr;
  lltouser_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_FriendList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llToUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lltouser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerFriendList vecFriendList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vecfriendlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_FriendList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_FriendList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lltouser(), target);
  }

  // .inner.InnerFriendList vecFriendList = 2;
  if (this->_internal_has_vecfriendlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::vecfriendlist(this),
        _Internal::vecfriendlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_FriendList)
  return target;
}

size_t InnerScenesvr_Fromfriend_FriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_FriendList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .inner.InnerFriendList vecFriendList = 2;
  if (this->_internal_has_vecfriendlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vecfriendlist_);
  }

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lltouser());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_FriendList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_FriendList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_FriendList::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_FriendList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_FriendList *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_FriendList &>(from));
}


void InnerScenesvr_Fromfriend_FriendList::MergeFrom(const InnerScenesvr_Fromfriend_FriendList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_FriendList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_vecfriendlist()) {
    _internal_mutable_vecfriendlist()->::inner::InnerFriendList::MergeFrom(from._internal_vecfriendlist());
  }
  if (from._internal_lltouser() != 0) {
    _internal_set_lltouser(from._internal_lltouser());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_FriendList::CopyFrom(const InnerScenesvr_Fromfriend_FriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_FriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_FriendList::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_FriendList::InternalSwap(InnerScenesvr_Fromfriend_FriendList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_FriendList, lltouser_)
      + sizeof(InnerScenesvr_Fromfriend_FriendList::lltouser_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_FriendList, vecfriendlist_)>(
          reinterpret_cast<char*>(&vecfriendlist_),
          reinterpret_cast<char*>(&other->vecfriendlist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_FriendList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[7]);
}

// ===================================================================

class InnerScenesvr_Fromfriend_FriendUpdate::_Internal {
 public:
  static const ::inner::InnerFriend& oonefriend(const InnerScenesvr_Fromfriend_FriendUpdate* msg);
};

const ::inner::InnerFriend&
InnerScenesvr_Fromfriend_FriendUpdate::_Internal::oonefriend(const InnerScenesvr_Fromfriend_FriendUpdate* msg) {
  return *msg->oonefriend_;
}
void InnerScenesvr_Fromfriend_FriendUpdate::clear_oonefriend() {
  if (GetArenaForAllocation() == nullptr && oonefriend_ != nullptr) {
    delete oonefriend_;
  }
  oonefriend_ = nullptr;
}
InnerScenesvr_Fromfriend_FriendUpdate::InnerScenesvr_Fromfriend_FriendUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerScenesvr_Fromfriend_FriendUpdate)
}
InnerScenesvr_Fromfriend_FriendUpdate::InnerScenesvr_Fromfriend_FriendUpdate(const InnerScenesvr_Fromfriend_FriendUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_oonefriend()) {
    oonefriend_ = new ::inner::InnerFriend(*from.oonefriend_);
  } else {
    oonefriend_ = nullptr;
  }
  lltouser_ = from.lltouser_;
  // @@protoc_insertion_point(copy_constructor:inner.InnerScenesvr_Fromfriend_FriendUpdate)
}

inline void InnerScenesvr_Fromfriend_FriendUpdate::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&oonefriend_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lltouser_) -
    reinterpret_cast<char*>(&oonefriend_)) + sizeof(lltouser_));
}

InnerScenesvr_Fromfriend_FriendUpdate::~InnerScenesvr_Fromfriend_FriendUpdate() {
  // @@protoc_insertion_point(destructor:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerScenesvr_Fromfriend_FriendUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete oonefriend_;
}

void InnerScenesvr_Fromfriend_FriendUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerScenesvr_Fromfriend_FriendUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && oonefriend_ != nullptr) {
    delete oonefriend_;
  }
  oonefriend_ = nullptr;
  lltouser_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerScenesvr_Fromfriend_FriendUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llToUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lltouser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerFriend oOneFriend = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oonefriend(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerScenesvr_Fromfriend_FriendUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lltouser(), target);
  }

  // .inner.InnerFriend oOneFriend = 2;
  if (this->_internal_has_oonefriend()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::oonefriend(this),
        _Internal::oonefriend(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  return target;
}

size_t InnerScenesvr_Fromfriend_FriendUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .inner.InnerFriend oOneFriend = 2;
  if (this->_internal_has_oonefriend()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oonefriend_);
  }

  // uint64 llToUser = 1;
  if (this->_internal_lltouser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lltouser());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerScenesvr_Fromfriend_FriendUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerScenesvr_Fromfriend_FriendUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerScenesvr_Fromfriend_FriendUpdate::GetClassData() const { return &_class_data_; }

void InnerScenesvr_Fromfriend_FriendUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerScenesvr_Fromfriend_FriendUpdate *>(to)->MergeFrom(
      static_cast<const InnerScenesvr_Fromfriend_FriendUpdate &>(from));
}


void InnerScenesvr_Fromfriend_FriendUpdate::MergeFrom(const InnerScenesvr_Fromfriend_FriendUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_oonefriend()) {
    _internal_mutable_oonefriend()->::inner::InnerFriend::MergeFrom(from._internal_oonefriend());
  }
  if (from._internal_lltouser() != 0) {
    _internal_set_lltouser(from._internal_lltouser());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerScenesvr_Fromfriend_FriendUpdate::CopyFrom(const InnerScenesvr_Fromfriend_FriendUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerScenesvr_Fromfriend_FriendUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerScenesvr_Fromfriend_FriendUpdate::IsInitialized() const {
  return true;
}

void InnerScenesvr_Fromfriend_FriendUpdate::InternalSwap(InnerScenesvr_Fromfriend_FriendUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_FriendUpdate, lltouser_)
      + sizeof(InnerScenesvr_Fromfriend_FriendUpdate::lltouser_)
      - PROTOBUF_FIELD_OFFSET(InnerScenesvr_Fromfriend_FriendUpdate, oonefriend_)>(
          reinterpret_cast<char*>(&oonefriend_),
          reinterpret_cast<char*>(&other->oonefriend_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerScenesvr_Fromfriend_FriendUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_scenesvr_2eproto_getter, &descriptor_table_scenesvr_2eproto_once,
      file_level_metadata_scenesvr_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_Test*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_Test >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_Test >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_ReturnItem*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_ReturnItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_ReturnItem >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_GiftReceived*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftReceived >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_GiftReceived >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_GiftEmail*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftEmail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_GiftEmail >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_GiftExpire*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftExpire >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_GiftExpire >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_GiftVersion*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_GiftVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_FriendList*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_FriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_FriendList >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerScenesvr_Fromfriend_FriendUpdate*
Arena::CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_FriendUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerScenesvr_Fromfriend_FriendUpdate >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
