// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_scene_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_scene_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "scenecommon.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_scene_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_scene_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scene_2eproto;
namespace client {
class ModuleScene_Ntf_ChgViewField;
struct ModuleScene_Ntf_ChgViewFieldDefaultTypeInternal;
extern ModuleScene_Ntf_ChgViewFieldDefaultTypeInternal _ModuleScene_Ntf_ChgViewField_default_instance_;
class ModuleScene_Ntf_DynamicViewAll;
struct ModuleScene_Ntf_DynamicViewAllDefaultTypeInternal;
extern ModuleScene_Ntf_DynamicViewAllDefaultTypeInternal _ModuleScene_Ntf_DynamicViewAll_default_instance_;
class ModuleScene_Ntf_InfoFinishSession;
struct ModuleScene_Ntf_InfoFinishSessionDefaultTypeInternal;
extern ModuleScene_Ntf_InfoFinishSessionDefaultTypeInternal _ModuleScene_Ntf_InfoFinishSession_default_instance_;
class ModuleScene_Ntf_IntoFinishScene;
struct ModuleScene_Ntf_IntoFinishSceneDefaultTypeInternal;
extern ModuleScene_Ntf_IntoFinishSceneDefaultTypeInternal _ModuleScene_Ntf_IntoFinishScene_default_instance_;
class ModuleScene_Ntf_IntoFirstScene;
struct ModuleScene_Ntf_IntoFirstSceneDefaultTypeInternal;
extern ModuleScene_Ntf_IntoFirstSceneDefaultTypeInternal _ModuleScene_Ntf_IntoFirstScene_default_instance_;
class ModuleScene_Ntf_IntoFirstSession;
struct ModuleScene_Ntf_IntoFirstSessionDefaultTypeInternal;
extern ModuleScene_Ntf_IntoFirstSessionDefaultTypeInternal _ModuleScene_Ntf_IntoFirstSession_default_instance_;
class ModuleScene_Ntf_MapMarkAdd;
struct ModuleScene_Ntf_MapMarkAddDefaultTypeInternal;
extern ModuleScene_Ntf_MapMarkAddDefaultTypeInternal _ModuleScene_Ntf_MapMarkAdd_default_instance_;
class ModuleScene_Ntf_MapMarkRemove;
struct ModuleScene_Ntf_MapMarkRemoveDefaultTypeInternal;
extern ModuleScene_Ntf_MapMarkRemoveDefaultTypeInternal _ModuleScene_Ntf_MapMarkRemove_default_instance_;
class ModuleScene_Ntf_MapMarkUpdate;
struct ModuleScene_Ntf_MapMarkUpdateDefaultTypeInternal;
extern ModuleScene_Ntf_MapMarkUpdateDefaultTypeInternal _ModuleScene_Ntf_MapMarkUpdate_default_instance_;
class ModuleScene_Ntf_ModuleData;
struct ModuleScene_Ntf_ModuleDataDefaultTypeInternal;
extern ModuleScene_Ntf_ModuleDataDefaultTypeInternal _ModuleScene_Ntf_ModuleData_default_instance_;
class ModuleScene_Ntf_MonsterMove;
struct ModuleScene_Ntf_MonsterMoveDefaultTypeInternal;
extern ModuleScene_Ntf_MonsterMoveDefaultTypeInternal _ModuleScene_Ntf_MonsterMove_default_instance_;
class ModuleScene_Ntf_MoveStop;
struct ModuleScene_Ntf_MoveStopDefaultTypeInternal;
extern ModuleScene_Ntf_MoveStopDefaultTypeInternal _ModuleScene_Ntf_MoveStop_default_instance_;
class ModuleScene_Ntf_PerformanceStart;
struct ModuleScene_Ntf_PerformanceStartDefaultTypeInternal;
extern ModuleScene_Ntf_PerformanceStartDefaultTypeInternal _ModuleScene_Ntf_PerformanceStart_default_instance_;
class ModuleScene_Ntf_Rebirth;
struct ModuleScene_Ntf_RebirthDefaultTypeInternal;
extern ModuleScene_Ntf_RebirthDefaultTypeInternal _ModuleScene_Ntf_Rebirth_default_instance_;
class ModuleScene_Ntf_RebirthInfo;
struct ModuleScene_Ntf_RebirthInfoDefaultTypeInternal;
extern ModuleScene_Ntf_RebirthInfoDefaultTypeInternal _ModuleScene_Ntf_RebirthInfo_default_instance_;
class ModuleScene_Ntf_StaticViewAll;
struct ModuleScene_Ntf_StaticViewAllDefaultTypeInternal;
extern ModuleScene_Ntf_StaticViewAllDefaultTypeInternal _ModuleScene_Ntf_StaticViewAll_default_instance_;
class ModuleScene_Ntf_TurnDirect;
struct ModuleScene_Ntf_TurnDirectDefaultTypeInternal;
extern ModuleScene_Ntf_TurnDirectDefaultTypeInternal _ModuleScene_Ntf_TurnDirect_default_instance_;
class ModuleScene_Ntf_UserMove;
struct ModuleScene_Ntf_UserMoveDefaultTypeInternal;
extern ModuleScene_Ntf_UserMoveDefaultTypeInternal _ModuleScene_Ntf_UserMove_default_instance_;
class ModuleScene_Ntf_ViewObjectAdd;
struct ModuleScene_Ntf_ViewObjectAddDefaultTypeInternal;
extern ModuleScene_Ntf_ViewObjectAddDefaultTypeInternal _ModuleScene_Ntf_ViewObjectAdd_default_instance_;
class ModuleScene_Ntf_ViewObjectRemove;
struct ModuleScene_Ntf_ViewObjectRemoveDefaultTypeInternal;
extern ModuleScene_Ntf_ViewObjectRemoveDefaultTypeInternal _ModuleScene_Ntf_ViewObjectRemove_default_instance_;
class ModuleScene_Req_CloseChat;
struct ModuleScene_Req_CloseChatDefaultTypeInternal;
extern ModuleScene_Req_CloseChatDefaultTypeInternal _ModuleScene_Req_CloseChat_default_instance_;
class ModuleScene_Req_FinishPerformance;
struct ModuleScene_Req_FinishPerformanceDefaultTypeInternal;
extern ModuleScene_Req_FinishPerformanceDefaultTypeInternal _ModuleScene_Req_FinishPerformance_default_instance_;
class ModuleScene_Req_GoToBirthPos;
struct ModuleScene_Req_GoToBirthPosDefaultTypeInternal;
extern ModuleScene_Req_GoToBirthPosDefaultTypeInternal _ModuleScene_Req_GoToBirthPos_default_instance_;
class ModuleScene_Req_MoveStop;
struct ModuleScene_Req_MoveStopDefaultTypeInternal;
extern ModuleScene_Req_MoveStopDefaultTypeInternal _ModuleScene_Req_MoveStop_default_instance_;
class ModuleScene_Req_PrivateTrigger;
struct ModuleScene_Req_PrivateTriggerDefaultTypeInternal;
extern ModuleScene_Req_PrivateTriggerDefaultTypeInternal _ModuleScene_Req_PrivateTrigger_default_instance_;
class ModuleScene_Req_Rebirth;
struct ModuleScene_Req_RebirthDefaultTypeInternal;
extern ModuleScene_Req_RebirthDefaultTypeInternal _ModuleScene_Req_Rebirth_default_instance_;
class ModuleScene_Req_SelectViewId;
struct ModuleScene_Req_SelectViewIdDefaultTypeInternal;
extern ModuleScene_Req_SelectViewIdDefaultTypeInternal _ModuleScene_Req_SelectViewId_default_instance_;
class ModuleScene_Req_TurnDirect;
struct ModuleScene_Req_TurnDirectDefaultTypeInternal;
extern ModuleScene_Req_TurnDirectDefaultTypeInternal _ModuleScene_Req_TurnDirect_default_instance_;
class ModuleScene_Req_UserMove;
struct ModuleScene_Req_UserMoveDefaultTypeInternal;
extern ModuleScene_Req_UserMoveDefaultTypeInternal _ModuleScene_Req_UserMove_default_instance_;
class ModuleScene_Req_VisitNpc;
struct ModuleScene_Req_VisitNpcDefaultTypeInternal;
extern ModuleScene_Req_VisitNpcDefaultTypeInternal _ModuleScene_Req_VisitNpc_default_instance_;
}  // namespace client
PROTOBUF_NAMESPACE_OPEN
template<> ::client::ModuleScene_Ntf_ChgViewField* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_ChgViewField>(Arena*);
template<> ::client::ModuleScene_Ntf_DynamicViewAll* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_DynamicViewAll>(Arena*);
template<> ::client::ModuleScene_Ntf_InfoFinishSession* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_InfoFinishSession>(Arena*);
template<> ::client::ModuleScene_Ntf_IntoFinishScene* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_IntoFinishScene>(Arena*);
template<> ::client::ModuleScene_Ntf_IntoFirstScene* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_IntoFirstScene>(Arena*);
template<> ::client::ModuleScene_Ntf_IntoFirstSession* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_IntoFirstSession>(Arena*);
template<> ::client::ModuleScene_Ntf_MapMarkAdd* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_MapMarkAdd>(Arena*);
template<> ::client::ModuleScene_Ntf_MapMarkRemove* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_MapMarkRemove>(Arena*);
template<> ::client::ModuleScene_Ntf_MapMarkUpdate* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_MapMarkUpdate>(Arena*);
template<> ::client::ModuleScene_Ntf_ModuleData* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_ModuleData>(Arena*);
template<> ::client::ModuleScene_Ntf_MonsterMove* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_MonsterMove>(Arena*);
template<> ::client::ModuleScene_Ntf_MoveStop* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_MoveStop>(Arena*);
template<> ::client::ModuleScene_Ntf_PerformanceStart* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_PerformanceStart>(Arena*);
template<> ::client::ModuleScene_Ntf_Rebirth* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_Rebirth>(Arena*);
template<> ::client::ModuleScene_Ntf_RebirthInfo* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_RebirthInfo>(Arena*);
template<> ::client::ModuleScene_Ntf_StaticViewAll* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_StaticViewAll>(Arena*);
template<> ::client::ModuleScene_Ntf_TurnDirect* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_TurnDirect>(Arena*);
template<> ::client::ModuleScene_Ntf_UserMove* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_UserMove>(Arena*);
template<> ::client::ModuleScene_Ntf_ViewObjectAdd* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_ViewObjectAdd>(Arena*);
template<> ::client::ModuleScene_Ntf_ViewObjectRemove* Arena::CreateMaybeMessage<::client::ModuleScene_Ntf_ViewObjectRemove>(Arena*);
template<> ::client::ModuleScene_Req_CloseChat* Arena::CreateMaybeMessage<::client::ModuleScene_Req_CloseChat>(Arena*);
template<> ::client::ModuleScene_Req_FinishPerformance* Arena::CreateMaybeMessage<::client::ModuleScene_Req_FinishPerformance>(Arena*);
template<> ::client::ModuleScene_Req_GoToBirthPos* Arena::CreateMaybeMessage<::client::ModuleScene_Req_GoToBirthPos>(Arena*);
template<> ::client::ModuleScene_Req_MoveStop* Arena::CreateMaybeMessage<::client::ModuleScene_Req_MoveStop>(Arena*);
template<> ::client::ModuleScene_Req_PrivateTrigger* Arena::CreateMaybeMessage<::client::ModuleScene_Req_PrivateTrigger>(Arena*);
template<> ::client::ModuleScene_Req_Rebirth* Arena::CreateMaybeMessage<::client::ModuleScene_Req_Rebirth>(Arena*);
template<> ::client::ModuleScene_Req_SelectViewId* Arena::CreateMaybeMessage<::client::ModuleScene_Req_SelectViewId>(Arena*);
template<> ::client::ModuleScene_Req_TurnDirect* Arena::CreateMaybeMessage<::client::ModuleScene_Req_TurnDirect>(Arena*);
template<> ::client::ModuleScene_Req_UserMove* Arena::CreateMaybeMessage<::client::ModuleScene_Req_UserMove>(Arena*);
template<> ::client::ModuleScene_Req_VisitNpc* Arena::CreateMaybeMessage<::client::ModuleScene_Req_VisitNpc>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace client {

enum enModuleScene : int {
  enModuleScene_None = 0,
  enModuleScene_Ntf_IntoFirstScene = 1,
  enModuleScene_Ntf_IntoFirstSession = 2,
  enModuleScene_Ntf_ModuleData = 3,
  enModuleScene_Ntf_IntoFinishScene = 4,
  enModuleScene_Ntf_InfoFinishSession = 5,
  enModuleScene_Ntf_StaticViewAll = 6,
  enModuleScene_Ntf_DynamicViewAll = 7,
  enModuleScene_Ntf_ViewObjectAdd = 8,
  enModuleScene_Ntf_ViewObjectRemove = 9,
  enModuleScene_Ntf_ChgViewField = 10,
  enModuleScene_Req_VisitNpc = 11,
  enModuleScene_Req_CloseChat = 12,
  enModuleScene_Req_UserMove = 13,
  enModuleScene_Ntf_UserMove = 14,
  enModuleScene_Ntf_MonsterMove = 15,
  enModuleScene_Req_MoveStop = 16,
  enModuleScene_Ntf_MoveStop = 17,
  enModuleScene_Req_TurnDirect = 18,
  enModuleScene_Ntf_TurnDirect = 19,
  enModuleScene_Req_Rebirth = 20,
  enModuleScene_Ntf_Rebirth = 21,
  enModuleScene_Ntf_RebirthInfo = 22,
  enModuleScene_Req_GoToBirthPos = 23,
  enModuleScene_Req_SelectViewId = 24,
  enModuleScene_Ntf_PerformanceStart = 25,
  enModuleScene_Req_FinishPerformance = 26,
  enModuleScene_Req_PrivateTrigger = 27,
  enModuleScene_Ntf_MapMarkAdd = 28,
  enModuleScene_Ntf_MapMarkUpdate = 29,
  enModuleScene_Ntf_MapMarkRemove = 30,
  enModuleScene_RealMax = 31,
  enModuleScene_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  enModuleScene_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool enModuleScene_IsValid(int value);
constexpr enModuleScene enModuleScene_MIN = enModuleScene_None;
constexpr enModuleScene enModuleScene_MAX = enModuleScene_RealMax;
constexpr int enModuleScene_ARRAYSIZE = enModuleScene_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enModuleScene_descriptor();
template<typename T>
inline const std::string& enModuleScene_Name(T enum_t_value) {
  static_assert(::std::is_same<T, enModuleScene>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function enModuleScene_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    enModuleScene_descriptor(), enum_t_value);
}
inline bool enModuleScene_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, enModuleScene* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<enModuleScene>(
    enModuleScene_descriptor(), name, value);
}
// ===================================================================

class ModuleScene_Ntf_IntoFirstScene final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_IntoFirstScene) */ {
 public:
  inline ModuleScene_Ntf_IntoFirstScene() : ModuleScene_Ntf_IntoFirstScene(nullptr) {}
  ~ModuleScene_Ntf_IntoFirstScene() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_IntoFirstScene(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_IntoFirstScene(const ModuleScene_Ntf_IntoFirstScene& from);
  ModuleScene_Ntf_IntoFirstScene(ModuleScene_Ntf_IntoFirstScene&& from) noexcept
    : ModuleScene_Ntf_IntoFirstScene() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_IntoFirstScene& operator=(const ModuleScene_Ntf_IntoFirstScene& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_IntoFirstScene& operator=(ModuleScene_Ntf_IntoFirstScene&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_IntoFirstScene& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_IntoFirstScene* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_IntoFirstScene*>(
               &_ModuleScene_Ntf_IntoFirstScene_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModuleScene_Ntf_IntoFirstScene& a, ModuleScene_Ntf_IntoFirstScene& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_IntoFirstScene* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_IntoFirstScene* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_IntoFirstScene* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_IntoFirstScene>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_IntoFirstScene& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_IntoFirstScene& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_IntoFirstScene* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_IntoFirstScene";
  }
  protected:
  explicit ModuleScene_Ntf_IntoFirstScene(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCurposFieldNumber = 2,
    kReconnectFieldNumber = 3,
    kObjectFieldNumber = 4,
  };
  // .common.ClientSceneId sceneId = 1;
  bool has_sceneid() const;
  private:
  bool _internal_has_sceneid() const;
  public:
  void clear_sceneid();
  const ::common::ClientSceneId& sceneid() const;
  PROTOBUF_NODISCARD ::common::ClientSceneId* release_sceneid();
  ::common::ClientSceneId* mutable_sceneid();
  void set_allocated_sceneid(::common::ClientSceneId* sceneid);
  private:
  const ::common::ClientSceneId& _internal_sceneid() const;
  ::common::ClientSceneId* _internal_mutable_sceneid();
  public:
  void unsafe_arena_set_allocated_sceneid(
      ::common::ClientSceneId* sceneid);
  ::common::ClientSceneId* unsafe_arena_release_sceneid();

  // .common.ClientPosDirect curpos = 2;
  bool has_curpos() const;
  private:
  bool _internal_has_curpos() const;
  public:
  void clear_curpos();
  const ::common::ClientPosDirect& curpos() const;
  PROTOBUF_NODISCARD ::common::ClientPosDirect* release_curpos();
  ::common::ClientPosDirect* mutable_curpos();
  void set_allocated_curpos(::common::ClientPosDirect* curpos);
  private:
  const ::common::ClientPosDirect& _internal_curpos() const;
  ::common::ClientPosDirect* _internal_mutable_curpos();
  public:
  void unsafe_arena_set_allocated_curpos(
      ::common::ClientPosDirect* curpos);
  ::common::ClientPosDirect* unsafe_arena_release_curpos();

  // .common.ReconnectInfo reconnect = 3;
  bool has_reconnect() const;
  private:
  bool _internal_has_reconnect() const;
  public:
  void clear_reconnect();
  const ::common::ReconnectInfo& reconnect() const;
  PROTOBUF_NODISCARD ::common::ReconnectInfo* release_reconnect();
  ::common::ReconnectInfo* mutable_reconnect();
  void set_allocated_reconnect(::common::ReconnectInfo* reconnect);
  private:
  const ::common::ReconnectInfo& _internal_reconnect() const;
  ::common::ReconnectInfo* _internal_mutable_reconnect();
  public:
  void unsafe_arena_set_allocated_reconnect(
      ::common::ReconnectInfo* reconnect);
  ::common::ReconnectInfo* unsafe_arena_release_reconnect();

  // .common.ViewObject object = 4;
  bool has_object() const;
  private:
  bool _internal_has_object() const;
  public:
  void clear_object();
  const ::common::ViewObject& object() const;
  PROTOBUF_NODISCARD ::common::ViewObject* release_object();
  ::common::ViewObject* mutable_object();
  void set_allocated_object(::common::ViewObject* object);
  private:
  const ::common::ViewObject& _internal_object() const;
  ::common::ViewObject* _internal_mutable_object();
  public:
  void unsafe_arena_set_allocated_object(
      ::common::ViewObject* object);
  ::common::ViewObject* unsafe_arena_release_object();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_IntoFirstScene)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ClientSceneId* sceneid_;
  ::common::ClientPosDirect* curpos_;
  ::common::ReconnectInfo* reconnect_;
  ::common::ViewObject* object_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_IntoFirstSession final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_IntoFirstSession) */ {
 public:
  inline ModuleScene_Ntf_IntoFirstSession() : ModuleScene_Ntf_IntoFirstSession(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_IntoFirstSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_IntoFirstSession(const ModuleScene_Ntf_IntoFirstSession& from);
  ModuleScene_Ntf_IntoFirstSession(ModuleScene_Ntf_IntoFirstSession&& from) noexcept
    : ModuleScene_Ntf_IntoFirstSession() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_IntoFirstSession& operator=(const ModuleScene_Ntf_IntoFirstSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_IntoFirstSession& operator=(ModuleScene_Ntf_IntoFirstSession&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_IntoFirstSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_IntoFirstSession* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_IntoFirstSession*>(
               &_ModuleScene_Ntf_IntoFirstSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModuleScene_Ntf_IntoFirstSession& a, ModuleScene_Ntf_IntoFirstSession& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_IntoFirstSession* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_IntoFirstSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_IntoFirstSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_IntoFirstSession>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleScene_Ntf_IntoFirstSession& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_IntoFirstSession& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_IntoFirstSession";
  }
  protected:
  explicit ModuleScene_Ntf_IntoFirstSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_IntoFirstSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_ModuleData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_ModuleData) */ {
 public:
  inline ModuleScene_Ntf_ModuleData() : ModuleScene_Ntf_ModuleData(nullptr) {}
  ~ModuleScene_Ntf_ModuleData() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_ModuleData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_ModuleData(const ModuleScene_Ntf_ModuleData& from);
  ModuleScene_Ntf_ModuleData(ModuleScene_Ntf_ModuleData&& from) noexcept
    : ModuleScene_Ntf_ModuleData() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_ModuleData& operator=(const ModuleScene_Ntf_ModuleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_ModuleData& operator=(ModuleScene_Ntf_ModuleData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_ModuleData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_ModuleData* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_ModuleData*>(
               &_ModuleScene_Ntf_ModuleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ModuleScene_Ntf_ModuleData& a, ModuleScene_Ntf_ModuleData& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_ModuleData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_ModuleData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_ModuleData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_ModuleData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_ModuleData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_ModuleData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_ModuleData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_ModuleData";
  }
  protected:
  explicit ModuleScene_Ntf_ModuleData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModulesFieldNumber = 1,
  };
  // repeated .common.ModuleDataByte modules = 1;
  int modules_size() const;
  private:
  int _internal_modules_size() const;
  public:
  void clear_modules();
  ::common::ModuleDataByte* mutable_modules(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::ModuleDataByte >*
      mutable_modules();
  private:
  const ::common::ModuleDataByte& _internal_modules(int index) const;
  ::common::ModuleDataByte* _internal_add_modules();
  public:
  const ::common::ModuleDataByte& modules(int index) const;
  ::common::ModuleDataByte* add_modules();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::ModuleDataByte >&
      modules() const;

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_ModuleData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::ModuleDataByte > modules_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_IntoFinishScene final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_IntoFinishScene) */ {
 public:
  inline ModuleScene_Ntf_IntoFinishScene() : ModuleScene_Ntf_IntoFinishScene(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_IntoFinishScene(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_IntoFinishScene(const ModuleScene_Ntf_IntoFinishScene& from);
  ModuleScene_Ntf_IntoFinishScene(ModuleScene_Ntf_IntoFinishScene&& from) noexcept
    : ModuleScene_Ntf_IntoFinishScene() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_IntoFinishScene& operator=(const ModuleScene_Ntf_IntoFinishScene& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_IntoFinishScene& operator=(ModuleScene_Ntf_IntoFinishScene&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_IntoFinishScene& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_IntoFinishScene* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_IntoFinishScene*>(
               &_ModuleScene_Ntf_IntoFinishScene_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ModuleScene_Ntf_IntoFinishScene& a, ModuleScene_Ntf_IntoFinishScene& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_IntoFinishScene* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_IntoFinishScene* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_IntoFinishScene* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_IntoFinishScene>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleScene_Ntf_IntoFinishScene& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_IntoFinishScene& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_IntoFinishScene";
  }
  protected:
  explicit ModuleScene_Ntf_IntoFinishScene(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_IntoFinishScene)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_InfoFinishSession final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_InfoFinishSession) */ {
 public:
  inline ModuleScene_Ntf_InfoFinishSession() : ModuleScene_Ntf_InfoFinishSession(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_InfoFinishSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_InfoFinishSession(const ModuleScene_Ntf_InfoFinishSession& from);
  ModuleScene_Ntf_InfoFinishSession(ModuleScene_Ntf_InfoFinishSession&& from) noexcept
    : ModuleScene_Ntf_InfoFinishSession() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_InfoFinishSession& operator=(const ModuleScene_Ntf_InfoFinishSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_InfoFinishSession& operator=(ModuleScene_Ntf_InfoFinishSession&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_InfoFinishSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_InfoFinishSession* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_InfoFinishSession*>(
               &_ModuleScene_Ntf_InfoFinishSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ModuleScene_Ntf_InfoFinishSession& a, ModuleScene_Ntf_InfoFinishSession& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_InfoFinishSession* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_InfoFinishSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_InfoFinishSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_InfoFinishSession>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleScene_Ntf_InfoFinishSession& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_InfoFinishSession& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_InfoFinishSession";
  }
  protected:
  explicit ModuleScene_Ntf_InfoFinishSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_InfoFinishSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_StaticViewAll final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_StaticViewAll) */ {
 public:
  inline ModuleScene_Ntf_StaticViewAll() : ModuleScene_Ntf_StaticViewAll(nullptr) {}
  ~ModuleScene_Ntf_StaticViewAll() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_StaticViewAll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_StaticViewAll(const ModuleScene_Ntf_StaticViewAll& from);
  ModuleScene_Ntf_StaticViewAll(ModuleScene_Ntf_StaticViewAll&& from) noexcept
    : ModuleScene_Ntf_StaticViewAll() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_StaticViewAll& operator=(const ModuleScene_Ntf_StaticViewAll& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_StaticViewAll& operator=(ModuleScene_Ntf_StaticViewAll&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_StaticViewAll& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_StaticViewAll* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_StaticViewAll*>(
               &_ModuleScene_Ntf_StaticViewAll_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ModuleScene_Ntf_StaticViewAll& a, ModuleScene_Ntf_StaticViewAll& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_StaticViewAll* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_StaticViewAll* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_StaticViewAll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_StaticViewAll>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_StaticViewAll& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_StaticViewAll& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_StaticViewAll* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_StaticViewAll";
  }
  protected:
  explicit ModuleScene_Ntf_StaticViewAll(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcListFieldNumber = 1,
  };
  // .common.StaticViewList npcList = 1;
  bool has_npclist() const;
  private:
  bool _internal_has_npclist() const;
  public:
  void clear_npclist();
  const ::common::StaticViewList& npclist() const;
  PROTOBUF_NODISCARD ::common::StaticViewList* release_npclist();
  ::common::StaticViewList* mutable_npclist();
  void set_allocated_npclist(::common::StaticViewList* npclist);
  private:
  const ::common::StaticViewList& _internal_npclist() const;
  ::common::StaticViewList* _internal_mutable_npclist();
  public:
  void unsafe_arena_set_allocated_npclist(
      ::common::StaticViewList* npclist);
  ::common::StaticViewList* unsafe_arena_release_npclist();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_StaticViewAll)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::StaticViewList* npclist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_DynamicViewAll final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_DynamicViewAll) */ {
 public:
  inline ModuleScene_Ntf_DynamicViewAll() : ModuleScene_Ntf_DynamicViewAll(nullptr) {}
  ~ModuleScene_Ntf_DynamicViewAll() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_DynamicViewAll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_DynamicViewAll(const ModuleScene_Ntf_DynamicViewAll& from);
  ModuleScene_Ntf_DynamicViewAll(ModuleScene_Ntf_DynamicViewAll&& from) noexcept
    : ModuleScene_Ntf_DynamicViewAll() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_DynamicViewAll& operator=(const ModuleScene_Ntf_DynamicViewAll& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_DynamicViewAll& operator=(ModuleScene_Ntf_DynamicViewAll&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_DynamicViewAll& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_DynamicViewAll* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_DynamicViewAll*>(
               &_ModuleScene_Ntf_DynamicViewAll_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ModuleScene_Ntf_DynamicViewAll& a, ModuleScene_Ntf_DynamicViewAll& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_DynamicViewAll* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_DynamicViewAll* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_DynamicViewAll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_DynamicViewAll>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_DynamicViewAll& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_DynamicViewAll& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_DynamicViewAll* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_DynamicViewAll";
  }
  protected:
  explicit ModuleScene_Ntf_DynamicViewAll(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjListFieldNumber = 1,
  };
  // .common.ViewObjectList objList = 1;
  bool has_objlist() const;
  private:
  bool _internal_has_objlist() const;
  public:
  void clear_objlist();
  const ::common::ViewObjectList& objlist() const;
  PROTOBUF_NODISCARD ::common::ViewObjectList* release_objlist();
  ::common::ViewObjectList* mutable_objlist();
  void set_allocated_objlist(::common::ViewObjectList* objlist);
  private:
  const ::common::ViewObjectList& _internal_objlist() const;
  ::common::ViewObjectList* _internal_mutable_objlist();
  public:
  void unsafe_arena_set_allocated_objlist(
      ::common::ViewObjectList* objlist);
  ::common::ViewObjectList* unsafe_arena_release_objlist();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_DynamicViewAll)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ViewObjectList* objlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_ViewObjectAdd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_ViewObjectAdd) */ {
 public:
  inline ModuleScene_Ntf_ViewObjectAdd() : ModuleScene_Ntf_ViewObjectAdd(nullptr) {}
  ~ModuleScene_Ntf_ViewObjectAdd() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_ViewObjectAdd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_ViewObjectAdd(const ModuleScene_Ntf_ViewObjectAdd& from);
  ModuleScene_Ntf_ViewObjectAdd(ModuleScene_Ntf_ViewObjectAdd&& from) noexcept
    : ModuleScene_Ntf_ViewObjectAdd() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_ViewObjectAdd& operator=(const ModuleScene_Ntf_ViewObjectAdd& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_ViewObjectAdd& operator=(ModuleScene_Ntf_ViewObjectAdd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_ViewObjectAdd& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_ViewObjectAdd* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_ViewObjectAdd*>(
               &_ModuleScene_Ntf_ViewObjectAdd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ModuleScene_Ntf_ViewObjectAdd& a, ModuleScene_Ntf_ViewObjectAdd& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_ViewObjectAdd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_ViewObjectAdd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_ViewObjectAdd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_ViewObjectAdd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_ViewObjectAdd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_ViewObjectAdd& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_ViewObjectAdd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_ViewObjectAdd";
  }
  protected:
  explicit ModuleScene_Ntf_ViewObjectAdd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectFieldNumber = 1,
  };
  // .common.ViewObjectNpc object = 1;
  bool has_object() const;
  private:
  bool _internal_has_object() const;
  public:
  void clear_object();
  const ::common::ViewObjectNpc& object() const;
  PROTOBUF_NODISCARD ::common::ViewObjectNpc* release_object();
  ::common::ViewObjectNpc* mutable_object();
  void set_allocated_object(::common::ViewObjectNpc* object);
  private:
  const ::common::ViewObjectNpc& _internal_object() const;
  ::common::ViewObjectNpc* _internal_mutable_object();
  public:
  void unsafe_arena_set_allocated_object(
      ::common::ViewObjectNpc* object);
  ::common::ViewObjectNpc* unsafe_arena_release_object();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_ViewObjectAdd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ViewObjectNpc* object_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_ViewObjectRemove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_ViewObjectRemove) */ {
 public:
  inline ModuleScene_Ntf_ViewObjectRemove() : ModuleScene_Ntf_ViewObjectRemove(nullptr) {}
  ~ModuleScene_Ntf_ViewObjectRemove() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_ViewObjectRemove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_ViewObjectRemove(const ModuleScene_Ntf_ViewObjectRemove& from);
  ModuleScene_Ntf_ViewObjectRemove(ModuleScene_Ntf_ViewObjectRemove&& from) noexcept
    : ModuleScene_Ntf_ViewObjectRemove() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_ViewObjectRemove& operator=(const ModuleScene_Ntf_ViewObjectRemove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_ViewObjectRemove& operator=(ModuleScene_Ntf_ViewObjectRemove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_ViewObjectRemove& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_ViewObjectRemove* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_ViewObjectRemove*>(
               &_ModuleScene_Ntf_ViewObjectRemove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ModuleScene_Ntf_ViewObjectRemove& a, ModuleScene_Ntf_ViewObjectRemove& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_ViewObjectRemove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_ViewObjectRemove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_ViewObjectRemove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_ViewObjectRemove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_ViewObjectRemove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_ViewObjectRemove& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_ViewObjectRemove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_ViewObjectRemove";
  }
  protected:
  explicit ModuleScene_Ntf_ViewObjectRemove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjidListFieldNumber = 1,
  };
  // .common.ViewObjectIdList objidList = 1;
  bool has_objidlist() const;
  private:
  bool _internal_has_objidlist() const;
  public:
  void clear_objidlist();
  const ::common::ViewObjectIdList& objidlist() const;
  PROTOBUF_NODISCARD ::common::ViewObjectIdList* release_objidlist();
  ::common::ViewObjectIdList* mutable_objidlist();
  void set_allocated_objidlist(::common::ViewObjectIdList* objidlist);
  private:
  const ::common::ViewObjectIdList& _internal_objidlist() const;
  ::common::ViewObjectIdList* _internal_mutable_objidlist();
  public:
  void unsafe_arena_set_allocated_objidlist(
      ::common::ViewObjectIdList* objidlist);
  ::common::ViewObjectIdList* unsafe_arena_release_objidlist();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_ViewObjectRemove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ViewObjectIdList* objidlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_ChgViewField final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_ChgViewField) */ {
 public:
  inline ModuleScene_Ntf_ChgViewField() : ModuleScene_Ntf_ChgViewField(nullptr) {}
  ~ModuleScene_Ntf_ChgViewField() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_ChgViewField(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_ChgViewField(const ModuleScene_Ntf_ChgViewField& from);
  ModuleScene_Ntf_ChgViewField(ModuleScene_Ntf_ChgViewField&& from) noexcept
    : ModuleScene_Ntf_ChgViewField() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_ChgViewField& operator=(const ModuleScene_Ntf_ChgViewField& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_ChgViewField& operator=(ModuleScene_Ntf_ChgViewField&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_ChgViewField& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_ChgViewField* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_ChgViewField*>(
               &_ModuleScene_Ntf_ChgViewField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ModuleScene_Ntf_ChgViewField& a, ModuleScene_Ntf_ChgViewField& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_ChgViewField* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_ChgViewField* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_ChgViewField* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_ChgViewField>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_ChgViewField& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_ChgViewField& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_ChgViewField* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_ChgViewField";
  }
  protected:
  explicit ModuleScene_Ntf_ChgViewField(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldListFieldNumber = 2,
    kViewIdFieldNumber = 1,
    kIsfightFieldNumber = 3,
  };
  // .common.ViewFieldList fieldList = 2;
  bool has_fieldlist() const;
  private:
  bool _internal_has_fieldlist() const;
  public:
  void clear_fieldlist();
  const ::common::ViewFieldList& fieldlist() const;
  PROTOBUF_NODISCARD ::common::ViewFieldList* release_fieldlist();
  ::common::ViewFieldList* mutable_fieldlist();
  void set_allocated_fieldlist(::common::ViewFieldList* fieldlist);
  private:
  const ::common::ViewFieldList& _internal_fieldlist() const;
  ::common::ViewFieldList* _internal_mutable_fieldlist();
  public:
  void unsafe_arena_set_allocated_fieldlist(
      ::common::ViewFieldList* fieldlist);
  ::common::ViewFieldList* unsafe_arena_release_fieldlist();

  // uint64 viewId = 1;
  void clear_viewid();
  uint64_t viewid() const;
  void set_viewid(uint64_t value);
  private:
  uint64_t _internal_viewid() const;
  void _internal_set_viewid(uint64_t value);
  public:

  // bool isfight = 3;
  void clear_isfight();
  bool isfight() const;
  void set_isfight(bool value);
  private:
  bool _internal_isfight() const;
  void _internal_set_isfight(bool value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_ChgViewField)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ViewFieldList* fieldlist_;
  uint64_t viewid_;
  bool isfight_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_VisitNpc final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_VisitNpc) */ {
 public:
  inline ModuleScene_Req_VisitNpc() : ModuleScene_Req_VisitNpc(nullptr) {}
  ~ModuleScene_Req_VisitNpc() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_VisitNpc(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_VisitNpc(const ModuleScene_Req_VisitNpc& from);
  ModuleScene_Req_VisitNpc(ModuleScene_Req_VisitNpc&& from) noexcept
    : ModuleScene_Req_VisitNpc() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_VisitNpc& operator=(const ModuleScene_Req_VisitNpc& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_VisitNpc& operator=(ModuleScene_Req_VisitNpc&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_VisitNpc& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_VisitNpc* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_VisitNpc*>(
               &_ModuleScene_Req_VisitNpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ModuleScene_Req_VisitNpc& a, ModuleScene_Req_VisitNpc& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_VisitNpc* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_VisitNpc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_VisitNpc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_VisitNpc>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_VisitNpc& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_VisitNpc& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_VisitNpc* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_VisitNpc";
  }
  protected:
  explicit ModuleScene_Req_VisitNpc(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcuidFieldNumber = 1,
    kEventidFieldNumber = 2,
    kParamFieldNumber = 3,
  };
  // uint32 npcuid = 1;
  void clear_npcuid();
  uint32_t npcuid() const;
  void set_npcuid(uint32_t value);
  private:
  uint32_t _internal_npcuid() const;
  void _internal_set_npcuid(uint32_t value);
  public:

  // uint32 eventid = 2;
  void clear_eventid();
  uint32_t eventid() const;
  void set_eventid(uint32_t value);
  private:
  uint32_t _internal_eventid() const;
  void _internal_set_eventid(uint32_t value);
  public:

  // uint32 param = 3;
  void clear_param();
  uint32_t param() const;
  void set_param(uint32_t value);
  private:
  uint32_t _internal_param() const;
  void _internal_set_param(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_VisitNpc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t npcuid_;
  uint32_t eventid_;
  uint32_t param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_CloseChat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_CloseChat) */ {
 public:
  inline ModuleScene_Req_CloseChat() : ModuleScene_Req_CloseChat(nullptr) {}
  ~ModuleScene_Req_CloseChat() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_CloseChat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_CloseChat(const ModuleScene_Req_CloseChat& from);
  ModuleScene_Req_CloseChat(ModuleScene_Req_CloseChat&& from) noexcept
    : ModuleScene_Req_CloseChat() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_CloseChat& operator=(const ModuleScene_Req_CloseChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_CloseChat& operator=(ModuleScene_Req_CloseChat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_CloseChat& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_CloseChat* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_CloseChat*>(
               &_ModuleScene_Req_CloseChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ModuleScene_Req_CloseChat& a, ModuleScene_Req_CloseChat& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_CloseChat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_CloseChat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_CloseChat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_CloseChat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_CloseChat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_CloseChat& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_CloseChat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_CloseChat";
  }
  protected:
  explicit ModuleScene_Req_CloseChat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcuidFieldNumber = 1,
    kChatidFieldNumber = 2,
    kParamFieldNumber = 3,
  };
  // uint32 npcuid = 1;
  void clear_npcuid();
  uint32_t npcuid() const;
  void set_npcuid(uint32_t value);
  private:
  uint32_t _internal_npcuid() const;
  void _internal_set_npcuid(uint32_t value);
  public:

  // uint32 chatid = 2;
  void clear_chatid();
  uint32_t chatid() const;
  void set_chatid(uint32_t value);
  private:
  uint32_t _internal_chatid() const;
  void _internal_set_chatid(uint32_t value);
  public:

  // uint32 param = 3;
  void clear_param();
  uint32_t param() const;
  void set_param(uint32_t value);
  private:
  uint32_t _internal_param() const;
  void _internal_set_param(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_CloseChat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t npcuid_;
  uint32_t chatid_;
  uint32_t param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_UserMove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_UserMove) */ {
 public:
  inline ModuleScene_Req_UserMove() : ModuleScene_Req_UserMove(nullptr) {}
  ~ModuleScene_Req_UserMove() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_UserMove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_UserMove(const ModuleScene_Req_UserMove& from);
  ModuleScene_Req_UserMove(ModuleScene_Req_UserMove&& from) noexcept
    : ModuleScene_Req_UserMove() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_UserMove& operator=(const ModuleScene_Req_UserMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_UserMove& operator=(ModuleScene_Req_UserMove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_UserMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_UserMove* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_UserMove*>(
               &_ModuleScene_Req_UserMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ModuleScene_Req_UserMove& a, ModuleScene_Req_UserMove& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_UserMove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_UserMove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_UserMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_UserMove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_UserMove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_UserMove& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_UserMove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_UserMove";
  }
  protected:
  explicit ModuleScene_Req_UserMove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosListFieldNumber = 2,
    kClientTypeFieldNumber = 1,
  };
  // .common.ClientPosTerminate posList = 2;
  bool has_poslist() const;
  private:
  bool _internal_has_poslist() const;
  public:
  void clear_poslist();
  const ::common::ClientPosTerminate& poslist() const;
  PROTOBUF_NODISCARD ::common::ClientPosTerminate* release_poslist();
  ::common::ClientPosTerminate* mutable_poslist();
  void set_allocated_poslist(::common::ClientPosTerminate* poslist);
  private:
  const ::common::ClientPosTerminate& _internal_poslist() const;
  ::common::ClientPosTerminate* _internal_mutable_poslist();
  public:
  void unsafe_arena_set_allocated_poslist(
      ::common::ClientPosTerminate* poslist);
  ::common::ClientPosTerminate* unsafe_arena_release_poslist();

  // uint32 clientType = 1;
  void clear_clienttype();
  uint32_t clienttype() const;
  void set_clienttype(uint32_t value);
  private:
  uint32_t _internal_clienttype() const;
  void _internal_set_clienttype(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_UserMove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ClientPosTerminate* poslist_;
  uint32_t clienttype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_UserMove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_UserMove) */ {
 public:
  inline ModuleScene_Ntf_UserMove() : ModuleScene_Ntf_UserMove(nullptr) {}
  ~ModuleScene_Ntf_UserMove() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_UserMove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_UserMove(const ModuleScene_Ntf_UserMove& from);
  ModuleScene_Ntf_UserMove(ModuleScene_Ntf_UserMove&& from) noexcept
    : ModuleScene_Ntf_UserMove() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_UserMove& operator=(const ModuleScene_Ntf_UserMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_UserMove& operator=(ModuleScene_Ntf_UserMove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_UserMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_UserMove* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_UserMove*>(
               &_ModuleScene_Ntf_UserMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ModuleScene_Ntf_UserMove& a, ModuleScene_Ntf_UserMove& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_UserMove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_UserMove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_UserMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_UserMove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_UserMove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_UserMove& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_UserMove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_UserMove";
  }
  protected:
  explicit ModuleScene_Ntf_UserMove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPostoFieldNumber = 2,
    kRoleIdFieldNumber = 1,
  };
  // .common.ClientPosTogether posto = 2;
  bool has_posto() const;
  private:
  bool _internal_has_posto() const;
  public:
  void clear_posto();
  const ::common::ClientPosTogether& posto() const;
  PROTOBUF_NODISCARD ::common::ClientPosTogether* release_posto();
  ::common::ClientPosTogether* mutable_posto();
  void set_allocated_posto(::common::ClientPosTogether* posto);
  private:
  const ::common::ClientPosTogether& _internal_posto() const;
  ::common::ClientPosTogether* _internal_mutable_posto();
  public:
  void unsafe_arena_set_allocated_posto(
      ::common::ClientPosTogether* posto);
  ::common::ClientPosTogether* unsafe_arena_release_posto();

  // uint64 roleId = 1;
  void clear_roleid();
  uint64_t roleid() const;
  void set_roleid(uint64_t value);
  private:
  uint64_t _internal_roleid() const;
  void _internal_set_roleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_UserMove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ClientPosTogether* posto_;
  uint64_t roleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_MonsterMove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_MonsterMove) */ {
 public:
  inline ModuleScene_Ntf_MonsterMove() : ModuleScene_Ntf_MonsterMove(nullptr) {}
  ~ModuleScene_Ntf_MonsterMove() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_MonsterMove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_MonsterMove(const ModuleScene_Ntf_MonsterMove& from);
  ModuleScene_Ntf_MonsterMove(ModuleScene_Ntf_MonsterMove&& from) noexcept
    : ModuleScene_Ntf_MonsterMove() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_MonsterMove& operator=(const ModuleScene_Ntf_MonsterMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_MonsterMove& operator=(ModuleScene_Ntf_MonsterMove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_MonsterMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_MonsterMove* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_MonsterMove*>(
               &_ModuleScene_Ntf_MonsterMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ModuleScene_Ntf_MonsterMove& a, ModuleScene_Ntf_MonsterMove& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_MonsterMove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_MonsterMove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_MonsterMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_MonsterMove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_MonsterMove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_MonsterMove& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_MonsterMove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_MonsterMove";
  }
  protected:
  explicit ModuleScene_Ntf_MonsterMove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPostoFieldNumber = 2,
    kViewIdFieldNumber = 1,
  };
  // .common.ClientPosTogether posto = 2;
  bool has_posto() const;
  private:
  bool _internal_has_posto() const;
  public:
  void clear_posto();
  const ::common::ClientPosTogether& posto() const;
  PROTOBUF_NODISCARD ::common::ClientPosTogether* release_posto();
  ::common::ClientPosTogether* mutable_posto();
  void set_allocated_posto(::common::ClientPosTogether* posto);
  private:
  const ::common::ClientPosTogether& _internal_posto() const;
  ::common::ClientPosTogether* _internal_mutable_posto();
  public:
  void unsafe_arena_set_allocated_posto(
      ::common::ClientPosTogether* posto);
  ::common::ClientPosTogether* unsafe_arena_release_posto();

  // uint64 viewId = 1;
  void clear_viewid();
  uint64_t viewid() const;
  void set_viewid(uint64_t value);
  private:
  uint64_t _internal_viewid() const;
  void _internal_set_viewid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_MonsterMove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ClientPosTogether* posto_;
  uint64_t viewid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_MoveStop final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_MoveStop) */ {
 public:
  inline ModuleScene_Req_MoveStop() : ModuleScene_Req_MoveStop(nullptr) {}
  ~ModuleScene_Req_MoveStop() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_MoveStop(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_MoveStop(const ModuleScene_Req_MoveStop& from);
  ModuleScene_Req_MoveStop(ModuleScene_Req_MoveStop&& from) noexcept
    : ModuleScene_Req_MoveStop() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_MoveStop& operator=(const ModuleScene_Req_MoveStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_MoveStop& operator=(ModuleScene_Req_MoveStop&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_MoveStop& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_MoveStop* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_MoveStop*>(
               &_ModuleScene_Req_MoveStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ModuleScene_Req_MoveStop& a, ModuleScene_Req_MoveStop& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_MoveStop* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_MoveStop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_MoveStop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_MoveStop>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_MoveStop& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_MoveStop& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_MoveStop* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_MoveStop";
  }
  protected:
  explicit ModuleScene_Req_MoveStop(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurposFieldNumber = 1,
    kServertimeFieldNumber = 2,
  };
  // .common.ClientPosDirect curpos = 1;
  bool has_curpos() const;
  private:
  bool _internal_has_curpos() const;
  public:
  void clear_curpos();
  const ::common::ClientPosDirect& curpos() const;
  PROTOBUF_NODISCARD ::common::ClientPosDirect* release_curpos();
  ::common::ClientPosDirect* mutable_curpos();
  void set_allocated_curpos(::common::ClientPosDirect* curpos);
  private:
  const ::common::ClientPosDirect& _internal_curpos() const;
  ::common::ClientPosDirect* _internal_mutable_curpos();
  public:
  void unsafe_arena_set_allocated_curpos(
      ::common::ClientPosDirect* curpos);
  ::common::ClientPosDirect* unsafe_arena_release_curpos();

  // uint64 servertime = 2;
  void clear_servertime();
  uint64_t servertime() const;
  void set_servertime(uint64_t value);
  private:
  uint64_t _internal_servertime() const;
  void _internal_set_servertime(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_MoveStop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ClientPosDirect* curpos_;
  uint64_t servertime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_MoveStop final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_MoveStop) */ {
 public:
  inline ModuleScene_Ntf_MoveStop() : ModuleScene_Ntf_MoveStop(nullptr) {}
  ~ModuleScene_Ntf_MoveStop() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_MoveStop(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_MoveStop(const ModuleScene_Ntf_MoveStop& from);
  ModuleScene_Ntf_MoveStop(ModuleScene_Ntf_MoveStop&& from) noexcept
    : ModuleScene_Ntf_MoveStop() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_MoveStop& operator=(const ModuleScene_Ntf_MoveStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_MoveStop& operator=(ModuleScene_Ntf_MoveStop&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_MoveStop& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_MoveStop* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_MoveStop*>(
               &_ModuleScene_Ntf_MoveStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ModuleScene_Ntf_MoveStop& a, ModuleScene_Ntf_MoveStop& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_MoveStop* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_MoveStop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_MoveStop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_MoveStop>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_MoveStop& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_MoveStop& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_MoveStop* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_MoveStop";
  }
  protected:
  explicit ModuleScene_Ntf_MoveStop(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurposFieldNumber = 2,
    kViewIdFieldNumber = 1,
  };
  // .common.ClientPosDirect curpos = 2;
  bool has_curpos() const;
  private:
  bool _internal_has_curpos() const;
  public:
  void clear_curpos();
  const ::common::ClientPosDirect& curpos() const;
  PROTOBUF_NODISCARD ::common::ClientPosDirect* release_curpos();
  ::common::ClientPosDirect* mutable_curpos();
  void set_allocated_curpos(::common::ClientPosDirect* curpos);
  private:
  const ::common::ClientPosDirect& _internal_curpos() const;
  ::common::ClientPosDirect* _internal_mutable_curpos();
  public:
  void unsafe_arena_set_allocated_curpos(
      ::common::ClientPosDirect* curpos);
  ::common::ClientPosDirect* unsafe_arena_release_curpos();

  // uint64 viewId = 1;
  void clear_viewid();
  uint64_t viewid() const;
  void set_viewid(uint64_t value);
  private:
  uint64_t _internal_viewid() const;
  void _internal_set_viewid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_MoveStop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ClientPosDirect* curpos_;
  uint64_t viewid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_TurnDirect final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_TurnDirect) */ {
 public:
  inline ModuleScene_Req_TurnDirect() : ModuleScene_Req_TurnDirect(nullptr) {}
  ~ModuleScene_Req_TurnDirect() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_TurnDirect(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_TurnDirect(const ModuleScene_Req_TurnDirect& from);
  ModuleScene_Req_TurnDirect(ModuleScene_Req_TurnDirect&& from) noexcept
    : ModuleScene_Req_TurnDirect() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_TurnDirect& operator=(const ModuleScene_Req_TurnDirect& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_TurnDirect& operator=(ModuleScene_Req_TurnDirect&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_TurnDirect& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_TurnDirect* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_TurnDirect*>(
               &_ModuleScene_Req_TurnDirect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ModuleScene_Req_TurnDirect& a, ModuleScene_Req_TurnDirect& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_TurnDirect* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_TurnDirect* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_TurnDirect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_TurnDirect>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_TurnDirect& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_TurnDirect& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_TurnDirect* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_TurnDirect";
  }
  protected:
  explicit ModuleScene_Req_TurnDirect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDirectFieldNumber = 1,
  };
  // uint32 direct = 1;
  void clear_direct();
  uint32_t direct() const;
  void set_direct(uint32_t value);
  private:
  uint32_t _internal_direct() const;
  void _internal_set_direct(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_TurnDirect)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t direct_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_TurnDirect final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_TurnDirect) */ {
 public:
  inline ModuleScene_Ntf_TurnDirect() : ModuleScene_Ntf_TurnDirect(nullptr) {}
  ~ModuleScene_Ntf_TurnDirect() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_TurnDirect(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_TurnDirect(const ModuleScene_Ntf_TurnDirect& from);
  ModuleScene_Ntf_TurnDirect(ModuleScene_Ntf_TurnDirect&& from) noexcept
    : ModuleScene_Ntf_TurnDirect() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_TurnDirect& operator=(const ModuleScene_Ntf_TurnDirect& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_TurnDirect& operator=(ModuleScene_Ntf_TurnDirect&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_TurnDirect& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_TurnDirect* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_TurnDirect*>(
               &_ModuleScene_Ntf_TurnDirect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ModuleScene_Ntf_TurnDirect& a, ModuleScene_Ntf_TurnDirect& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_TurnDirect* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_TurnDirect* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_TurnDirect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_TurnDirect>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_TurnDirect& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_TurnDirect& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_TurnDirect* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_TurnDirect";
  }
  protected:
  explicit ModuleScene_Ntf_TurnDirect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kViewIdFieldNumber = 1,
    kDirectFieldNumber = 2,
  };
  // uint64 viewId = 1;
  void clear_viewid();
  uint64_t viewid() const;
  void set_viewid(uint64_t value);
  private:
  uint64_t _internal_viewid() const;
  void _internal_set_viewid(uint64_t value);
  public:

  // uint32 direct = 2;
  void clear_direct();
  uint32_t direct() const;
  void set_direct(uint32_t value);
  private:
  uint32_t _internal_direct() const;
  void _internal_set_direct(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_TurnDirect)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t viewid_;
  uint32_t direct_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_Rebirth final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_Rebirth) */ {
 public:
  inline ModuleScene_Req_Rebirth() : ModuleScene_Req_Rebirth(nullptr) {}
  ~ModuleScene_Req_Rebirth() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_Rebirth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_Rebirth(const ModuleScene_Req_Rebirth& from);
  ModuleScene_Req_Rebirth(ModuleScene_Req_Rebirth&& from) noexcept
    : ModuleScene_Req_Rebirth() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_Rebirth& operator=(const ModuleScene_Req_Rebirth& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_Rebirth& operator=(ModuleScene_Req_Rebirth&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_Rebirth& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_Rebirth* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_Rebirth*>(
               &_ModuleScene_Req_Rebirth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ModuleScene_Req_Rebirth& a, ModuleScene_Req_Rebirth& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_Rebirth* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_Rebirth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_Rebirth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_Rebirth>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_Rebirth& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_Rebirth& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_Rebirth* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_Rebirth";
  }
  protected:
  explicit ModuleScene_Req_Rebirth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleidFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // uint64 roleid = 2;
  void clear_roleid();
  uint64_t roleid() const;
  void set_roleid(uint64_t value);
  private:
  uint64_t _internal_roleid() const;
  void _internal_set_roleid(uint64_t value);
  public:

  // uint32 type = 1;
  void clear_type();
  uint32_t type() const;
  void set_type(uint32_t value);
  private:
  uint32_t _internal_type() const;
  void _internal_set_type(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_Rebirth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t roleid_;
  uint32_t type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_Rebirth final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_Rebirth) */ {
 public:
  inline ModuleScene_Ntf_Rebirth() : ModuleScene_Ntf_Rebirth(nullptr) {}
  ~ModuleScene_Ntf_Rebirth() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_Rebirth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_Rebirth(const ModuleScene_Ntf_Rebirth& from);
  ModuleScene_Ntf_Rebirth(ModuleScene_Ntf_Rebirth&& from) noexcept
    : ModuleScene_Ntf_Rebirth() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_Rebirth& operator=(const ModuleScene_Ntf_Rebirth& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_Rebirth& operator=(ModuleScene_Ntf_Rebirth&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_Rebirth& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_Rebirth* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_Rebirth*>(
               &_ModuleScene_Ntf_Rebirth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ModuleScene_Ntf_Rebirth& a, ModuleScene_Ntf_Rebirth& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_Rebirth* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_Rebirth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_Rebirth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_Rebirth>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_Rebirth& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_Rebirth& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_Rebirth* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_Rebirth";
  }
  protected:
  explicit ModuleScene_Ntf_Rebirth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromidFieldNumber = 1,
    kRebirthidFieldNumber = 2,
    kRebirthCntFieldNumber = 3,
  };
  // uint64 fromid = 1;
  void clear_fromid();
  uint64_t fromid() const;
  void set_fromid(uint64_t value);
  private:
  uint64_t _internal_fromid() const;
  void _internal_set_fromid(uint64_t value);
  public:

  // uint64 rebirthid = 2;
  void clear_rebirthid();
  uint64_t rebirthid() const;
  void set_rebirthid(uint64_t value);
  private:
  uint64_t _internal_rebirthid() const;
  void _internal_set_rebirthid(uint64_t value);
  public:

  // uint32 rebirthCnt = 3;
  void clear_rebirthcnt();
  uint32_t rebirthcnt() const;
  void set_rebirthcnt(uint32_t value);
  private:
  uint32_t _internal_rebirthcnt() const;
  void _internal_set_rebirthcnt(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_Rebirth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t fromid_;
  uint64_t rebirthid_;
  uint32_t rebirthcnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_RebirthInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_RebirthInfo) */ {
 public:
  inline ModuleScene_Ntf_RebirthInfo() : ModuleScene_Ntf_RebirthInfo(nullptr) {}
  ~ModuleScene_Ntf_RebirthInfo() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_RebirthInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_RebirthInfo(const ModuleScene_Ntf_RebirthInfo& from);
  ModuleScene_Ntf_RebirthInfo(ModuleScene_Ntf_RebirthInfo&& from) noexcept
    : ModuleScene_Ntf_RebirthInfo() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_RebirthInfo& operator=(const ModuleScene_Ntf_RebirthInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_RebirthInfo& operator=(ModuleScene_Ntf_RebirthInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_RebirthInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_RebirthInfo* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_RebirthInfo*>(
               &_ModuleScene_Ntf_RebirthInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ModuleScene_Ntf_RebirthInfo& a, ModuleScene_Ntf_RebirthInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_RebirthInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_RebirthInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_RebirthInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_RebirthInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_RebirthInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_RebirthInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_RebirthInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_RebirthInfo";
  }
  protected:
  explicit ModuleScene_Ntf_RebirthInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // .common.RebirthInfo info = 1;
  bool has_info() const;
  private:
  bool _internal_has_info() const;
  public:
  void clear_info();
  const ::common::RebirthInfo& info() const;
  PROTOBUF_NODISCARD ::common::RebirthInfo* release_info();
  ::common::RebirthInfo* mutable_info();
  void set_allocated_info(::common::RebirthInfo* info);
  private:
  const ::common::RebirthInfo& _internal_info() const;
  ::common::RebirthInfo* _internal_mutable_info();
  public:
  void unsafe_arena_set_allocated_info(
      ::common::RebirthInfo* info);
  ::common::RebirthInfo* unsafe_arena_release_info();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_RebirthInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::RebirthInfo* info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_GoToBirthPos final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_GoToBirthPos) */ {
 public:
  inline ModuleScene_Req_GoToBirthPos() : ModuleScene_Req_GoToBirthPos(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_GoToBirthPos(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_GoToBirthPos(const ModuleScene_Req_GoToBirthPos& from);
  ModuleScene_Req_GoToBirthPos(ModuleScene_Req_GoToBirthPos&& from) noexcept
    : ModuleScene_Req_GoToBirthPos() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_GoToBirthPos& operator=(const ModuleScene_Req_GoToBirthPos& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_GoToBirthPos& operator=(ModuleScene_Req_GoToBirthPos&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_GoToBirthPos& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_GoToBirthPos* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_GoToBirthPos*>(
               &_ModuleScene_Req_GoToBirthPos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ModuleScene_Req_GoToBirthPos& a, ModuleScene_Req_GoToBirthPos& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_GoToBirthPos* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_GoToBirthPos* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_GoToBirthPos* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_GoToBirthPos>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleScene_Req_GoToBirthPos& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleScene_Req_GoToBirthPos& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_GoToBirthPos";
  }
  protected:
  explicit ModuleScene_Req_GoToBirthPos(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_GoToBirthPos)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_SelectViewId final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_SelectViewId) */ {
 public:
  inline ModuleScene_Req_SelectViewId() : ModuleScene_Req_SelectViewId(nullptr) {}
  ~ModuleScene_Req_SelectViewId() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_SelectViewId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_SelectViewId(const ModuleScene_Req_SelectViewId& from);
  ModuleScene_Req_SelectViewId(ModuleScene_Req_SelectViewId&& from) noexcept
    : ModuleScene_Req_SelectViewId() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_SelectViewId& operator=(const ModuleScene_Req_SelectViewId& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_SelectViewId& operator=(ModuleScene_Req_SelectViewId&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_SelectViewId& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_SelectViewId* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_SelectViewId*>(
               &_ModuleScene_Req_SelectViewId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ModuleScene_Req_SelectViewId& a, ModuleScene_Req_SelectViewId& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_SelectViewId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_SelectViewId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_SelectViewId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_SelectViewId>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_SelectViewId& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_SelectViewId& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_SelectViewId* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_SelectViewId";
  }
  protected:
  explicit ModuleScene_Req_SelectViewId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelectIdFieldNumber = 1,
  };
  // uint64 selectId = 1;
  void clear_selectid();
  uint64_t selectid() const;
  void set_selectid(uint64_t value);
  private:
  uint64_t _internal_selectid() const;
  void _internal_set_selectid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_SelectViewId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t selectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_PerformanceStart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_PerformanceStart) */ {
 public:
  inline ModuleScene_Ntf_PerformanceStart() : ModuleScene_Ntf_PerformanceStart(nullptr) {}
  ~ModuleScene_Ntf_PerformanceStart() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_PerformanceStart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_PerformanceStart(const ModuleScene_Ntf_PerformanceStart& from);
  ModuleScene_Ntf_PerformanceStart(ModuleScene_Ntf_PerformanceStart&& from) noexcept
    : ModuleScene_Ntf_PerformanceStart() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_PerformanceStart& operator=(const ModuleScene_Ntf_PerformanceStart& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_PerformanceStart& operator=(ModuleScene_Ntf_PerformanceStart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_PerformanceStart& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_PerformanceStart* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_PerformanceStart*>(
               &_ModuleScene_Ntf_PerformanceStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(ModuleScene_Ntf_PerformanceStart& a, ModuleScene_Ntf_PerformanceStart& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_PerformanceStart* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_PerformanceStart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_PerformanceStart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_PerformanceStart>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_PerformanceStart& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_PerformanceStart& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_PerformanceStart* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_PerformanceStart";
  }
  protected:
  explicit ModuleScene_Ntf_PerformanceStart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // uint32 type = 1;
  void clear_type();
  uint32_t type() const;
  void set_type(uint32_t value);
  private:
  uint32_t _internal_type() const;
  void _internal_set_type(uint32_t value);
  public:

  // uint32 id = 2;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_PerformanceStart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t type_;
  uint32_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_FinishPerformance final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_FinishPerformance) */ {
 public:
  inline ModuleScene_Req_FinishPerformance() : ModuleScene_Req_FinishPerformance(nullptr) {}
  ~ModuleScene_Req_FinishPerformance() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_FinishPerformance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_FinishPerformance(const ModuleScene_Req_FinishPerformance& from);
  ModuleScene_Req_FinishPerformance(ModuleScene_Req_FinishPerformance&& from) noexcept
    : ModuleScene_Req_FinishPerformance() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_FinishPerformance& operator=(const ModuleScene_Req_FinishPerformance& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_FinishPerformance& operator=(ModuleScene_Req_FinishPerformance&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_FinishPerformance& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_FinishPerformance* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_FinishPerformance*>(
               &_ModuleScene_Req_FinishPerformance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ModuleScene_Req_FinishPerformance& a, ModuleScene_Req_FinishPerformance& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_FinishPerformance* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_FinishPerformance* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_FinishPerformance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_FinishPerformance>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_FinishPerformance& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_FinishPerformance& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_FinishPerformance* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_FinishPerformance";
  }
  protected:
  explicit ModuleScene_Req_FinishPerformance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // uint32 type = 1;
  void clear_type();
  uint32_t type() const;
  void set_type(uint32_t value);
  private:
  uint32_t _internal_type() const;
  void _internal_set_type(uint32_t value);
  public:

  // uint32 id = 2;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_FinishPerformance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t type_;
  uint32_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Req_PrivateTrigger final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Req_PrivateTrigger) */ {
 public:
  inline ModuleScene_Req_PrivateTrigger() : ModuleScene_Req_PrivateTrigger(nullptr) {}
  ~ModuleScene_Req_PrivateTrigger() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Req_PrivateTrigger(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Req_PrivateTrigger(const ModuleScene_Req_PrivateTrigger& from);
  ModuleScene_Req_PrivateTrigger(ModuleScene_Req_PrivateTrigger&& from) noexcept
    : ModuleScene_Req_PrivateTrigger() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Req_PrivateTrigger& operator=(const ModuleScene_Req_PrivateTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Req_PrivateTrigger& operator=(ModuleScene_Req_PrivateTrigger&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Req_PrivateTrigger& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Req_PrivateTrigger* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Req_PrivateTrigger*>(
               &_ModuleScene_Req_PrivateTrigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(ModuleScene_Req_PrivateTrigger& a, ModuleScene_Req_PrivateTrigger& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Req_PrivateTrigger* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Req_PrivateTrigger* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Req_PrivateTrigger* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Req_PrivateTrigger>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Req_PrivateTrigger& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Req_PrivateTrigger& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Req_PrivateTrigger* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Req_PrivateTrigger";
  }
  protected:
  explicit ModuleScene_Req_PrivateTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
  };
  // uint64 instanceId = 1;
  void clear_instanceid();
  uint64_t instanceid() const;
  void set_instanceid(uint64_t value);
  private:
  uint64_t _internal_instanceid() const;
  void _internal_set_instanceid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Req_PrivateTrigger)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t instanceid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_MapMarkAdd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_MapMarkAdd) */ {
 public:
  inline ModuleScene_Ntf_MapMarkAdd() : ModuleScene_Ntf_MapMarkAdd(nullptr) {}
  ~ModuleScene_Ntf_MapMarkAdd() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_MapMarkAdd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_MapMarkAdd(const ModuleScene_Ntf_MapMarkAdd& from);
  ModuleScene_Ntf_MapMarkAdd(ModuleScene_Ntf_MapMarkAdd&& from) noexcept
    : ModuleScene_Ntf_MapMarkAdd() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_MapMarkAdd& operator=(const ModuleScene_Ntf_MapMarkAdd& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_MapMarkAdd& operator=(ModuleScene_Ntf_MapMarkAdd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_MapMarkAdd& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_MapMarkAdd* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_MapMarkAdd*>(
               &_ModuleScene_Ntf_MapMarkAdd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ModuleScene_Ntf_MapMarkAdd& a, ModuleScene_Ntf_MapMarkAdd& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_MapMarkAdd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_MapMarkAdd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_MapMarkAdd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_MapMarkAdd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_MapMarkAdd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_MapMarkAdd& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_MapMarkAdd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_MapMarkAdd";
  }
  protected:
  explicit ModuleScene_Ntf_MapMarkAdd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcsFieldNumber = 1,
  };
  // repeated .common.MapMark npcs = 1;
  int npcs_size() const;
  private:
  int _internal_npcs_size() const;
  public:
  void clear_npcs();
  ::common::MapMark* mutable_npcs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::MapMark >*
      mutable_npcs();
  private:
  const ::common::MapMark& _internal_npcs(int index) const;
  ::common::MapMark* _internal_add_npcs();
  public:
  const ::common::MapMark& npcs(int index) const;
  ::common::MapMark* add_npcs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::MapMark >&
      npcs() const;

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_MapMarkAdd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::MapMark > npcs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_MapMarkUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_MapMarkUpdate) */ {
 public:
  inline ModuleScene_Ntf_MapMarkUpdate() : ModuleScene_Ntf_MapMarkUpdate(nullptr) {}
  ~ModuleScene_Ntf_MapMarkUpdate() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_MapMarkUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_MapMarkUpdate(const ModuleScene_Ntf_MapMarkUpdate& from);
  ModuleScene_Ntf_MapMarkUpdate(ModuleScene_Ntf_MapMarkUpdate&& from) noexcept
    : ModuleScene_Ntf_MapMarkUpdate() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_MapMarkUpdate& operator=(const ModuleScene_Ntf_MapMarkUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_MapMarkUpdate& operator=(ModuleScene_Ntf_MapMarkUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_MapMarkUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_MapMarkUpdate* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_MapMarkUpdate*>(
               &_ModuleScene_Ntf_MapMarkUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(ModuleScene_Ntf_MapMarkUpdate& a, ModuleScene_Ntf_MapMarkUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_MapMarkUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_MapMarkUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_MapMarkUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_MapMarkUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_MapMarkUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_MapMarkUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_MapMarkUpdate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_MapMarkUpdate";
  }
  protected:
  explicit ModuleScene_Ntf_MapMarkUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcFieldNumber = 1,
  };
  // .common.MapMark npc = 1;
  bool has_npc() const;
  private:
  bool _internal_has_npc() const;
  public:
  void clear_npc();
  const ::common::MapMark& npc() const;
  PROTOBUF_NODISCARD ::common::MapMark* release_npc();
  ::common::MapMark* mutable_npc();
  void set_allocated_npc(::common::MapMark* npc);
  private:
  const ::common::MapMark& _internal_npc() const;
  ::common::MapMark* _internal_mutable_npc();
  public:
  void unsafe_arena_set_allocated_npc(
      ::common::MapMark* npc);
  ::common::MapMark* unsafe_arena_release_npc();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_MapMarkUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::MapMark* npc_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class ModuleScene_Ntf_MapMarkRemove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleScene_Ntf_MapMarkRemove) */ {
 public:
  inline ModuleScene_Ntf_MapMarkRemove() : ModuleScene_Ntf_MapMarkRemove(nullptr) {}
  ~ModuleScene_Ntf_MapMarkRemove() override;
  explicit PROTOBUF_CONSTEXPR ModuleScene_Ntf_MapMarkRemove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleScene_Ntf_MapMarkRemove(const ModuleScene_Ntf_MapMarkRemove& from);
  ModuleScene_Ntf_MapMarkRemove(ModuleScene_Ntf_MapMarkRemove&& from) noexcept
    : ModuleScene_Ntf_MapMarkRemove() {
    *this = ::std::move(from);
  }

  inline ModuleScene_Ntf_MapMarkRemove& operator=(const ModuleScene_Ntf_MapMarkRemove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleScene_Ntf_MapMarkRemove& operator=(ModuleScene_Ntf_MapMarkRemove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleScene_Ntf_MapMarkRemove& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleScene_Ntf_MapMarkRemove* internal_default_instance() {
    return reinterpret_cast<const ModuleScene_Ntf_MapMarkRemove*>(
               &_ModuleScene_Ntf_MapMarkRemove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(ModuleScene_Ntf_MapMarkRemove& a, ModuleScene_Ntf_MapMarkRemove& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleScene_Ntf_MapMarkRemove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleScene_Ntf_MapMarkRemove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleScene_Ntf_MapMarkRemove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleScene_Ntf_MapMarkRemove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleScene_Ntf_MapMarkRemove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleScene_Ntf_MapMarkRemove& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleScene_Ntf_MapMarkRemove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleScene_Ntf_MapMarkRemove";
  }
  protected:
  explicit ModuleScene_Ntf_MapMarkRemove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidsFieldNumber = 1,
  };
  // repeated uint64 uids = 1;
  int uids_size() const;
  private:
  int _internal_uids_size() const;
  public:
  void clear_uids();
  private:
  uint64_t _internal_uids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_uids() const;
  void _internal_add_uids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_uids();
  public:
  uint64_t uids(int index) const;
  void set_uids(int index, uint64_t value);
  void add_uids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      uids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_uids();

  // @@protoc_insertion_point(class_scope:client.ModuleScene_Ntf_MapMarkRemove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > uids_;
  mutable std::atomic<int> _uids_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scene_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModuleScene_Ntf_IntoFirstScene

// .common.ClientSceneId sceneId = 1;
inline bool ModuleScene_Ntf_IntoFirstScene::_internal_has_sceneid() const {
  return this != internal_default_instance() && sceneid_ != nullptr;
}
inline bool ModuleScene_Ntf_IntoFirstScene::has_sceneid() const {
  return _internal_has_sceneid();
}
inline const ::common::ClientSceneId& ModuleScene_Ntf_IntoFirstScene::_internal_sceneid() const {
  const ::common::ClientSceneId* p = sceneid_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientSceneId&>(
      ::common::_ClientSceneId_default_instance_);
}
inline const ::common::ClientSceneId& ModuleScene_Ntf_IntoFirstScene::sceneid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_IntoFirstScene.sceneId)
  return _internal_sceneid();
}
inline void ModuleScene_Ntf_IntoFirstScene::unsafe_arena_set_allocated_sceneid(
    ::common::ClientSceneId* sceneid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sceneid_);
  }
  sceneid_ = sceneid;
  if (sceneid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.sceneId)
}
inline ::common::ClientSceneId* ModuleScene_Ntf_IntoFirstScene::release_sceneid() {
  
  ::common::ClientSceneId* temp = sceneid_;
  sceneid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientSceneId* ModuleScene_Ntf_IntoFirstScene::unsafe_arena_release_sceneid() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_IntoFirstScene.sceneId)
  
  ::common::ClientSceneId* temp = sceneid_;
  sceneid_ = nullptr;
  return temp;
}
inline ::common::ClientSceneId* ModuleScene_Ntf_IntoFirstScene::_internal_mutable_sceneid() {
  
  if (sceneid_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientSceneId>(GetArenaForAllocation());
    sceneid_ = p;
  }
  return sceneid_;
}
inline ::common::ClientSceneId* ModuleScene_Ntf_IntoFirstScene::mutable_sceneid() {
  ::common::ClientSceneId* _msg = _internal_mutable_sceneid();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_IntoFirstScene.sceneId)
  return _msg;
}
inline void ModuleScene_Ntf_IntoFirstScene::set_allocated_sceneid(::common::ClientSceneId* sceneid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sceneid_);
  }
  if (sceneid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sceneid));
    if (message_arena != submessage_arena) {
      sceneid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sceneid, submessage_arena);
    }
    
  } else {
    
  }
  sceneid_ = sceneid;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.sceneId)
}

// .common.ClientPosDirect curpos = 2;
inline bool ModuleScene_Ntf_IntoFirstScene::_internal_has_curpos() const {
  return this != internal_default_instance() && curpos_ != nullptr;
}
inline bool ModuleScene_Ntf_IntoFirstScene::has_curpos() const {
  return _internal_has_curpos();
}
inline const ::common::ClientPosDirect& ModuleScene_Ntf_IntoFirstScene::_internal_curpos() const {
  const ::common::ClientPosDirect* p = curpos_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientPosDirect&>(
      ::common::_ClientPosDirect_default_instance_);
}
inline const ::common::ClientPosDirect& ModuleScene_Ntf_IntoFirstScene::curpos() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_IntoFirstScene.curpos)
  return _internal_curpos();
}
inline void ModuleScene_Ntf_IntoFirstScene::unsafe_arena_set_allocated_curpos(
    ::common::ClientPosDirect* curpos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos_);
  }
  curpos_ = curpos;
  if (curpos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.curpos)
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_IntoFirstScene::release_curpos() {
  
  ::common::ClientPosDirect* temp = curpos_;
  curpos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_IntoFirstScene::unsafe_arena_release_curpos() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_IntoFirstScene.curpos)
  
  ::common::ClientPosDirect* temp = curpos_;
  curpos_ = nullptr;
  return temp;
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_IntoFirstScene::_internal_mutable_curpos() {
  
  if (curpos_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientPosDirect>(GetArenaForAllocation());
    curpos_ = p;
  }
  return curpos_;
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_IntoFirstScene::mutable_curpos() {
  ::common::ClientPosDirect* _msg = _internal_mutable_curpos();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_IntoFirstScene.curpos)
  return _msg;
}
inline void ModuleScene_Ntf_IntoFirstScene::set_allocated_curpos(::common::ClientPosDirect* curpos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos_);
  }
  if (curpos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos));
    if (message_arena != submessage_arena) {
      curpos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, curpos, submessage_arena);
    }
    
  } else {
    
  }
  curpos_ = curpos;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.curpos)
}

// .common.ReconnectInfo reconnect = 3;
inline bool ModuleScene_Ntf_IntoFirstScene::_internal_has_reconnect() const {
  return this != internal_default_instance() && reconnect_ != nullptr;
}
inline bool ModuleScene_Ntf_IntoFirstScene::has_reconnect() const {
  return _internal_has_reconnect();
}
inline const ::common::ReconnectInfo& ModuleScene_Ntf_IntoFirstScene::_internal_reconnect() const {
  const ::common::ReconnectInfo* p = reconnect_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ReconnectInfo&>(
      ::common::_ReconnectInfo_default_instance_);
}
inline const ::common::ReconnectInfo& ModuleScene_Ntf_IntoFirstScene::reconnect() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_IntoFirstScene.reconnect)
  return _internal_reconnect();
}
inline void ModuleScene_Ntf_IntoFirstScene::unsafe_arena_set_allocated_reconnect(
    ::common::ReconnectInfo* reconnect) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reconnect_);
  }
  reconnect_ = reconnect;
  if (reconnect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.reconnect)
}
inline ::common::ReconnectInfo* ModuleScene_Ntf_IntoFirstScene::release_reconnect() {
  
  ::common::ReconnectInfo* temp = reconnect_;
  reconnect_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ReconnectInfo* ModuleScene_Ntf_IntoFirstScene::unsafe_arena_release_reconnect() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_IntoFirstScene.reconnect)
  
  ::common::ReconnectInfo* temp = reconnect_;
  reconnect_ = nullptr;
  return temp;
}
inline ::common::ReconnectInfo* ModuleScene_Ntf_IntoFirstScene::_internal_mutable_reconnect() {
  
  if (reconnect_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ReconnectInfo>(GetArenaForAllocation());
    reconnect_ = p;
  }
  return reconnect_;
}
inline ::common::ReconnectInfo* ModuleScene_Ntf_IntoFirstScene::mutable_reconnect() {
  ::common::ReconnectInfo* _msg = _internal_mutable_reconnect();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_IntoFirstScene.reconnect)
  return _msg;
}
inline void ModuleScene_Ntf_IntoFirstScene::set_allocated_reconnect(::common::ReconnectInfo* reconnect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reconnect_);
  }
  if (reconnect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reconnect));
    if (message_arena != submessage_arena) {
      reconnect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reconnect, submessage_arena);
    }
    
  } else {
    
  }
  reconnect_ = reconnect;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.reconnect)
}

// .common.ViewObject object = 4;
inline bool ModuleScene_Ntf_IntoFirstScene::_internal_has_object() const {
  return this != internal_default_instance() && object_ != nullptr;
}
inline bool ModuleScene_Ntf_IntoFirstScene::has_object() const {
  return _internal_has_object();
}
inline const ::common::ViewObject& ModuleScene_Ntf_IntoFirstScene::_internal_object() const {
  const ::common::ViewObject* p = object_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ViewObject&>(
      ::common::_ViewObject_default_instance_);
}
inline const ::common::ViewObject& ModuleScene_Ntf_IntoFirstScene::object() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_IntoFirstScene.object)
  return _internal_object();
}
inline void ModuleScene_Ntf_IntoFirstScene::unsafe_arena_set_allocated_object(
    ::common::ViewObject* object) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(object_);
  }
  object_ = object;
  if (object) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.object)
}
inline ::common::ViewObject* ModuleScene_Ntf_IntoFirstScene::release_object() {
  
  ::common::ViewObject* temp = object_;
  object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ViewObject* ModuleScene_Ntf_IntoFirstScene::unsafe_arena_release_object() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_IntoFirstScene.object)
  
  ::common::ViewObject* temp = object_;
  object_ = nullptr;
  return temp;
}
inline ::common::ViewObject* ModuleScene_Ntf_IntoFirstScene::_internal_mutable_object() {
  
  if (object_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ViewObject>(GetArenaForAllocation());
    object_ = p;
  }
  return object_;
}
inline ::common::ViewObject* ModuleScene_Ntf_IntoFirstScene::mutable_object() {
  ::common::ViewObject* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_IntoFirstScene.object)
  return _msg;
}
inline void ModuleScene_Ntf_IntoFirstScene::set_allocated_object(::common::ViewObject* object) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(object_);
  }
  if (object) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(object));
    if (message_arena != submessage_arena) {
      object = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, object, submessage_arena);
    }
    
  } else {
    
  }
  object_ = object;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_IntoFirstScene.object)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_IntoFirstSession

// -------------------------------------------------------------------

// ModuleScene_Ntf_ModuleData

// repeated .common.ModuleDataByte modules = 1;
inline int ModuleScene_Ntf_ModuleData::_internal_modules_size() const {
  return modules_.size();
}
inline int ModuleScene_Ntf_ModuleData::modules_size() const {
  return _internal_modules_size();
}
inline ::common::ModuleDataByte* ModuleScene_Ntf_ModuleData::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_ModuleData.modules)
  return modules_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::ModuleDataByte >*
ModuleScene_Ntf_ModuleData::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:client.ModuleScene_Ntf_ModuleData.modules)
  return &modules_;
}
inline const ::common::ModuleDataByte& ModuleScene_Ntf_ModuleData::_internal_modules(int index) const {
  return modules_.Get(index);
}
inline const ::common::ModuleDataByte& ModuleScene_Ntf_ModuleData::modules(int index) const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_ModuleData.modules)
  return _internal_modules(index);
}
inline ::common::ModuleDataByte* ModuleScene_Ntf_ModuleData::_internal_add_modules() {
  return modules_.Add();
}
inline ::common::ModuleDataByte* ModuleScene_Ntf_ModuleData::add_modules() {
  ::common::ModuleDataByte* _add = _internal_add_modules();
  // @@protoc_insertion_point(field_add:client.ModuleScene_Ntf_ModuleData.modules)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::ModuleDataByte >&
ModuleScene_Ntf_ModuleData::modules() const {
  // @@protoc_insertion_point(field_list:client.ModuleScene_Ntf_ModuleData.modules)
  return modules_;
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_IntoFinishScene

// -------------------------------------------------------------------

// ModuleScene_Ntf_InfoFinishSession

// -------------------------------------------------------------------

// ModuleScene_Ntf_StaticViewAll

// .common.StaticViewList npcList = 1;
inline bool ModuleScene_Ntf_StaticViewAll::_internal_has_npclist() const {
  return this != internal_default_instance() && npclist_ != nullptr;
}
inline bool ModuleScene_Ntf_StaticViewAll::has_npclist() const {
  return _internal_has_npclist();
}
inline const ::common::StaticViewList& ModuleScene_Ntf_StaticViewAll::_internal_npclist() const {
  const ::common::StaticViewList* p = npclist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::StaticViewList&>(
      ::common::_StaticViewList_default_instance_);
}
inline const ::common::StaticViewList& ModuleScene_Ntf_StaticViewAll::npclist() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_StaticViewAll.npcList)
  return _internal_npclist();
}
inline void ModuleScene_Ntf_StaticViewAll::unsafe_arena_set_allocated_npclist(
    ::common::StaticViewList* npclist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(npclist_);
  }
  npclist_ = npclist;
  if (npclist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_StaticViewAll.npcList)
}
inline ::common::StaticViewList* ModuleScene_Ntf_StaticViewAll::release_npclist() {
  
  ::common::StaticViewList* temp = npclist_;
  npclist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::StaticViewList* ModuleScene_Ntf_StaticViewAll::unsafe_arena_release_npclist() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_StaticViewAll.npcList)
  
  ::common::StaticViewList* temp = npclist_;
  npclist_ = nullptr;
  return temp;
}
inline ::common::StaticViewList* ModuleScene_Ntf_StaticViewAll::_internal_mutable_npclist() {
  
  if (npclist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::StaticViewList>(GetArenaForAllocation());
    npclist_ = p;
  }
  return npclist_;
}
inline ::common::StaticViewList* ModuleScene_Ntf_StaticViewAll::mutable_npclist() {
  ::common::StaticViewList* _msg = _internal_mutable_npclist();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_StaticViewAll.npcList)
  return _msg;
}
inline void ModuleScene_Ntf_StaticViewAll::set_allocated_npclist(::common::StaticViewList* npclist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(npclist_);
  }
  if (npclist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(npclist));
    if (message_arena != submessage_arena) {
      npclist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, npclist, submessage_arena);
    }
    
  } else {
    
  }
  npclist_ = npclist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_StaticViewAll.npcList)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_DynamicViewAll

// .common.ViewObjectList objList = 1;
inline bool ModuleScene_Ntf_DynamicViewAll::_internal_has_objlist() const {
  return this != internal_default_instance() && objlist_ != nullptr;
}
inline bool ModuleScene_Ntf_DynamicViewAll::has_objlist() const {
  return _internal_has_objlist();
}
inline const ::common::ViewObjectList& ModuleScene_Ntf_DynamicViewAll::_internal_objlist() const {
  const ::common::ViewObjectList* p = objlist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ViewObjectList&>(
      ::common::_ViewObjectList_default_instance_);
}
inline const ::common::ViewObjectList& ModuleScene_Ntf_DynamicViewAll::objlist() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_DynamicViewAll.objList)
  return _internal_objlist();
}
inline void ModuleScene_Ntf_DynamicViewAll::unsafe_arena_set_allocated_objlist(
    ::common::ViewObjectList* objlist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(objlist_);
  }
  objlist_ = objlist;
  if (objlist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_DynamicViewAll.objList)
}
inline ::common::ViewObjectList* ModuleScene_Ntf_DynamicViewAll::release_objlist() {
  
  ::common::ViewObjectList* temp = objlist_;
  objlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ViewObjectList* ModuleScene_Ntf_DynamicViewAll::unsafe_arena_release_objlist() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_DynamicViewAll.objList)
  
  ::common::ViewObjectList* temp = objlist_;
  objlist_ = nullptr;
  return temp;
}
inline ::common::ViewObjectList* ModuleScene_Ntf_DynamicViewAll::_internal_mutable_objlist() {
  
  if (objlist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ViewObjectList>(GetArenaForAllocation());
    objlist_ = p;
  }
  return objlist_;
}
inline ::common::ViewObjectList* ModuleScene_Ntf_DynamicViewAll::mutable_objlist() {
  ::common::ViewObjectList* _msg = _internal_mutable_objlist();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_DynamicViewAll.objList)
  return _msg;
}
inline void ModuleScene_Ntf_DynamicViewAll::set_allocated_objlist(::common::ViewObjectList* objlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(objlist_);
  }
  if (objlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(objlist));
    if (message_arena != submessage_arena) {
      objlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objlist, submessage_arena);
    }
    
  } else {
    
  }
  objlist_ = objlist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_DynamicViewAll.objList)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_ViewObjectAdd

// .common.ViewObjectNpc object = 1;
inline bool ModuleScene_Ntf_ViewObjectAdd::_internal_has_object() const {
  return this != internal_default_instance() && object_ != nullptr;
}
inline bool ModuleScene_Ntf_ViewObjectAdd::has_object() const {
  return _internal_has_object();
}
inline const ::common::ViewObjectNpc& ModuleScene_Ntf_ViewObjectAdd::_internal_object() const {
  const ::common::ViewObjectNpc* p = object_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ViewObjectNpc&>(
      ::common::_ViewObjectNpc_default_instance_);
}
inline const ::common::ViewObjectNpc& ModuleScene_Ntf_ViewObjectAdd::object() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_ViewObjectAdd.object)
  return _internal_object();
}
inline void ModuleScene_Ntf_ViewObjectAdd::unsafe_arena_set_allocated_object(
    ::common::ViewObjectNpc* object) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(object_);
  }
  object_ = object;
  if (object) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_ViewObjectAdd.object)
}
inline ::common::ViewObjectNpc* ModuleScene_Ntf_ViewObjectAdd::release_object() {
  
  ::common::ViewObjectNpc* temp = object_;
  object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ViewObjectNpc* ModuleScene_Ntf_ViewObjectAdd::unsafe_arena_release_object() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_ViewObjectAdd.object)
  
  ::common::ViewObjectNpc* temp = object_;
  object_ = nullptr;
  return temp;
}
inline ::common::ViewObjectNpc* ModuleScene_Ntf_ViewObjectAdd::_internal_mutable_object() {
  
  if (object_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ViewObjectNpc>(GetArenaForAllocation());
    object_ = p;
  }
  return object_;
}
inline ::common::ViewObjectNpc* ModuleScene_Ntf_ViewObjectAdd::mutable_object() {
  ::common::ViewObjectNpc* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_ViewObjectAdd.object)
  return _msg;
}
inline void ModuleScene_Ntf_ViewObjectAdd::set_allocated_object(::common::ViewObjectNpc* object) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(object_);
  }
  if (object) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(object));
    if (message_arena != submessage_arena) {
      object = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, object, submessage_arena);
    }
    
  } else {
    
  }
  object_ = object;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_ViewObjectAdd.object)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_ViewObjectRemove

// .common.ViewObjectIdList objidList = 1;
inline bool ModuleScene_Ntf_ViewObjectRemove::_internal_has_objidlist() const {
  return this != internal_default_instance() && objidlist_ != nullptr;
}
inline bool ModuleScene_Ntf_ViewObjectRemove::has_objidlist() const {
  return _internal_has_objidlist();
}
inline const ::common::ViewObjectIdList& ModuleScene_Ntf_ViewObjectRemove::_internal_objidlist() const {
  const ::common::ViewObjectIdList* p = objidlist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ViewObjectIdList&>(
      ::common::_ViewObjectIdList_default_instance_);
}
inline const ::common::ViewObjectIdList& ModuleScene_Ntf_ViewObjectRemove::objidlist() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_ViewObjectRemove.objidList)
  return _internal_objidlist();
}
inline void ModuleScene_Ntf_ViewObjectRemove::unsafe_arena_set_allocated_objidlist(
    ::common::ViewObjectIdList* objidlist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(objidlist_);
  }
  objidlist_ = objidlist;
  if (objidlist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_ViewObjectRemove.objidList)
}
inline ::common::ViewObjectIdList* ModuleScene_Ntf_ViewObjectRemove::release_objidlist() {
  
  ::common::ViewObjectIdList* temp = objidlist_;
  objidlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ViewObjectIdList* ModuleScene_Ntf_ViewObjectRemove::unsafe_arena_release_objidlist() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_ViewObjectRemove.objidList)
  
  ::common::ViewObjectIdList* temp = objidlist_;
  objidlist_ = nullptr;
  return temp;
}
inline ::common::ViewObjectIdList* ModuleScene_Ntf_ViewObjectRemove::_internal_mutable_objidlist() {
  
  if (objidlist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ViewObjectIdList>(GetArenaForAllocation());
    objidlist_ = p;
  }
  return objidlist_;
}
inline ::common::ViewObjectIdList* ModuleScene_Ntf_ViewObjectRemove::mutable_objidlist() {
  ::common::ViewObjectIdList* _msg = _internal_mutable_objidlist();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_ViewObjectRemove.objidList)
  return _msg;
}
inline void ModuleScene_Ntf_ViewObjectRemove::set_allocated_objidlist(::common::ViewObjectIdList* objidlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(objidlist_);
  }
  if (objidlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(objidlist));
    if (message_arena != submessage_arena) {
      objidlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objidlist, submessage_arena);
    }
    
  } else {
    
  }
  objidlist_ = objidlist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_ViewObjectRemove.objidList)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_ChgViewField

// uint64 viewId = 1;
inline void ModuleScene_Ntf_ChgViewField::clear_viewid() {
  viewid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_ChgViewField::_internal_viewid() const {
  return viewid_;
}
inline uint64_t ModuleScene_Ntf_ChgViewField::viewid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_ChgViewField.viewId)
  return _internal_viewid();
}
inline void ModuleScene_Ntf_ChgViewField::_internal_set_viewid(uint64_t value) {
  
  viewid_ = value;
}
inline void ModuleScene_Ntf_ChgViewField::set_viewid(uint64_t value) {
  _internal_set_viewid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_ChgViewField.viewId)
}

// .common.ViewFieldList fieldList = 2;
inline bool ModuleScene_Ntf_ChgViewField::_internal_has_fieldlist() const {
  return this != internal_default_instance() && fieldlist_ != nullptr;
}
inline bool ModuleScene_Ntf_ChgViewField::has_fieldlist() const {
  return _internal_has_fieldlist();
}
inline const ::common::ViewFieldList& ModuleScene_Ntf_ChgViewField::_internal_fieldlist() const {
  const ::common::ViewFieldList* p = fieldlist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ViewFieldList&>(
      ::common::_ViewFieldList_default_instance_);
}
inline const ::common::ViewFieldList& ModuleScene_Ntf_ChgViewField::fieldlist() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_ChgViewField.fieldList)
  return _internal_fieldlist();
}
inline void ModuleScene_Ntf_ChgViewField::unsafe_arena_set_allocated_fieldlist(
    ::common::ViewFieldList* fieldlist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fieldlist_);
  }
  fieldlist_ = fieldlist;
  if (fieldlist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_ChgViewField.fieldList)
}
inline ::common::ViewFieldList* ModuleScene_Ntf_ChgViewField::release_fieldlist() {
  
  ::common::ViewFieldList* temp = fieldlist_;
  fieldlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ViewFieldList* ModuleScene_Ntf_ChgViewField::unsafe_arena_release_fieldlist() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_ChgViewField.fieldList)
  
  ::common::ViewFieldList* temp = fieldlist_;
  fieldlist_ = nullptr;
  return temp;
}
inline ::common::ViewFieldList* ModuleScene_Ntf_ChgViewField::_internal_mutable_fieldlist() {
  
  if (fieldlist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ViewFieldList>(GetArenaForAllocation());
    fieldlist_ = p;
  }
  return fieldlist_;
}
inline ::common::ViewFieldList* ModuleScene_Ntf_ChgViewField::mutable_fieldlist() {
  ::common::ViewFieldList* _msg = _internal_mutable_fieldlist();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_ChgViewField.fieldList)
  return _msg;
}
inline void ModuleScene_Ntf_ChgViewField::set_allocated_fieldlist(::common::ViewFieldList* fieldlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(fieldlist_);
  }
  if (fieldlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fieldlist));
    if (message_arena != submessage_arena) {
      fieldlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fieldlist, submessage_arena);
    }
    
  } else {
    
  }
  fieldlist_ = fieldlist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_ChgViewField.fieldList)
}

// bool isfight = 3;
inline void ModuleScene_Ntf_ChgViewField::clear_isfight() {
  isfight_ = false;
}
inline bool ModuleScene_Ntf_ChgViewField::_internal_isfight() const {
  return isfight_;
}
inline bool ModuleScene_Ntf_ChgViewField::isfight() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_ChgViewField.isfight)
  return _internal_isfight();
}
inline void ModuleScene_Ntf_ChgViewField::_internal_set_isfight(bool value) {
  
  isfight_ = value;
}
inline void ModuleScene_Ntf_ChgViewField::set_isfight(bool value) {
  _internal_set_isfight(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_ChgViewField.isfight)
}

// -------------------------------------------------------------------

// ModuleScene_Req_VisitNpc

// uint32 npcuid = 1;
inline void ModuleScene_Req_VisitNpc::clear_npcuid() {
  npcuid_ = 0u;
}
inline uint32_t ModuleScene_Req_VisitNpc::_internal_npcuid() const {
  return npcuid_;
}
inline uint32_t ModuleScene_Req_VisitNpc::npcuid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_VisitNpc.npcuid)
  return _internal_npcuid();
}
inline void ModuleScene_Req_VisitNpc::_internal_set_npcuid(uint32_t value) {
  
  npcuid_ = value;
}
inline void ModuleScene_Req_VisitNpc::set_npcuid(uint32_t value) {
  _internal_set_npcuid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_VisitNpc.npcuid)
}

// uint32 eventid = 2;
inline void ModuleScene_Req_VisitNpc::clear_eventid() {
  eventid_ = 0u;
}
inline uint32_t ModuleScene_Req_VisitNpc::_internal_eventid() const {
  return eventid_;
}
inline uint32_t ModuleScene_Req_VisitNpc::eventid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_VisitNpc.eventid)
  return _internal_eventid();
}
inline void ModuleScene_Req_VisitNpc::_internal_set_eventid(uint32_t value) {
  
  eventid_ = value;
}
inline void ModuleScene_Req_VisitNpc::set_eventid(uint32_t value) {
  _internal_set_eventid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_VisitNpc.eventid)
}

// uint32 param = 3;
inline void ModuleScene_Req_VisitNpc::clear_param() {
  param_ = 0u;
}
inline uint32_t ModuleScene_Req_VisitNpc::_internal_param() const {
  return param_;
}
inline uint32_t ModuleScene_Req_VisitNpc::param() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_VisitNpc.param)
  return _internal_param();
}
inline void ModuleScene_Req_VisitNpc::_internal_set_param(uint32_t value) {
  
  param_ = value;
}
inline void ModuleScene_Req_VisitNpc::set_param(uint32_t value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_VisitNpc.param)
}

// -------------------------------------------------------------------

// ModuleScene_Req_CloseChat

// uint32 npcuid = 1;
inline void ModuleScene_Req_CloseChat::clear_npcuid() {
  npcuid_ = 0u;
}
inline uint32_t ModuleScene_Req_CloseChat::_internal_npcuid() const {
  return npcuid_;
}
inline uint32_t ModuleScene_Req_CloseChat::npcuid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_CloseChat.npcuid)
  return _internal_npcuid();
}
inline void ModuleScene_Req_CloseChat::_internal_set_npcuid(uint32_t value) {
  
  npcuid_ = value;
}
inline void ModuleScene_Req_CloseChat::set_npcuid(uint32_t value) {
  _internal_set_npcuid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_CloseChat.npcuid)
}

// uint32 chatid = 2;
inline void ModuleScene_Req_CloseChat::clear_chatid() {
  chatid_ = 0u;
}
inline uint32_t ModuleScene_Req_CloseChat::_internal_chatid() const {
  return chatid_;
}
inline uint32_t ModuleScene_Req_CloseChat::chatid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_CloseChat.chatid)
  return _internal_chatid();
}
inline void ModuleScene_Req_CloseChat::_internal_set_chatid(uint32_t value) {
  
  chatid_ = value;
}
inline void ModuleScene_Req_CloseChat::set_chatid(uint32_t value) {
  _internal_set_chatid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_CloseChat.chatid)
}

// uint32 param = 3;
inline void ModuleScene_Req_CloseChat::clear_param() {
  param_ = 0u;
}
inline uint32_t ModuleScene_Req_CloseChat::_internal_param() const {
  return param_;
}
inline uint32_t ModuleScene_Req_CloseChat::param() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_CloseChat.param)
  return _internal_param();
}
inline void ModuleScene_Req_CloseChat::_internal_set_param(uint32_t value) {
  
  param_ = value;
}
inline void ModuleScene_Req_CloseChat::set_param(uint32_t value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_CloseChat.param)
}

// -------------------------------------------------------------------

// ModuleScene_Req_UserMove

// uint32 clientType = 1;
inline void ModuleScene_Req_UserMove::clear_clienttype() {
  clienttype_ = 0u;
}
inline uint32_t ModuleScene_Req_UserMove::_internal_clienttype() const {
  return clienttype_;
}
inline uint32_t ModuleScene_Req_UserMove::clienttype() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_UserMove.clientType)
  return _internal_clienttype();
}
inline void ModuleScene_Req_UserMove::_internal_set_clienttype(uint32_t value) {
  
  clienttype_ = value;
}
inline void ModuleScene_Req_UserMove::set_clienttype(uint32_t value) {
  _internal_set_clienttype(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_UserMove.clientType)
}

// .common.ClientPosTerminate posList = 2;
inline bool ModuleScene_Req_UserMove::_internal_has_poslist() const {
  return this != internal_default_instance() && poslist_ != nullptr;
}
inline bool ModuleScene_Req_UserMove::has_poslist() const {
  return _internal_has_poslist();
}
inline const ::common::ClientPosTerminate& ModuleScene_Req_UserMove::_internal_poslist() const {
  const ::common::ClientPosTerminate* p = poslist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientPosTerminate&>(
      ::common::_ClientPosTerminate_default_instance_);
}
inline const ::common::ClientPosTerminate& ModuleScene_Req_UserMove::poslist() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_UserMove.posList)
  return _internal_poslist();
}
inline void ModuleScene_Req_UserMove::unsafe_arena_set_allocated_poslist(
    ::common::ClientPosTerminate* poslist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(poslist_);
  }
  poslist_ = poslist;
  if (poslist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Req_UserMove.posList)
}
inline ::common::ClientPosTerminate* ModuleScene_Req_UserMove::release_poslist() {
  
  ::common::ClientPosTerminate* temp = poslist_;
  poslist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientPosTerminate* ModuleScene_Req_UserMove::unsafe_arena_release_poslist() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Req_UserMove.posList)
  
  ::common::ClientPosTerminate* temp = poslist_;
  poslist_ = nullptr;
  return temp;
}
inline ::common::ClientPosTerminate* ModuleScene_Req_UserMove::_internal_mutable_poslist() {
  
  if (poslist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientPosTerminate>(GetArenaForAllocation());
    poslist_ = p;
  }
  return poslist_;
}
inline ::common::ClientPosTerminate* ModuleScene_Req_UserMove::mutable_poslist() {
  ::common::ClientPosTerminate* _msg = _internal_mutable_poslist();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Req_UserMove.posList)
  return _msg;
}
inline void ModuleScene_Req_UserMove::set_allocated_poslist(::common::ClientPosTerminate* poslist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(poslist_);
  }
  if (poslist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(poslist));
    if (message_arena != submessage_arena) {
      poslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, poslist, submessage_arena);
    }
    
  } else {
    
  }
  poslist_ = poslist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Req_UserMove.posList)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_UserMove

// uint64 roleId = 1;
inline void ModuleScene_Ntf_UserMove::clear_roleid() {
  roleid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_UserMove::_internal_roleid() const {
  return roleid_;
}
inline uint64_t ModuleScene_Ntf_UserMove::roleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_UserMove.roleId)
  return _internal_roleid();
}
inline void ModuleScene_Ntf_UserMove::_internal_set_roleid(uint64_t value) {
  
  roleid_ = value;
}
inline void ModuleScene_Ntf_UserMove::set_roleid(uint64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_UserMove.roleId)
}

// .common.ClientPosTogether posto = 2;
inline bool ModuleScene_Ntf_UserMove::_internal_has_posto() const {
  return this != internal_default_instance() && posto_ != nullptr;
}
inline bool ModuleScene_Ntf_UserMove::has_posto() const {
  return _internal_has_posto();
}
inline const ::common::ClientPosTogether& ModuleScene_Ntf_UserMove::_internal_posto() const {
  const ::common::ClientPosTogether* p = posto_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientPosTogether&>(
      ::common::_ClientPosTogether_default_instance_);
}
inline const ::common::ClientPosTogether& ModuleScene_Ntf_UserMove::posto() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_UserMove.posto)
  return _internal_posto();
}
inline void ModuleScene_Ntf_UserMove::unsafe_arena_set_allocated_posto(
    ::common::ClientPosTogether* posto) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(posto_);
  }
  posto_ = posto;
  if (posto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_UserMove.posto)
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_UserMove::release_posto() {
  
  ::common::ClientPosTogether* temp = posto_;
  posto_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_UserMove::unsafe_arena_release_posto() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_UserMove.posto)
  
  ::common::ClientPosTogether* temp = posto_;
  posto_ = nullptr;
  return temp;
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_UserMove::_internal_mutable_posto() {
  
  if (posto_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientPosTogether>(GetArenaForAllocation());
    posto_ = p;
  }
  return posto_;
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_UserMove::mutable_posto() {
  ::common::ClientPosTogether* _msg = _internal_mutable_posto();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_UserMove.posto)
  return _msg;
}
inline void ModuleScene_Ntf_UserMove::set_allocated_posto(::common::ClientPosTogether* posto) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(posto_);
  }
  if (posto) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(posto));
    if (message_arena != submessage_arena) {
      posto = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, posto, submessage_arena);
    }
    
  } else {
    
  }
  posto_ = posto;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_UserMove.posto)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_MonsterMove

// uint64 viewId = 1;
inline void ModuleScene_Ntf_MonsterMove::clear_viewid() {
  viewid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_MonsterMove::_internal_viewid() const {
  return viewid_;
}
inline uint64_t ModuleScene_Ntf_MonsterMove::viewid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MonsterMove.viewId)
  return _internal_viewid();
}
inline void ModuleScene_Ntf_MonsterMove::_internal_set_viewid(uint64_t value) {
  
  viewid_ = value;
}
inline void ModuleScene_Ntf_MonsterMove::set_viewid(uint64_t value) {
  _internal_set_viewid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_MonsterMove.viewId)
}

// .common.ClientPosTogether posto = 2;
inline bool ModuleScene_Ntf_MonsterMove::_internal_has_posto() const {
  return this != internal_default_instance() && posto_ != nullptr;
}
inline bool ModuleScene_Ntf_MonsterMove::has_posto() const {
  return _internal_has_posto();
}
inline const ::common::ClientPosTogether& ModuleScene_Ntf_MonsterMove::_internal_posto() const {
  const ::common::ClientPosTogether* p = posto_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientPosTogether&>(
      ::common::_ClientPosTogether_default_instance_);
}
inline const ::common::ClientPosTogether& ModuleScene_Ntf_MonsterMove::posto() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MonsterMove.posto)
  return _internal_posto();
}
inline void ModuleScene_Ntf_MonsterMove::unsafe_arena_set_allocated_posto(
    ::common::ClientPosTogether* posto) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(posto_);
  }
  posto_ = posto;
  if (posto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_MonsterMove.posto)
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_MonsterMove::release_posto() {
  
  ::common::ClientPosTogether* temp = posto_;
  posto_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_MonsterMove::unsafe_arena_release_posto() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_MonsterMove.posto)
  
  ::common::ClientPosTogether* temp = posto_;
  posto_ = nullptr;
  return temp;
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_MonsterMove::_internal_mutable_posto() {
  
  if (posto_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientPosTogether>(GetArenaForAllocation());
    posto_ = p;
  }
  return posto_;
}
inline ::common::ClientPosTogether* ModuleScene_Ntf_MonsterMove::mutable_posto() {
  ::common::ClientPosTogether* _msg = _internal_mutable_posto();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_MonsterMove.posto)
  return _msg;
}
inline void ModuleScene_Ntf_MonsterMove::set_allocated_posto(::common::ClientPosTogether* posto) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(posto_);
  }
  if (posto) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(posto));
    if (message_arena != submessage_arena) {
      posto = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, posto, submessage_arena);
    }
    
  } else {
    
  }
  posto_ = posto;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_MonsterMove.posto)
}

// -------------------------------------------------------------------

// ModuleScene_Req_MoveStop

// .common.ClientPosDirect curpos = 1;
inline bool ModuleScene_Req_MoveStop::_internal_has_curpos() const {
  return this != internal_default_instance() && curpos_ != nullptr;
}
inline bool ModuleScene_Req_MoveStop::has_curpos() const {
  return _internal_has_curpos();
}
inline const ::common::ClientPosDirect& ModuleScene_Req_MoveStop::_internal_curpos() const {
  const ::common::ClientPosDirect* p = curpos_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientPosDirect&>(
      ::common::_ClientPosDirect_default_instance_);
}
inline const ::common::ClientPosDirect& ModuleScene_Req_MoveStop::curpos() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_MoveStop.curpos)
  return _internal_curpos();
}
inline void ModuleScene_Req_MoveStop::unsafe_arena_set_allocated_curpos(
    ::common::ClientPosDirect* curpos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos_);
  }
  curpos_ = curpos;
  if (curpos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Req_MoveStop.curpos)
}
inline ::common::ClientPosDirect* ModuleScene_Req_MoveStop::release_curpos() {
  
  ::common::ClientPosDirect* temp = curpos_;
  curpos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientPosDirect* ModuleScene_Req_MoveStop::unsafe_arena_release_curpos() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Req_MoveStop.curpos)
  
  ::common::ClientPosDirect* temp = curpos_;
  curpos_ = nullptr;
  return temp;
}
inline ::common::ClientPosDirect* ModuleScene_Req_MoveStop::_internal_mutable_curpos() {
  
  if (curpos_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientPosDirect>(GetArenaForAllocation());
    curpos_ = p;
  }
  return curpos_;
}
inline ::common::ClientPosDirect* ModuleScene_Req_MoveStop::mutable_curpos() {
  ::common::ClientPosDirect* _msg = _internal_mutable_curpos();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Req_MoveStop.curpos)
  return _msg;
}
inline void ModuleScene_Req_MoveStop::set_allocated_curpos(::common::ClientPosDirect* curpos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos_);
  }
  if (curpos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos));
    if (message_arena != submessage_arena) {
      curpos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, curpos, submessage_arena);
    }
    
  } else {
    
  }
  curpos_ = curpos;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Req_MoveStop.curpos)
}

// uint64 servertime = 2;
inline void ModuleScene_Req_MoveStop::clear_servertime() {
  servertime_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Req_MoveStop::_internal_servertime() const {
  return servertime_;
}
inline uint64_t ModuleScene_Req_MoveStop::servertime() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_MoveStop.servertime)
  return _internal_servertime();
}
inline void ModuleScene_Req_MoveStop::_internal_set_servertime(uint64_t value) {
  
  servertime_ = value;
}
inline void ModuleScene_Req_MoveStop::set_servertime(uint64_t value) {
  _internal_set_servertime(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_MoveStop.servertime)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_MoveStop

// uint64 viewId = 1;
inline void ModuleScene_Ntf_MoveStop::clear_viewid() {
  viewid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_MoveStop::_internal_viewid() const {
  return viewid_;
}
inline uint64_t ModuleScene_Ntf_MoveStop::viewid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MoveStop.viewId)
  return _internal_viewid();
}
inline void ModuleScene_Ntf_MoveStop::_internal_set_viewid(uint64_t value) {
  
  viewid_ = value;
}
inline void ModuleScene_Ntf_MoveStop::set_viewid(uint64_t value) {
  _internal_set_viewid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_MoveStop.viewId)
}

// .common.ClientPosDirect curpos = 2;
inline bool ModuleScene_Ntf_MoveStop::_internal_has_curpos() const {
  return this != internal_default_instance() && curpos_ != nullptr;
}
inline bool ModuleScene_Ntf_MoveStop::has_curpos() const {
  return _internal_has_curpos();
}
inline const ::common::ClientPosDirect& ModuleScene_Ntf_MoveStop::_internal_curpos() const {
  const ::common::ClientPosDirect* p = curpos_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ClientPosDirect&>(
      ::common::_ClientPosDirect_default_instance_);
}
inline const ::common::ClientPosDirect& ModuleScene_Ntf_MoveStop::curpos() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MoveStop.curpos)
  return _internal_curpos();
}
inline void ModuleScene_Ntf_MoveStop::unsafe_arena_set_allocated_curpos(
    ::common::ClientPosDirect* curpos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos_);
  }
  curpos_ = curpos;
  if (curpos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_MoveStop.curpos)
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_MoveStop::release_curpos() {
  
  ::common::ClientPosDirect* temp = curpos_;
  curpos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_MoveStop::unsafe_arena_release_curpos() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_MoveStop.curpos)
  
  ::common::ClientPosDirect* temp = curpos_;
  curpos_ = nullptr;
  return temp;
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_MoveStop::_internal_mutable_curpos() {
  
  if (curpos_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ClientPosDirect>(GetArenaForAllocation());
    curpos_ = p;
  }
  return curpos_;
}
inline ::common::ClientPosDirect* ModuleScene_Ntf_MoveStop::mutable_curpos() {
  ::common::ClientPosDirect* _msg = _internal_mutable_curpos();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_MoveStop.curpos)
  return _msg;
}
inline void ModuleScene_Ntf_MoveStop::set_allocated_curpos(::common::ClientPosDirect* curpos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos_);
  }
  if (curpos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(curpos));
    if (message_arena != submessage_arena) {
      curpos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, curpos, submessage_arena);
    }
    
  } else {
    
  }
  curpos_ = curpos;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_MoveStop.curpos)
}

// -------------------------------------------------------------------

// ModuleScene_Req_TurnDirect

// uint32 direct = 1;
inline void ModuleScene_Req_TurnDirect::clear_direct() {
  direct_ = 0u;
}
inline uint32_t ModuleScene_Req_TurnDirect::_internal_direct() const {
  return direct_;
}
inline uint32_t ModuleScene_Req_TurnDirect::direct() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_TurnDirect.direct)
  return _internal_direct();
}
inline void ModuleScene_Req_TurnDirect::_internal_set_direct(uint32_t value) {
  
  direct_ = value;
}
inline void ModuleScene_Req_TurnDirect::set_direct(uint32_t value) {
  _internal_set_direct(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_TurnDirect.direct)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_TurnDirect

// uint64 viewId = 1;
inline void ModuleScene_Ntf_TurnDirect::clear_viewid() {
  viewid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_TurnDirect::_internal_viewid() const {
  return viewid_;
}
inline uint64_t ModuleScene_Ntf_TurnDirect::viewid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_TurnDirect.viewId)
  return _internal_viewid();
}
inline void ModuleScene_Ntf_TurnDirect::_internal_set_viewid(uint64_t value) {
  
  viewid_ = value;
}
inline void ModuleScene_Ntf_TurnDirect::set_viewid(uint64_t value) {
  _internal_set_viewid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_TurnDirect.viewId)
}

// uint32 direct = 2;
inline void ModuleScene_Ntf_TurnDirect::clear_direct() {
  direct_ = 0u;
}
inline uint32_t ModuleScene_Ntf_TurnDirect::_internal_direct() const {
  return direct_;
}
inline uint32_t ModuleScene_Ntf_TurnDirect::direct() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_TurnDirect.direct)
  return _internal_direct();
}
inline void ModuleScene_Ntf_TurnDirect::_internal_set_direct(uint32_t value) {
  
  direct_ = value;
}
inline void ModuleScene_Ntf_TurnDirect::set_direct(uint32_t value) {
  _internal_set_direct(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_TurnDirect.direct)
}

// -------------------------------------------------------------------

// ModuleScene_Req_Rebirth

// uint32 type = 1;
inline void ModuleScene_Req_Rebirth::clear_type() {
  type_ = 0u;
}
inline uint32_t ModuleScene_Req_Rebirth::_internal_type() const {
  return type_;
}
inline uint32_t ModuleScene_Req_Rebirth::type() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_Rebirth.type)
  return _internal_type();
}
inline void ModuleScene_Req_Rebirth::_internal_set_type(uint32_t value) {
  
  type_ = value;
}
inline void ModuleScene_Req_Rebirth::set_type(uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_Rebirth.type)
}

// uint64 roleid = 2;
inline void ModuleScene_Req_Rebirth::clear_roleid() {
  roleid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Req_Rebirth::_internal_roleid() const {
  return roleid_;
}
inline uint64_t ModuleScene_Req_Rebirth::roleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_Rebirth.roleid)
  return _internal_roleid();
}
inline void ModuleScene_Req_Rebirth::_internal_set_roleid(uint64_t value) {
  
  roleid_ = value;
}
inline void ModuleScene_Req_Rebirth::set_roleid(uint64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_Rebirth.roleid)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_Rebirth

// uint64 fromid = 1;
inline void ModuleScene_Ntf_Rebirth::clear_fromid() {
  fromid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_Rebirth::_internal_fromid() const {
  return fromid_;
}
inline uint64_t ModuleScene_Ntf_Rebirth::fromid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_Rebirth.fromid)
  return _internal_fromid();
}
inline void ModuleScene_Ntf_Rebirth::_internal_set_fromid(uint64_t value) {
  
  fromid_ = value;
}
inline void ModuleScene_Ntf_Rebirth::set_fromid(uint64_t value) {
  _internal_set_fromid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_Rebirth.fromid)
}

// uint64 rebirthid = 2;
inline void ModuleScene_Ntf_Rebirth::clear_rebirthid() {
  rebirthid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Ntf_Rebirth::_internal_rebirthid() const {
  return rebirthid_;
}
inline uint64_t ModuleScene_Ntf_Rebirth::rebirthid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_Rebirth.rebirthid)
  return _internal_rebirthid();
}
inline void ModuleScene_Ntf_Rebirth::_internal_set_rebirthid(uint64_t value) {
  
  rebirthid_ = value;
}
inline void ModuleScene_Ntf_Rebirth::set_rebirthid(uint64_t value) {
  _internal_set_rebirthid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_Rebirth.rebirthid)
}

// uint32 rebirthCnt = 3;
inline void ModuleScene_Ntf_Rebirth::clear_rebirthcnt() {
  rebirthcnt_ = 0u;
}
inline uint32_t ModuleScene_Ntf_Rebirth::_internal_rebirthcnt() const {
  return rebirthcnt_;
}
inline uint32_t ModuleScene_Ntf_Rebirth::rebirthcnt() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_Rebirth.rebirthCnt)
  return _internal_rebirthcnt();
}
inline void ModuleScene_Ntf_Rebirth::_internal_set_rebirthcnt(uint32_t value) {
  
  rebirthcnt_ = value;
}
inline void ModuleScene_Ntf_Rebirth::set_rebirthcnt(uint32_t value) {
  _internal_set_rebirthcnt(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_Rebirth.rebirthCnt)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_RebirthInfo

// .common.RebirthInfo info = 1;
inline bool ModuleScene_Ntf_RebirthInfo::_internal_has_info() const {
  return this != internal_default_instance() && info_ != nullptr;
}
inline bool ModuleScene_Ntf_RebirthInfo::has_info() const {
  return _internal_has_info();
}
inline const ::common::RebirthInfo& ModuleScene_Ntf_RebirthInfo::_internal_info() const {
  const ::common::RebirthInfo* p = info_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::RebirthInfo&>(
      ::common::_RebirthInfo_default_instance_);
}
inline const ::common::RebirthInfo& ModuleScene_Ntf_RebirthInfo::info() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_RebirthInfo.info)
  return _internal_info();
}
inline void ModuleScene_Ntf_RebirthInfo::unsafe_arena_set_allocated_info(
    ::common::RebirthInfo* info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(info_);
  }
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_RebirthInfo.info)
}
inline ::common::RebirthInfo* ModuleScene_Ntf_RebirthInfo::release_info() {
  
  ::common::RebirthInfo* temp = info_;
  info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::RebirthInfo* ModuleScene_Ntf_RebirthInfo::unsafe_arena_release_info() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_RebirthInfo.info)
  
  ::common::RebirthInfo* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::common::RebirthInfo* ModuleScene_Ntf_RebirthInfo::_internal_mutable_info() {
  
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::RebirthInfo>(GetArenaForAllocation());
    info_ = p;
  }
  return info_;
}
inline ::common::RebirthInfo* ModuleScene_Ntf_RebirthInfo::mutable_info() {
  ::common::RebirthInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_RebirthInfo.info)
  return _msg;
}
inline void ModuleScene_Ntf_RebirthInfo::set_allocated_info(::common::RebirthInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(info_);
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(info));
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_RebirthInfo.info)
}

// -------------------------------------------------------------------

// ModuleScene_Req_GoToBirthPos

// -------------------------------------------------------------------

// ModuleScene_Req_SelectViewId

// uint64 selectId = 1;
inline void ModuleScene_Req_SelectViewId::clear_selectid() {
  selectid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Req_SelectViewId::_internal_selectid() const {
  return selectid_;
}
inline uint64_t ModuleScene_Req_SelectViewId::selectid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_SelectViewId.selectId)
  return _internal_selectid();
}
inline void ModuleScene_Req_SelectViewId::_internal_set_selectid(uint64_t value) {
  
  selectid_ = value;
}
inline void ModuleScene_Req_SelectViewId::set_selectid(uint64_t value) {
  _internal_set_selectid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_SelectViewId.selectId)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_PerformanceStart

// uint32 type = 1;
inline void ModuleScene_Ntf_PerformanceStart::clear_type() {
  type_ = 0u;
}
inline uint32_t ModuleScene_Ntf_PerformanceStart::_internal_type() const {
  return type_;
}
inline uint32_t ModuleScene_Ntf_PerformanceStart::type() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_PerformanceStart.type)
  return _internal_type();
}
inline void ModuleScene_Ntf_PerformanceStart::_internal_set_type(uint32_t value) {
  
  type_ = value;
}
inline void ModuleScene_Ntf_PerformanceStart::set_type(uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_PerformanceStart.type)
}

// uint32 id = 2;
inline void ModuleScene_Ntf_PerformanceStart::clear_id() {
  id_ = 0u;
}
inline uint32_t ModuleScene_Ntf_PerformanceStart::_internal_id() const {
  return id_;
}
inline uint32_t ModuleScene_Ntf_PerformanceStart::id() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_PerformanceStart.id)
  return _internal_id();
}
inline void ModuleScene_Ntf_PerformanceStart::_internal_set_id(uint32_t value) {
  
  id_ = value;
}
inline void ModuleScene_Ntf_PerformanceStart::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_PerformanceStart.id)
}

// -------------------------------------------------------------------

// ModuleScene_Req_FinishPerformance

// uint32 type = 1;
inline void ModuleScene_Req_FinishPerformance::clear_type() {
  type_ = 0u;
}
inline uint32_t ModuleScene_Req_FinishPerformance::_internal_type() const {
  return type_;
}
inline uint32_t ModuleScene_Req_FinishPerformance::type() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_FinishPerformance.type)
  return _internal_type();
}
inline void ModuleScene_Req_FinishPerformance::_internal_set_type(uint32_t value) {
  
  type_ = value;
}
inline void ModuleScene_Req_FinishPerformance::set_type(uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_FinishPerformance.type)
}

// uint32 id = 2;
inline void ModuleScene_Req_FinishPerformance::clear_id() {
  id_ = 0u;
}
inline uint32_t ModuleScene_Req_FinishPerformance::_internal_id() const {
  return id_;
}
inline uint32_t ModuleScene_Req_FinishPerformance::id() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_FinishPerformance.id)
  return _internal_id();
}
inline void ModuleScene_Req_FinishPerformance::_internal_set_id(uint32_t value) {
  
  id_ = value;
}
inline void ModuleScene_Req_FinishPerformance::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_FinishPerformance.id)
}

// -------------------------------------------------------------------

// ModuleScene_Req_PrivateTrigger

// uint64 instanceId = 1;
inline void ModuleScene_Req_PrivateTrigger::clear_instanceid() {
  instanceid_ = uint64_t{0u};
}
inline uint64_t ModuleScene_Req_PrivateTrigger::_internal_instanceid() const {
  return instanceid_;
}
inline uint64_t ModuleScene_Req_PrivateTrigger::instanceid() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Req_PrivateTrigger.instanceId)
  return _internal_instanceid();
}
inline void ModuleScene_Req_PrivateTrigger::_internal_set_instanceid(uint64_t value) {
  
  instanceid_ = value;
}
inline void ModuleScene_Req_PrivateTrigger::set_instanceid(uint64_t value) {
  _internal_set_instanceid(value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Req_PrivateTrigger.instanceId)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_MapMarkAdd

// repeated .common.MapMark npcs = 1;
inline int ModuleScene_Ntf_MapMarkAdd::_internal_npcs_size() const {
  return npcs_.size();
}
inline int ModuleScene_Ntf_MapMarkAdd::npcs_size() const {
  return _internal_npcs_size();
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkAdd::mutable_npcs(int index) {
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_MapMarkAdd.npcs)
  return npcs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::MapMark >*
ModuleScene_Ntf_MapMarkAdd::mutable_npcs() {
  // @@protoc_insertion_point(field_mutable_list:client.ModuleScene_Ntf_MapMarkAdd.npcs)
  return &npcs_;
}
inline const ::common::MapMark& ModuleScene_Ntf_MapMarkAdd::_internal_npcs(int index) const {
  return npcs_.Get(index);
}
inline const ::common::MapMark& ModuleScene_Ntf_MapMarkAdd::npcs(int index) const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MapMarkAdd.npcs)
  return _internal_npcs(index);
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkAdd::_internal_add_npcs() {
  return npcs_.Add();
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkAdd::add_npcs() {
  ::common::MapMark* _add = _internal_add_npcs();
  // @@protoc_insertion_point(field_add:client.ModuleScene_Ntf_MapMarkAdd.npcs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::common::MapMark >&
ModuleScene_Ntf_MapMarkAdd::npcs() const {
  // @@protoc_insertion_point(field_list:client.ModuleScene_Ntf_MapMarkAdd.npcs)
  return npcs_;
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_MapMarkUpdate

// .common.MapMark npc = 1;
inline bool ModuleScene_Ntf_MapMarkUpdate::_internal_has_npc() const {
  return this != internal_default_instance() && npc_ != nullptr;
}
inline bool ModuleScene_Ntf_MapMarkUpdate::has_npc() const {
  return _internal_has_npc();
}
inline const ::common::MapMark& ModuleScene_Ntf_MapMarkUpdate::_internal_npc() const {
  const ::common::MapMark* p = npc_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::MapMark&>(
      ::common::_MapMark_default_instance_);
}
inline const ::common::MapMark& ModuleScene_Ntf_MapMarkUpdate::npc() const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MapMarkUpdate.npc)
  return _internal_npc();
}
inline void ModuleScene_Ntf_MapMarkUpdate::unsafe_arena_set_allocated_npc(
    ::common::MapMark* npc) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(npc_);
  }
  npc_ = npc;
  if (npc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleScene_Ntf_MapMarkUpdate.npc)
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkUpdate::release_npc() {
  
  ::common::MapMark* temp = npc_;
  npc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkUpdate::unsafe_arena_release_npc() {
  // @@protoc_insertion_point(field_release:client.ModuleScene_Ntf_MapMarkUpdate.npc)
  
  ::common::MapMark* temp = npc_;
  npc_ = nullptr;
  return temp;
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkUpdate::_internal_mutable_npc() {
  
  if (npc_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::MapMark>(GetArenaForAllocation());
    npc_ = p;
  }
  return npc_;
}
inline ::common::MapMark* ModuleScene_Ntf_MapMarkUpdate::mutable_npc() {
  ::common::MapMark* _msg = _internal_mutable_npc();
  // @@protoc_insertion_point(field_mutable:client.ModuleScene_Ntf_MapMarkUpdate.npc)
  return _msg;
}
inline void ModuleScene_Ntf_MapMarkUpdate::set_allocated_npc(::common::MapMark* npc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(npc_);
  }
  if (npc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(npc));
    if (message_arena != submessage_arena) {
      npc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, npc, submessage_arena);
    }
    
  } else {
    
  }
  npc_ = npc;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleScene_Ntf_MapMarkUpdate.npc)
}

// -------------------------------------------------------------------

// ModuleScene_Ntf_MapMarkRemove

// repeated uint64 uids = 1;
inline int ModuleScene_Ntf_MapMarkRemove::_internal_uids_size() const {
  return uids_.size();
}
inline int ModuleScene_Ntf_MapMarkRemove::uids_size() const {
  return _internal_uids_size();
}
inline void ModuleScene_Ntf_MapMarkRemove::clear_uids() {
  uids_.Clear();
}
inline uint64_t ModuleScene_Ntf_MapMarkRemove::_internal_uids(int index) const {
  return uids_.Get(index);
}
inline uint64_t ModuleScene_Ntf_MapMarkRemove::uids(int index) const {
  // @@protoc_insertion_point(field_get:client.ModuleScene_Ntf_MapMarkRemove.uids)
  return _internal_uids(index);
}
inline void ModuleScene_Ntf_MapMarkRemove::set_uids(int index, uint64_t value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:client.ModuleScene_Ntf_MapMarkRemove.uids)
}
inline void ModuleScene_Ntf_MapMarkRemove::_internal_add_uids(uint64_t value) {
  uids_.Add(value);
}
inline void ModuleScene_Ntf_MapMarkRemove::add_uids(uint64_t value) {
  _internal_add_uids(value);
  // @@protoc_insertion_point(field_add:client.ModuleScene_Ntf_MapMarkRemove.uids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
ModuleScene_Ntf_MapMarkRemove::_internal_uids() const {
  return uids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
ModuleScene_Ntf_MapMarkRemove::uids() const {
  // @@protoc_insertion_point(field_list:client.ModuleScene_Ntf_MapMarkRemove.uids)
  return _internal_uids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
ModuleScene_Ntf_MapMarkRemove::_internal_mutable_uids() {
  return &uids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
ModuleScene_Ntf_MapMarkRemove::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:client.ModuleScene_Ntf_MapMarkRemove.uids)
  return _internal_mutable_uids();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::client::enModuleScene> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::enModuleScene>() {
  return ::client::enModuleScene_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_scene_2eproto
