// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friend.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_friend_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_friend_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "friendcommon.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_friend_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_friend_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_friend_2eproto;
namespace client {
class ModuleFriend_AgreeAll_Req;
struct ModuleFriend_AgreeAll_ReqDefaultTypeInternal;
extern ModuleFriend_AgreeAll_ReqDefaultTypeInternal _ModuleFriend_AgreeAll_Req_default_instance_;
class ModuleFriend_Agree_Req;
struct ModuleFriend_Agree_ReqDefaultTypeInternal;
extern ModuleFriend_Agree_ReqDefaultTypeInternal _ModuleFriend_Agree_Req_default_instance_;
class ModuleFriend_Block_Req;
struct ModuleFriend_Block_ReqDefaultTypeInternal;
extern ModuleFriend_Block_ReqDefaultTypeInternal _ModuleFriend_Block_Req_default_instance_;
class ModuleFriend_FriendOnline_Ntf;
struct ModuleFriend_FriendOnline_NtfDefaultTypeInternal;
extern ModuleFriend_FriendOnline_NtfDefaultTypeInternal _ModuleFriend_FriendOnline_Ntf_default_instance_;
class ModuleFriend_GiftMsg_Ntf;
struct ModuleFriend_GiftMsg_NtfDefaultTypeInternal;
extern ModuleFriend_GiftMsg_NtfDefaultTypeInternal _ModuleFriend_GiftMsg_Ntf_default_instance_;
class ModuleFriend_ReceiveGift_Ntf;
struct ModuleFriend_ReceiveGift_NtfDefaultTypeInternal;
extern ModuleFriend_ReceiveGift_NtfDefaultTypeInternal _ModuleFriend_ReceiveGift_Ntf_default_instance_;
class ModuleFriend_ReceiveGift_Req;
struct ModuleFriend_ReceiveGift_ReqDefaultTypeInternal;
extern ModuleFriend_ReceiveGift_ReqDefaultTypeInternal _ModuleFriend_ReceiveGift_Req_default_instance_;
class ModuleFriend_Recommend_Ntf;
struct ModuleFriend_Recommend_NtfDefaultTypeInternal;
extern ModuleFriend_Recommend_NtfDefaultTypeInternal _ModuleFriend_Recommend_Ntf_default_instance_;
class ModuleFriend_Recommend_Req;
struct ModuleFriend_Recommend_ReqDefaultTypeInternal;
extern ModuleFriend_Recommend_ReqDefaultTypeInternal _ModuleFriend_Recommend_Req_default_instance_;
class ModuleFriend_RefuseAll_Req;
struct ModuleFriend_RefuseAll_ReqDefaultTypeInternal;
extern ModuleFriend_RefuseAll_ReqDefaultTypeInternal _ModuleFriend_RefuseAll_Req_default_instance_;
class ModuleFriend_Refuse_Req;
struct ModuleFriend_Refuse_ReqDefaultTypeInternal;
extern ModuleFriend_Refuse_ReqDefaultTypeInternal _ModuleFriend_Refuse_Req_default_instance_;
class ModuleFriend_Remove_Req;
struct ModuleFriend_Remove_ReqDefaultTypeInternal;
extern ModuleFriend_Remove_ReqDefaultTypeInternal _ModuleFriend_Remove_Req_default_instance_;
class ModuleFriend_Request_Req;
struct ModuleFriend_Request_ReqDefaultTypeInternal;
extern ModuleFriend_Request_ReqDefaultTypeInternal _ModuleFriend_Request_Req_default_instance_;
class ModuleFriend_Search_Ntf;
struct ModuleFriend_Search_NtfDefaultTypeInternal;
extern ModuleFriend_Search_NtfDefaultTypeInternal _ModuleFriend_Search_Ntf_default_instance_;
class ModuleFriend_Search_Req;
struct ModuleFriend_Search_ReqDefaultTypeInternal;
extern ModuleFriend_Search_ReqDefaultTypeInternal _ModuleFriend_Search_Req_default_instance_;
class ModuleFriend_SendGift_Req;
struct ModuleFriend_SendGift_ReqDefaultTypeInternal;
extern ModuleFriend_SendGift_ReqDefaultTypeInternal _ModuleFriend_SendGift_Req_default_instance_;
class ModuleFriend_SetFilter_Req;
struct ModuleFriend_SetFilter_ReqDefaultTypeInternal;
extern ModuleFriend_SetFilter_ReqDefaultTypeInternal _ModuleFriend_SetFilter_Req_default_instance_;
class ModuleFriend_SetMyLabel_Req;
struct ModuleFriend_SetMyLabel_ReqDefaultTypeInternal;
extern ModuleFriend_SetMyLabel_ReqDefaultTypeInternal _ModuleFriend_SetMyLabel_Req_default_instance_;
class ModuleFriend_TeamId_Ntf;
struct ModuleFriend_TeamId_NtfDefaultTypeInternal;
extern ModuleFriend_TeamId_NtfDefaultTypeInternal _ModuleFriend_TeamId_Ntf_default_instance_;
class ModuleFriend_Update_Ntf;
struct ModuleFriend_Update_NtfDefaultTypeInternal;
extern ModuleFriend_Update_NtfDefaultTypeInternal _ModuleFriend_Update_Ntf_default_instance_;
}  // namespace client
PROTOBUF_NAMESPACE_OPEN
template<> ::client::ModuleFriend_AgreeAll_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_AgreeAll_Req>(Arena*);
template<> ::client::ModuleFriend_Agree_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Agree_Req>(Arena*);
template<> ::client::ModuleFriend_Block_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Block_Req>(Arena*);
template<> ::client::ModuleFriend_FriendOnline_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_FriendOnline_Ntf>(Arena*);
template<> ::client::ModuleFriend_GiftMsg_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_GiftMsg_Ntf>(Arena*);
template<> ::client::ModuleFriend_ReceiveGift_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_ReceiveGift_Ntf>(Arena*);
template<> ::client::ModuleFriend_ReceiveGift_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_ReceiveGift_Req>(Arena*);
template<> ::client::ModuleFriend_Recommend_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_Recommend_Ntf>(Arena*);
template<> ::client::ModuleFriend_Recommend_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Recommend_Req>(Arena*);
template<> ::client::ModuleFriend_RefuseAll_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_RefuseAll_Req>(Arena*);
template<> ::client::ModuleFriend_Refuse_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Refuse_Req>(Arena*);
template<> ::client::ModuleFriend_Remove_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Remove_Req>(Arena*);
template<> ::client::ModuleFriend_Request_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Request_Req>(Arena*);
template<> ::client::ModuleFriend_Search_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_Search_Ntf>(Arena*);
template<> ::client::ModuleFriend_Search_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_Search_Req>(Arena*);
template<> ::client::ModuleFriend_SendGift_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_SendGift_Req>(Arena*);
template<> ::client::ModuleFriend_SetFilter_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_SetFilter_Req>(Arena*);
template<> ::client::ModuleFriend_SetMyLabel_Req* Arena::CreateMaybeMessage<::client::ModuleFriend_SetMyLabel_Req>(Arena*);
template<> ::client::ModuleFriend_TeamId_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_TeamId_Ntf>(Arena*);
template<> ::client::ModuleFriend_Update_Ntf* Arena::CreateMaybeMessage<::client::ModuleFriend_Update_Ntf>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace client {

enum enModuleFriend : int {
  enModuleFriend_None = 0,
  enModuleFriend_Update_Ntf = 1,
  enModuleFriend_Request_Req = 2,
  enModuleFriend_Agree_Req = 3,
  enModuleFriend_Refuse_Req = 4,
  enModuleFriend_AgreeAll_Req = 5,
  enModuleFriend_RefuseAll_Req = 6,
  enModuleFriend_Remove_Req = 7,
  enModuleFriend_Block_Req = 8,
  enModuleFriend_Search_Req = 9,
  enModuleFriend_Search_Ntf = 10,
  enModuleFriend_SetFilter_Req = 11,
  enModuleFriend_Recommend_Req = 12,
  enModuleFriend_Recommend_Ntf = 13,
  enModuleFriend_SetMyLabel_Req = 14,
  enModuleFriend_SendGift_Req = 15,
  enModuleFriend_GiftMsg_Ntf = 16,
  enModuleFriend_ReceiveGift_Req = 17,
  enModuleFriend_ReceiveGift_Ntf = 18,
  enModuleFriend_TeamId_Ntf = 19,
  enModuleFriend_FriendOnline_Ntf = 20,
  enModuleFriend_RealMax = 21,
  enModuleFriend_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  enModuleFriend_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool enModuleFriend_IsValid(int value);
constexpr enModuleFriend enModuleFriend_MIN = enModuleFriend_None;
constexpr enModuleFriend enModuleFriend_MAX = enModuleFriend_RealMax;
constexpr int enModuleFriend_ARRAYSIZE = enModuleFriend_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enModuleFriend_descriptor();
template<typename T>
inline const std::string& enModuleFriend_Name(T enum_t_value) {
  static_assert(::std::is_same<T, enModuleFriend>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function enModuleFriend_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    enModuleFriend_descriptor(), enum_t_value);
}
inline bool enModuleFriend_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, enModuleFriend* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<enModuleFriend>(
    enModuleFriend_descriptor(), name, value);
}
// ===================================================================

class ModuleFriend_Update_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Update_Ntf) */ {
 public:
  inline ModuleFriend_Update_Ntf() : ModuleFriend_Update_Ntf(nullptr) {}
  ~ModuleFriend_Update_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Update_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Update_Ntf(const ModuleFriend_Update_Ntf& from);
  ModuleFriend_Update_Ntf(ModuleFriend_Update_Ntf&& from) noexcept
    : ModuleFriend_Update_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Update_Ntf& operator=(const ModuleFriend_Update_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Update_Ntf& operator=(ModuleFriend_Update_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Update_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Update_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Update_Ntf*>(
               &_ModuleFriend_Update_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModuleFriend_Update_Ntf& a, ModuleFriend_Update_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Update_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Update_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Update_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Update_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Update_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Update_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Update_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Update_Ntf";
  }
  protected:
  explicit ModuleFriend_Update_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOFieldListFieldNumber = 1,
  };
  // .common.FriendFieldList oFieldList = 1;
  bool has_ofieldlist() const;
  private:
  bool _internal_has_ofieldlist() const;
  public:
  void clear_ofieldlist();
  const ::common::FriendFieldList& ofieldlist() const;
  PROTOBUF_NODISCARD ::common::FriendFieldList* release_ofieldlist();
  ::common::FriendFieldList* mutable_ofieldlist();
  void set_allocated_ofieldlist(::common::FriendFieldList* ofieldlist);
  private:
  const ::common::FriendFieldList& _internal_ofieldlist() const;
  ::common::FriendFieldList* _internal_mutable_ofieldlist();
  public:
  void unsafe_arena_set_allocated_ofieldlist(
      ::common::FriendFieldList* ofieldlist);
  ::common::FriendFieldList* unsafe_arena_release_ofieldlist();

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Update_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::FriendFieldList* ofieldlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Request_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Request_Req) */ {
 public:
  inline ModuleFriend_Request_Req() : ModuleFriend_Request_Req(nullptr) {}
  ~ModuleFriend_Request_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Request_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Request_Req(const ModuleFriend_Request_Req& from);
  ModuleFriend_Request_Req(ModuleFriend_Request_Req&& from) noexcept
    : ModuleFriend_Request_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Request_Req& operator=(const ModuleFriend_Request_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Request_Req& operator=(ModuleFriend_Request_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Request_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Request_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Request_Req*>(
               &_ModuleFriend_Request_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModuleFriend_Request_Req& a, ModuleFriend_Request_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Request_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Request_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Request_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Request_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Request_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Request_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Request_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Request_Req";
  }
  protected:
  explicit ModuleFriend_Request_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleIdFieldNumber = 1,
  };
  // uint64 llRoleId = 1;
  void clear_llroleid();
  uint64_t llroleid() const;
  void set_llroleid(uint64_t value);
  private:
  uint64_t _internal_llroleid() const;
  void _internal_set_llroleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Request_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Agree_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Agree_Req) */ {
 public:
  inline ModuleFriend_Agree_Req() : ModuleFriend_Agree_Req(nullptr) {}
  ~ModuleFriend_Agree_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Agree_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Agree_Req(const ModuleFriend_Agree_Req& from);
  ModuleFriend_Agree_Req(ModuleFriend_Agree_Req&& from) noexcept
    : ModuleFriend_Agree_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Agree_Req& operator=(const ModuleFriend_Agree_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Agree_Req& operator=(ModuleFriend_Agree_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Agree_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Agree_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Agree_Req*>(
               &_ModuleFriend_Agree_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ModuleFriend_Agree_Req& a, ModuleFriend_Agree_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Agree_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Agree_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Agree_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Agree_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Agree_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Agree_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Agree_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Agree_Req";
  }
  protected:
  explicit ModuleFriend_Agree_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleIdFieldNumber = 1,
  };
  // uint64 llRoleId = 1;
  void clear_llroleid();
  uint64_t llroleid() const;
  void set_llroleid(uint64_t value);
  private:
  uint64_t _internal_llroleid() const;
  void _internal_set_llroleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Agree_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Refuse_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Refuse_Req) */ {
 public:
  inline ModuleFriend_Refuse_Req() : ModuleFriend_Refuse_Req(nullptr) {}
  ~ModuleFriend_Refuse_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Refuse_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Refuse_Req(const ModuleFriend_Refuse_Req& from);
  ModuleFriend_Refuse_Req(ModuleFriend_Refuse_Req&& from) noexcept
    : ModuleFriend_Refuse_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Refuse_Req& operator=(const ModuleFriend_Refuse_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Refuse_Req& operator=(ModuleFriend_Refuse_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Refuse_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Refuse_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Refuse_Req*>(
               &_ModuleFriend_Refuse_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ModuleFriend_Refuse_Req& a, ModuleFriend_Refuse_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Refuse_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Refuse_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Refuse_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Refuse_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Refuse_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Refuse_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Refuse_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Refuse_Req";
  }
  protected:
  explicit ModuleFriend_Refuse_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleIdFieldNumber = 1,
  };
  // uint64 llRoleId = 1;
  void clear_llroleid();
  uint64_t llroleid() const;
  void set_llroleid(uint64_t value);
  private:
  uint64_t _internal_llroleid() const;
  void _internal_set_llroleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Refuse_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_AgreeAll_Req final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleFriend_AgreeAll_Req) */ {
 public:
  inline ModuleFriend_AgreeAll_Req() : ModuleFriend_AgreeAll_Req(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleFriend_AgreeAll_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_AgreeAll_Req(const ModuleFriend_AgreeAll_Req& from);
  ModuleFriend_AgreeAll_Req(ModuleFriend_AgreeAll_Req&& from) noexcept
    : ModuleFriend_AgreeAll_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_AgreeAll_Req& operator=(const ModuleFriend_AgreeAll_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_AgreeAll_Req& operator=(ModuleFriend_AgreeAll_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_AgreeAll_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_AgreeAll_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_AgreeAll_Req*>(
               &_ModuleFriend_AgreeAll_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ModuleFriend_AgreeAll_Req& a, ModuleFriend_AgreeAll_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_AgreeAll_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_AgreeAll_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_AgreeAll_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_AgreeAll_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleFriend_AgreeAll_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleFriend_AgreeAll_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_AgreeAll_Req";
  }
  protected:
  explicit ModuleFriend_AgreeAll_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_AgreeAll_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_RefuseAll_Req final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleFriend_RefuseAll_Req) */ {
 public:
  inline ModuleFriend_RefuseAll_Req() : ModuleFriend_RefuseAll_Req(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleFriend_RefuseAll_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_RefuseAll_Req(const ModuleFriend_RefuseAll_Req& from);
  ModuleFriend_RefuseAll_Req(ModuleFriend_RefuseAll_Req&& from) noexcept
    : ModuleFriend_RefuseAll_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_RefuseAll_Req& operator=(const ModuleFriend_RefuseAll_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_RefuseAll_Req& operator=(ModuleFriend_RefuseAll_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_RefuseAll_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_RefuseAll_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_RefuseAll_Req*>(
               &_ModuleFriend_RefuseAll_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ModuleFriend_RefuseAll_Req& a, ModuleFriend_RefuseAll_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_RefuseAll_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_RefuseAll_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_RefuseAll_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_RefuseAll_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleFriend_RefuseAll_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleFriend_RefuseAll_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_RefuseAll_Req";
  }
  protected:
  explicit ModuleFriend_RefuseAll_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_RefuseAll_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Remove_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Remove_Req) */ {
 public:
  inline ModuleFriend_Remove_Req() : ModuleFriend_Remove_Req(nullptr) {}
  ~ModuleFriend_Remove_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Remove_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Remove_Req(const ModuleFriend_Remove_Req& from);
  ModuleFriend_Remove_Req(ModuleFriend_Remove_Req&& from) noexcept
    : ModuleFriend_Remove_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Remove_Req& operator=(const ModuleFriend_Remove_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Remove_Req& operator=(ModuleFriend_Remove_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Remove_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Remove_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Remove_Req*>(
               &_ModuleFriend_Remove_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ModuleFriend_Remove_Req& a, ModuleFriend_Remove_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Remove_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Remove_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Remove_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Remove_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Remove_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Remove_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Remove_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Remove_Req";
  }
  protected:
  explicit ModuleFriend_Remove_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleIdFieldNumber = 1,
  };
  // uint64 llRoleId = 1;
  void clear_llroleid();
  uint64_t llroleid() const;
  void set_llroleid(uint64_t value);
  private:
  uint64_t _internal_llroleid() const;
  void _internal_set_llroleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Remove_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Block_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Block_Req) */ {
 public:
  inline ModuleFriend_Block_Req() : ModuleFriend_Block_Req(nullptr) {}
  ~ModuleFriend_Block_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Block_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Block_Req(const ModuleFriend_Block_Req& from);
  ModuleFriend_Block_Req(ModuleFriend_Block_Req&& from) noexcept
    : ModuleFriend_Block_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Block_Req& operator=(const ModuleFriend_Block_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Block_Req& operator=(ModuleFriend_Block_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Block_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Block_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Block_Req*>(
               &_ModuleFriend_Block_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ModuleFriend_Block_Req& a, ModuleFriend_Block_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Block_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Block_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Block_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Block_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Block_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Block_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Block_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Block_Req";
  }
  protected:
  explicit ModuleFriend_Block_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleIdFieldNumber = 1,
  };
  // uint64 llRoleId = 1;
  void clear_llroleid();
  uint64_t llroleid() const;
  void set_llroleid(uint64_t value);
  private:
  uint64_t _internal_llroleid() const;
  void _internal_set_llroleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Block_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Search_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Search_Req) */ {
 public:
  inline ModuleFriend_Search_Req() : ModuleFriend_Search_Req(nullptr) {}
  ~ModuleFriend_Search_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Search_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Search_Req(const ModuleFriend_Search_Req& from);
  ModuleFriend_Search_Req(ModuleFriend_Search_Req&& from) noexcept
    : ModuleFriend_Search_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Search_Req& operator=(const ModuleFriend_Search_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Search_Req& operator=(ModuleFriend_Search_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Search_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Search_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Search_Req*>(
               &_ModuleFriend_Search_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ModuleFriend_Search_Req& a, ModuleFriend_Search_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Search_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Search_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Search_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Search_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Search_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Search_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Search_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Search_Req";
  }
  protected:
  explicit ModuleFriend_Search_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrNickFieldNumber = 1,
  };
  // bytes strNick = 1;
  void clear_strnick();
  const std::string& strnick() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strnick(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strnick();
  PROTOBUF_NODISCARD std::string* release_strnick();
  void set_allocated_strnick(std::string* strnick);
  private:
  const std::string& _internal_strnick() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strnick(const std::string& value);
  std::string* _internal_mutable_strnick();
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Search_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strnick_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Search_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Search_Ntf) */ {
 public:
  inline ModuleFriend_Search_Ntf() : ModuleFriend_Search_Ntf(nullptr) {}
  ~ModuleFriend_Search_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Search_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Search_Ntf(const ModuleFriend_Search_Ntf& from);
  ModuleFriend_Search_Ntf(ModuleFriend_Search_Ntf&& from) noexcept
    : ModuleFriend_Search_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Search_Ntf& operator=(const ModuleFriend_Search_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Search_Ntf& operator=(ModuleFriend_Search_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Search_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Search_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Search_Ntf*>(
               &_ModuleFriend_Search_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ModuleFriend_Search_Ntf& a, ModuleFriend_Search_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Search_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Search_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Search_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Search_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Search_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Search_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Search_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Search_Ntf";
  }
  protected:
  explicit ModuleFriend_Search_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleIdFieldNumber = 1,
  };
  // uint64 llRoleId = 1;
  void clear_llroleid();
  uint64_t llroleid() const;
  void set_llroleid(uint64_t value);
  private:
  uint64_t _internal_llroleid() const;
  void _internal_set_llroleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Search_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_SetFilter_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_SetFilter_Req) */ {
 public:
  inline ModuleFriend_SetFilter_Req() : ModuleFriend_SetFilter_Req(nullptr) {}
  ~ModuleFriend_SetFilter_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_SetFilter_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_SetFilter_Req(const ModuleFriend_SetFilter_Req& from);
  ModuleFriend_SetFilter_Req(ModuleFriend_SetFilter_Req&& from) noexcept
    : ModuleFriend_SetFilter_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_SetFilter_Req& operator=(const ModuleFriend_SetFilter_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_SetFilter_Req& operator=(ModuleFriend_SetFilter_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_SetFilter_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_SetFilter_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_SetFilter_Req*>(
               &_ModuleFriend_SetFilter_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ModuleFriend_SetFilter_Req& a, ModuleFriend_SetFilter_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_SetFilter_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_SetFilter_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_SetFilter_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_SetFilter_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_SetFilter_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_SetFilter_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_SetFilter_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_SetFilter_Req";
  }
  protected:
  explicit ModuleFriend_SetFilter_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBCityFieldNumber = 1,
    kUiSexFieldNumber = 2,
    kUiLabelFieldNumber = 3,
  };
  // bool bCity = 1;
  void clear_bcity();
  bool bcity() const;
  void set_bcity(bool value);
  private:
  bool _internal_bcity() const;
  void _internal_set_bcity(bool value);
  public:

  // uint32 uiSex = 2;
  void clear_uisex();
  uint32_t uisex() const;
  void set_uisex(uint32_t value);
  private:
  uint32_t _internal_uisex() const;
  void _internal_set_uisex(uint32_t value);
  public:

  // uint32 uiLabel = 3;
  void clear_uilabel();
  uint32_t uilabel() const;
  void set_uilabel(uint32_t value);
  private:
  uint32_t _internal_uilabel() const;
  void _internal_set_uilabel(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_SetFilter_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool bcity_;
  uint32_t uisex_;
  uint32_t uilabel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Recommend_Req final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Recommend_Req) */ {
 public:
  inline ModuleFriend_Recommend_Req() : ModuleFriend_Recommend_Req(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Recommend_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Recommend_Req(const ModuleFriend_Recommend_Req& from);
  ModuleFriend_Recommend_Req(ModuleFriend_Recommend_Req&& from) noexcept
    : ModuleFriend_Recommend_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Recommend_Req& operator=(const ModuleFriend_Recommend_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Recommend_Req& operator=(ModuleFriend_Recommend_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Recommend_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Recommend_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Recommend_Req*>(
               &_ModuleFriend_Recommend_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ModuleFriend_Recommend_Req& a, ModuleFriend_Recommend_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Recommend_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Recommend_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Recommend_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Recommend_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleFriend_Recommend_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleFriend_Recommend_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Recommend_Req";
  }
  protected:
  explicit ModuleFriend_Recommend_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Recommend_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_Recommend_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_Recommend_Ntf) */ {
 public:
  inline ModuleFriend_Recommend_Ntf() : ModuleFriend_Recommend_Ntf(nullptr) {}
  ~ModuleFriend_Recommend_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_Recommend_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_Recommend_Ntf(const ModuleFriend_Recommend_Ntf& from);
  ModuleFriend_Recommend_Ntf(ModuleFriend_Recommend_Ntf&& from) noexcept
    : ModuleFriend_Recommend_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_Recommend_Ntf& operator=(const ModuleFriend_Recommend_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_Recommend_Ntf& operator=(ModuleFriend_Recommend_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_Recommend_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_Recommend_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_Recommend_Ntf*>(
               &_ModuleFriend_Recommend_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ModuleFriend_Recommend_Ntf& a, ModuleFriend_Recommend_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_Recommend_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_Recommend_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_Recommend_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_Recommend_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_Recommend_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_Recommend_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_Recommend_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_Recommend_Ntf";
  }
  protected:
  explicit ModuleFriend_Recommend_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kORoleListFieldNumber = 1,
  };
  // .common.RecommendList oRoleList = 1;
  bool has_orolelist() const;
  private:
  bool _internal_has_orolelist() const;
  public:
  void clear_orolelist();
  const ::common::RecommendList& orolelist() const;
  PROTOBUF_NODISCARD ::common::RecommendList* release_orolelist();
  ::common::RecommendList* mutable_orolelist();
  void set_allocated_orolelist(::common::RecommendList* orolelist);
  private:
  const ::common::RecommendList& _internal_orolelist() const;
  ::common::RecommendList* _internal_mutable_orolelist();
  public:
  void unsafe_arena_set_allocated_orolelist(
      ::common::RecommendList* orolelist);
  ::common::RecommendList* unsafe_arena_release_orolelist();

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_Recommend_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::RecommendList* orolelist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_SetMyLabel_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_SetMyLabel_Req) */ {
 public:
  inline ModuleFriend_SetMyLabel_Req() : ModuleFriend_SetMyLabel_Req(nullptr) {}
  ~ModuleFriend_SetMyLabel_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_SetMyLabel_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_SetMyLabel_Req(const ModuleFriend_SetMyLabel_Req& from);
  ModuleFriend_SetMyLabel_Req(ModuleFriend_SetMyLabel_Req&& from) noexcept
    : ModuleFriend_SetMyLabel_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_SetMyLabel_Req& operator=(const ModuleFriend_SetMyLabel_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_SetMyLabel_Req& operator=(ModuleFriend_SetMyLabel_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_SetMyLabel_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_SetMyLabel_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_SetMyLabel_Req*>(
               &_ModuleFriend_SetMyLabel_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ModuleFriend_SetMyLabel_Req& a, ModuleFriend_SetMyLabel_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_SetMyLabel_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_SetMyLabel_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_SetMyLabel_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_SetMyLabel_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_SetMyLabel_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_SetMyLabel_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_SetMyLabel_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_SetMyLabel_Req";
  }
  protected:
  explicit ModuleFriend_SetMyLabel_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUiCityFieldNumber = 1,
    kBAvailableFieldNumber = 2,
    kUiLabelFieldNumber = 3,
  };
  // uint32 uiCity = 1;
  void clear_uicity();
  uint32_t uicity() const;
  void set_uicity(uint32_t value);
  private:
  uint32_t _internal_uicity() const;
  void _internal_set_uicity(uint32_t value);
  public:

  // bool bAvailable = 2;
  void clear_bavailable();
  bool bavailable() const;
  void set_bavailable(bool value);
  private:
  bool _internal_bavailable() const;
  void _internal_set_bavailable(bool value);
  public:

  // uint32 uiLabel = 3;
  void clear_uilabel();
  uint32_t uilabel() const;
  void set_uilabel(uint32_t value);
  private:
  uint32_t _internal_uilabel() const;
  void _internal_set_uilabel(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_SetMyLabel_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t uicity_;
  bool bavailable_;
  uint32_t uilabel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_SendGift_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_SendGift_Req) */ {
 public:
  inline ModuleFriend_SendGift_Req() : ModuleFriend_SendGift_Req(nullptr) {}
  ~ModuleFriend_SendGift_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_SendGift_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_SendGift_Req(const ModuleFriend_SendGift_Req& from);
  ModuleFriend_SendGift_Req(ModuleFriend_SendGift_Req&& from) noexcept
    : ModuleFriend_SendGift_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_SendGift_Req& operator=(const ModuleFriend_SendGift_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_SendGift_Req& operator=(ModuleFriend_SendGift_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_SendGift_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_SendGift_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_SendGift_Req*>(
               &_ModuleFriend_SendGift_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ModuleFriend_SendGift_Req& a, ModuleFriend_SendGift_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_SendGift_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_SendGift_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_SendGift_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_SendGift_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_SendGift_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_SendGift_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_SendGift_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_SendGift_Req";
  }
  protected:
  explicit ModuleFriend_SendGift_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRecverFieldNumber = 1,
    kLlItemIdFieldNumber = 2,
    kUiCountFieldNumber = 3,
  };
  // uint64 llRecver = 1;
  void clear_llrecver();
  uint64_t llrecver() const;
  void set_llrecver(uint64_t value);
  private:
  uint64_t _internal_llrecver() const;
  void _internal_set_llrecver(uint64_t value);
  public:

  // uint64 llItemId = 2;
  void clear_llitemid();
  uint64_t llitemid() const;
  void set_llitemid(uint64_t value);
  private:
  uint64_t _internal_llitemid() const;
  void _internal_set_llitemid(uint64_t value);
  public:

  // uint32 uiCount = 3;
  void clear_uicount();
  uint32_t uicount() const;
  void set_uicount(uint32_t value);
  private:
  uint32_t _internal_uicount() const;
  void _internal_set_uicount(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_SendGift_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llrecver_;
  uint64_t llitemid_;
  uint32_t uicount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_GiftMsg_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_GiftMsg_Ntf) */ {
 public:
  inline ModuleFriend_GiftMsg_Ntf() : ModuleFriend_GiftMsg_Ntf(nullptr) {}
  ~ModuleFriend_GiftMsg_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_GiftMsg_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_GiftMsg_Ntf(const ModuleFriend_GiftMsg_Ntf& from);
  ModuleFriend_GiftMsg_Ntf(ModuleFriend_GiftMsg_Ntf&& from) noexcept
    : ModuleFriend_GiftMsg_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_GiftMsg_Ntf& operator=(const ModuleFriend_GiftMsg_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_GiftMsg_Ntf& operator=(ModuleFriend_GiftMsg_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_GiftMsg_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_GiftMsg_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_GiftMsg_Ntf*>(
               &_ModuleFriend_GiftMsg_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ModuleFriend_GiftMsg_Ntf& a, ModuleFriend_GiftMsg_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_GiftMsg_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_GiftMsg_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_GiftMsg_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_GiftMsg_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_GiftMsg_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_GiftMsg_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_GiftMsg_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_GiftMsg_Ntf";
  }
  protected:
  explicit ModuleFriend_GiftMsg_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlUidFieldNumber = 1,
    kLlSenderFieldNumber = 2,
    kLlRecverFieldNumber = 3,
    kUiItemTidFieldNumber = 4,
    kUiCountFieldNumber = 5,
    kUiTimeStampFieldNumber = 6,
  };
  // uint64 llUid = 1;
  void clear_lluid();
  uint64_t lluid() const;
  void set_lluid(uint64_t value);
  private:
  uint64_t _internal_lluid() const;
  void _internal_set_lluid(uint64_t value);
  public:

  // uint64 llSender = 2;
  void clear_llsender();
  uint64_t llsender() const;
  void set_llsender(uint64_t value);
  private:
  uint64_t _internal_llsender() const;
  void _internal_set_llsender(uint64_t value);
  public:

  // uint64 llRecver = 3;
  void clear_llrecver();
  uint64_t llrecver() const;
  void set_llrecver(uint64_t value);
  private:
  uint64_t _internal_llrecver() const;
  void _internal_set_llrecver(uint64_t value);
  public:

  // uint32 uiItemTid = 4;
  void clear_uiitemtid();
  uint32_t uiitemtid() const;
  void set_uiitemtid(uint32_t value);
  private:
  uint32_t _internal_uiitemtid() const;
  void _internal_set_uiitemtid(uint32_t value);
  public:

  // uint32 uiCount = 5;
  void clear_uicount();
  uint32_t uicount() const;
  void set_uicount(uint32_t value);
  private:
  uint32_t _internal_uicount() const;
  void _internal_set_uicount(uint32_t value);
  public:

  // uint32 uiTimeStamp = 6;
  void clear_uitimestamp();
  uint32_t uitimestamp() const;
  void set_uitimestamp(uint32_t value);
  private:
  uint32_t _internal_uitimestamp() const;
  void _internal_set_uitimestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_GiftMsg_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t lluid_;
  uint64_t llsender_;
  uint64_t llrecver_;
  uint32_t uiitemtid_;
  uint32_t uicount_;
  uint32_t uitimestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_ReceiveGift_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_ReceiveGift_Req) */ {
 public:
  inline ModuleFriend_ReceiveGift_Req() : ModuleFriend_ReceiveGift_Req(nullptr) {}
  ~ModuleFriend_ReceiveGift_Req() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_ReceiveGift_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_ReceiveGift_Req(const ModuleFriend_ReceiveGift_Req& from);
  ModuleFriend_ReceiveGift_Req(ModuleFriend_ReceiveGift_Req&& from) noexcept
    : ModuleFriend_ReceiveGift_Req() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_ReceiveGift_Req& operator=(const ModuleFriend_ReceiveGift_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_ReceiveGift_Req& operator=(ModuleFriend_ReceiveGift_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_ReceiveGift_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_ReceiveGift_Req* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_ReceiveGift_Req*>(
               &_ModuleFriend_ReceiveGift_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ModuleFriend_ReceiveGift_Req& a, ModuleFriend_ReceiveGift_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_ReceiveGift_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_ReceiveGift_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_ReceiveGift_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_ReceiveGift_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_ReceiveGift_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_ReceiveGift_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_ReceiveGift_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_ReceiveGift_Req";
  }
  protected:
  explicit ModuleFriend_ReceiveGift_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlGiftUidFieldNumber = 1,
  };
  // uint64 llGiftUid = 1;
  void clear_llgiftuid();
  uint64_t llgiftuid() const;
  void set_llgiftuid(uint64_t value);
  private:
  uint64_t _internal_llgiftuid() const;
  void _internal_set_llgiftuid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_ReceiveGift_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llgiftuid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_ReceiveGift_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_ReceiveGift_Ntf) */ {
 public:
  inline ModuleFriend_ReceiveGift_Ntf() : ModuleFriend_ReceiveGift_Ntf(nullptr) {}
  ~ModuleFriend_ReceiveGift_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_ReceiveGift_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_ReceiveGift_Ntf(const ModuleFriend_ReceiveGift_Ntf& from);
  ModuleFriend_ReceiveGift_Ntf(ModuleFriend_ReceiveGift_Ntf&& from) noexcept
    : ModuleFriend_ReceiveGift_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_ReceiveGift_Ntf& operator=(const ModuleFriend_ReceiveGift_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_ReceiveGift_Ntf& operator=(ModuleFriend_ReceiveGift_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_ReceiveGift_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_ReceiveGift_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_ReceiveGift_Ntf*>(
               &_ModuleFriend_ReceiveGift_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ModuleFriend_ReceiveGift_Ntf& a, ModuleFriend_ReceiveGift_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_ReceiveGift_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_ReceiveGift_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_ReceiveGift_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_ReceiveGift_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_ReceiveGift_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_ReceiveGift_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_ReceiveGift_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_ReceiveGift_Ntf";
  }
  protected:
  explicit ModuleFriend_ReceiveGift_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlGiftUidFieldNumber = 1,
  };
  // uint64 llGiftUid = 1;
  void clear_llgiftuid();
  uint64_t llgiftuid() const;
  void set_llgiftuid(uint64_t value);
  private:
  uint64_t _internal_llgiftuid() const;
  void _internal_set_llgiftuid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_ReceiveGift_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llgiftuid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_TeamId_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_TeamId_Ntf) */ {
 public:
  inline ModuleFriend_TeamId_Ntf() : ModuleFriend_TeamId_Ntf(nullptr) {}
  ~ModuleFriend_TeamId_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_TeamId_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_TeamId_Ntf(const ModuleFriend_TeamId_Ntf& from);
  ModuleFriend_TeamId_Ntf(ModuleFriend_TeamId_Ntf&& from) noexcept
    : ModuleFriend_TeamId_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_TeamId_Ntf& operator=(const ModuleFriend_TeamId_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_TeamId_Ntf& operator=(ModuleFriend_TeamId_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_TeamId_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_TeamId_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_TeamId_Ntf*>(
               &_ModuleFriend_TeamId_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ModuleFriend_TeamId_Ntf& a, ModuleFriend_TeamId_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_TeamId_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_TeamId_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_TeamId_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_TeamId_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_TeamId_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_TeamId_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_TeamId_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_TeamId_Ntf";
  }
  protected:
  explicit ModuleFriend_TeamId_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleUidFieldNumber = 1,
    kLlTeamIdFieldNumber = 2,
  };
  // uint64 llRoleUid = 1;
  void clear_llroleuid();
  uint64_t llroleuid() const;
  void set_llroleuid(uint64_t value);
  private:
  uint64_t _internal_llroleuid() const;
  void _internal_set_llroleuid(uint64_t value);
  public:

  // uint64 llTeamId = 2;
  void clear_llteamid();
  uint64_t llteamid() const;
  void set_llteamid(uint64_t value);
  private:
  uint64_t _internal_llteamid() const;
  void _internal_set_llteamid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_TeamId_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleuid_;
  uint64_t llteamid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// -------------------------------------------------------------------

class ModuleFriend_FriendOnline_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleFriend_FriendOnline_Ntf) */ {
 public:
  inline ModuleFriend_FriendOnline_Ntf() : ModuleFriend_FriendOnline_Ntf(nullptr) {}
  ~ModuleFriend_FriendOnline_Ntf() override;
  explicit PROTOBUF_CONSTEXPR ModuleFriend_FriendOnline_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleFriend_FriendOnline_Ntf(const ModuleFriend_FriendOnline_Ntf& from);
  ModuleFriend_FriendOnline_Ntf(ModuleFriend_FriendOnline_Ntf&& from) noexcept
    : ModuleFriend_FriendOnline_Ntf() {
    *this = ::std::move(from);
  }

  inline ModuleFriend_FriendOnline_Ntf& operator=(const ModuleFriend_FriendOnline_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleFriend_FriendOnline_Ntf& operator=(ModuleFriend_FriendOnline_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleFriend_FriendOnline_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleFriend_FriendOnline_Ntf* internal_default_instance() {
    return reinterpret_cast<const ModuleFriend_FriendOnline_Ntf*>(
               &_ModuleFriend_FriendOnline_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ModuleFriend_FriendOnline_Ntf& a, ModuleFriend_FriendOnline_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleFriend_FriendOnline_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleFriend_FriendOnline_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleFriend_FriendOnline_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleFriend_FriendOnline_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleFriend_FriendOnline_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleFriend_FriendOnline_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleFriend_FriendOnline_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleFriend_FriendOnline_Ntf";
  }
  protected:
  explicit ModuleFriend_FriendOnline_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlRoleUidFieldNumber = 1,
    kBOnlineFieldNumber = 2,
  };
  // uint64 llRoleUid = 1;
  void clear_llroleuid();
  uint64_t llroleuid() const;
  void set_llroleuid(uint64_t value);
  private:
  uint64_t _internal_llroleuid() const;
  void _internal_set_llroleuid(uint64_t value);
  public:

  // bool bOnline = 2;
  void clear_bonline();
  bool bonline() const;
  void set_bonline(bool value);
  private:
  bool _internal_bonline() const;
  void _internal_set_bonline(bool value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleFriend_FriendOnline_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t llroleuid_;
  bool bonline_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_friend_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModuleFriend_Update_Ntf

// .common.FriendFieldList oFieldList = 1;
inline bool ModuleFriend_Update_Ntf::_internal_has_ofieldlist() const {
  return this != internal_default_instance() && ofieldlist_ != nullptr;
}
inline bool ModuleFriend_Update_Ntf::has_ofieldlist() const {
  return _internal_has_ofieldlist();
}
inline const ::common::FriendFieldList& ModuleFriend_Update_Ntf::_internal_ofieldlist() const {
  const ::common::FriendFieldList* p = ofieldlist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::FriendFieldList&>(
      ::common::_FriendFieldList_default_instance_);
}
inline const ::common::FriendFieldList& ModuleFriend_Update_Ntf::ofieldlist() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Update_Ntf.oFieldList)
  return _internal_ofieldlist();
}
inline void ModuleFriend_Update_Ntf::unsafe_arena_set_allocated_ofieldlist(
    ::common::FriendFieldList* ofieldlist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ofieldlist_);
  }
  ofieldlist_ = ofieldlist;
  if (ofieldlist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleFriend_Update_Ntf.oFieldList)
}
inline ::common::FriendFieldList* ModuleFriend_Update_Ntf::release_ofieldlist() {
  
  ::common::FriendFieldList* temp = ofieldlist_;
  ofieldlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::FriendFieldList* ModuleFriend_Update_Ntf::unsafe_arena_release_ofieldlist() {
  // @@protoc_insertion_point(field_release:client.ModuleFriend_Update_Ntf.oFieldList)
  
  ::common::FriendFieldList* temp = ofieldlist_;
  ofieldlist_ = nullptr;
  return temp;
}
inline ::common::FriendFieldList* ModuleFriend_Update_Ntf::_internal_mutable_ofieldlist() {
  
  if (ofieldlist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::FriendFieldList>(GetArenaForAllocation());
    ofieldlist_ = p;
  }
  return ofieldlist_;
}
inline ::common::FriendFieldList* ModuleFriend_Update_Ntf::mutable_ofieldlist() {
  ::common::FriendFieldList* _msg = _internal_mutable_ofieldlist();
  // @@protoc_insertion_point(field_mutable:client.ModuleFriend_Update_Ntf.oFieldList)
  return _msg;
}
inline void ModuleFriend_Update_Ntf::set_allocated_ofieldlist(::common::FriendFieldList* ofieldlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ofieldlist_);
  }
  if (ofieldlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ofieldlist));
    if (message_arena != submessage_arena) {
      ofieldlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ofieldlist, submessage_arena);
    }
    
  } else {
    
  }
  ofieldlist_ = ofieldlist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleFriend_Update_Ntf.oFieldList)
}

// -------------------------------------------------------------------

// ModuleFriend_Request_Req

// uint64 llRoleId = 1;
inline void ModuleFriend_Request_Req::clear_llroleid() {
  llroleid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_Request_Req::_internal_llroleid() const {
  return llroleid_;
}
inline uint64_t ModuleFriend_Request_Req::llroleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Request_Req.llRoleId)
  return _internal_llroleid();
}
inline void ModuleFriend_Request_Req::_internal_set_llroleid(uint64_t value) {
  
  llroleid_ = value;
}
inline void ModuleFriend_Request_Req::set_llroleid(uint64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Request_Req.llRoleId)
}

// -------------------------------------------------------------------

// ModuleFriend_Agree_Req

// uint64 llRoleId = 1;
inline void ModuleFriend_Agree_Req::clear_llroleid() {
  llroleid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_Agree_Req::_internal_llroleid() const {
  return llroleid_;
}
inline uint64_t ModuleFriend_Agree_Req::llroleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Agree_Req.llRoleId)
  return _internal_llroleid();
}
inline void ModuleFriend_Agree_Req::_internal_set_llroleid(uint64_t value) {
  
  llroleid_ = value;
}
inline void ModuleFriend_Agree_Req::set_llroleid(uint64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Agree_Req.llRoleId)
}

// -------------------------------------------------------------------

// ModuleFriend_Refuse_Req

// uint64 llRoleId = 1;
inline void ModuleFriend_Refuse_Req::clear_llroleid() {
  llroleid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_Refuse_Req::_internal_llroleid() const {
  return llroleid_;
}
inline uint64_t ModuleFriend_Refuse_Req::llroleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Refuse_Req.llRoleId)
  return _internal_llroleid();
}
inline void ModuleFriend_Refuse_Req::_internal_set_llroleid(uint64_t value) {
  
  llroleid_ = value;
}
inline void ModuleFriend_Refuse_Req::set_llroleid(uint64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Refuse_Req.llRoleId)
}

// -------------------------------------------------------------------

// ModuleFriend_AgreeAll_Req

// -------------------------------------------------------------------

// ModuleFriend_RefuseAll_Req

// -------------------------------------------------------------------

// ModuleFriend_Remove_Req

// uint64 llRoleId = 1;
inline void ModuleFriend_Remove_Req::clear_llroleid() {
  llroleid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_Remove_Req::_internal_llroleid() const {
  return llroleid_;
}
inline uint64_t ModuleFriend_Remove_Req::llroleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Remove_Req.llRoleId)
  return _internal_llroleid();
}
inline void ModuleFriend_Remove_Req::_internal_set_llroleid(uint64_t value) {
  
  llroleid_ = value;
}
inline void ModuleFriend_Remove_Req::set_llroleid(uint64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Remove_Req.llRoleId)
}

// -------------------------------------------------------------------

// ModuleFriend_Block_Req

// uint64 llRoleId = 1;
inline void ModuleFriend_Block_Req::clear_llroleid() {
  llroleid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_Block_Req::_internal_llroleid() const {
  return llroleid_;
}
inline uint64_t ModuleFriend_Block_Req::llroleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Block_Req.llRoleId)
  return _internal_llroleid();
}
inline void ModuleFriend_Block_Req::_internal_set_llroleid(uint64_t value) {
  
  llroleid_ = value;
}
inline void ModuleFriend_Block_Req::set_llroleid(uint64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Block_Req.llRoleId)
}

// -------------------------------------------------------------------

// ModuleFriend_Search_Req

// bytes strNick = 1;
inline void ModuleFriend_Search_Req::clear_strnick() {
  strnick_.ClearToEmpty();
}
inline const std::string& ModuleFriend_Search_Req::strnick() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Search_Req.strNick)
  return _internal_strnick();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ModuleFriend_Search_Req::set_strnick(ArgT0&& arg0, ArgT... args) {
 
 strnick_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Search_Req.strNick)
}
inline std::string* ModuleFriend_Search_Req::mutable_strnick() {
  std::string* _s = _internal_mutable_strnick();
  // @@protoc_insertion_point(field_mutable:client.ModuleFriend_Search_Req.strNick)
  return _s;
}
inline const std::string& ModuleFriend_Search_Req::_internal_strnick() const {
  return strnick_.Get();
}
inline void ModuleFriend_Search_Req::_internal_set_strnick(const std::string& value) {
  
  strnick_.Set(value, GetArenaForAllocation());
}
inline std::string* ModuleFriend_Search_Req::_internal_mutable_strnick() {
  
  return strnick_.Mutable(GetArenaForAllocation());
}
inline std::string* ModuleFriend_Search_Req::release_strnick() {
  // @@protoc_insertion_point(field_release:client.ModuleFriend_Search_Req.strNick)
  return strnick_.Release();
}
inline void ModuleFriend_Search_Req::set_allocated_strnick(std::string* strnick) {
  if (strnick != nullptr) {
    
  } else {
    
  }
  strnick_.SetAllocated(strnick, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strnick_.IsDefault()) {
    strnick_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:client.ModuleFriend_Search_Req.strNick)
}

// -------------------------------------------------------------------

// ModuleFriend_Search_Ntf

// uint64 llRoleId = 1;
inline void ModuleFriend_Search_Ntf::clear_llroleid() {
  llroleid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_Search_Ntf::_internal_llroleid() const {
  return llroleid_;
}
inline uint64_t ModuleFriend_Search_Ntf::llroleid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Search_Ntf.llRoleId)
  return _internal_llroleid();
}
inline void ModuleFriend_Search_Ntf::_internal_set_llroleid(uint64_t value) {
  
  llroleid_ = value;
}
inline void ModuleFriend_Search_Ntf::set_llroleid(uint64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_Search_Ntf.llRoleId)
}

// -------------------------------------------------------------------

// ModuleFriend_SetFilter_Req

// bool bCity = 1;
inline void ModuleFriend_SetFilter_Req::clear_bcity() {
  bcity_ = false;
}
inline bool ModuleFriend_SetFilter_Req::_internal_bcity() const {
  return bcity_;
}
inline bool ModuleFriend_SetFilter_Req::bcity() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SetFilter_Req.bCity)
  return _internal_bcity();
}
inline void ModuleFriend_SetFilter_Req::_internal_set_bcity(bool value) {
  
  bcity_ = value;
}
inline void ModuleFriend_SetFilter_Req::set_bcity(bool value) {
  _internal_set_bcity(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SetFilter_Req.bCity)
}

// uint32 uiSex = 2;
inline void ModuleFriend_SetFilter_Req::clear_uisex() {
  uisex_ = 0u;
}
inline uint32_t ModuleFriend_SetFilter_Req::_internal_uisex() const {
  return uisex_;
}
inline uint32_t ModuleFriend_SetFilter_Req::uisex() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SetFilter_Req.uiSex)
  return _internal_uisex();
}
inline void ModuleFriend_SetFilter_Req::_internal_set_uisex(uint32_t value) {
  
  uisex_ = value;
}
inline void ModuleFriend_SetFilter_Req::set_uisex(uint32_t value) {
  _internal_set_uisex(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SetFilter_Req.uiSex)
}

// uint32 uiLabel = 3;
inline void ModuleFriend_SetFilter_Req::clear_uilabel() {
  uilabel_ = 0u;
}
inline uint32_t ModuleFriend_SetFilter_Req::_internal_uilabel() const {
  return uilabel_;
}
inline uint32_t ModuleFriend_SetFilter_Req::uilabel() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SetFilter_Req.uiLabel)
  return _internal_uilabel();
}
inline void ModuleFriend_SetFilter_Req::_internal_set_uilabel(uint32_t value) {
  
  uilabel_ = value;
}
inline void ModuleFriend_SetFilter_Req::set_uilabel(uint32_t value) {
  _internal_set_uilabel(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SetFilter_Req.uiLabel)
}

// -------------------------------------------------------------------

// ModuleFriend_Recommend_Req

// -------------------------------------------------------------------

// ModuleFriend_Recommend_Ntf

// .common.RecommendList oRoleList = 1;
inline bool ModuleFriend_Recommend_Ntf::_internal_has_orolelist() const {
  return this != internal_default_instance() && orolelist_ != nullptr;
}
inline bool ModuleFriend_Recommend_Ntf::has_orolelist() const {
  return _internal_has_orolelist();
}
inline const ::common::RecommendList& ModuleFriend_Recommend_Ntf::_internal_orolelist() const {
  const ::common::RecommendList* p = orolelist_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::RecommendList&>(
      ::common::_RecommendList_default_instance_);
}
inline const ::common::RecommendList& ModuleFriend_Recommend_Ntf::orolelist() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_Recommend_Ntf.oRoleList)
  return _internal_orolelist();
}
inline void ModuleFriend_Recommend_Ntf::unsafe_arena_set_allocated_orolelist(
    ::common::RecommendList* orolelist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(orolelist_);
  }
  orolelist_ = orolelist;
  if (orolelist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleFriend_Recommend_Ntf.oRoleList)
}
inline ::common::RecommendList* ModuleFriend_Recommend_Ntf::release_orolelist() {
  
  ::common::RecommendList* temp = orolelist_;
  orolelist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::RecommendList* ModuleFriend_Recommend_Ntf::unsafe_arena_release_orolelist() {
  // @@protoc_insertion_point(field_release:client.ModuleFriend_Recommend_Ntf.oRoleList)
  
  ::common::RecommendList* temp = orolelist_;
  orolelist_ = nullptr;
  return temp;
}
inline ::common::RecommendList* ModuleFriend_Recommend_Ntf::_internal_mutable_orolelist() {
  
  if (orolelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::RecommendList>(GetArenaForAllocation());
    orolelist_ = p;
  }
  return orolelist_;
}
inline ::common::RecommendList* ModuleFriend_Recommend_Ntf::mutable_orolelist() {
  ::common::RecommendList* _msg = _internal_mutable_orolelist();
  // @@protoc_insertion_point(field_mutable:client.ModuleFriend_Recommend_Ntf.oRoleList)
  return _msg;
}
inline void ModuleFriend_Recommend_Ntf::set_allocated_orolelist(::common::RecommendList* orolelist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(orolelist_);
  }
  if (orolelist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(orolelist));
    if (message_arena != submessage_arena) {
      orolelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orolelist, submessage_arena);
    }
    
  } else {
    
  }
  orolelist_ = orolelist;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleFriend_Recommend_Ntf.oRoleList)
}

// -------------------------------------------------------------------

// ModuleFriend_SetMyLabel_Req

// uint32 uiCity = 1;
inline void ModuleFriend_SetMyLabel_Req::clear_uicity() {
  uicity_ = 0u;
}
inline uint32_t ModuleFriend_SetMyLabel_Req::_internal_uicity() const {
  return uicity_;
}
inline uint32_t ModuleFriend_SetMyLabel_Req::uicity() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SetMyLabel_Req.uiCity)
  return _internal_uicity();
}
inline void ModuleFriend_SetMyLabel_Req::_internal_set_uicity(uint32_t value) {
  
  uicity_ = value;
}
inline void ModuleFriend_SetMyLabel_Req::set_uicity(uint32_t value) {
  _internal_set_uicity(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SetMyLabel_Req.uiCity)
}

// bool bAvailable = 2;
inline void ModuleFriend_SetMyLabel_Req::clear_bavailable() {
  bavailable_ = false;
}
inline bool ModuleFriend_SetMyLabel_Req::_internal_bavailable() const {
  return bavailable_;
}
inline bool ModuleFriend_SetMyLabel_Req::bavailable() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SetMyLabel_Req.bAvailable)
  return _internal_bavailable();
}
inline void ModuleFriend_SetMyLabel_Req::_internal_set_bavailable(bool value) {
  
  bavailable_ = value;
}
inline void ModuleFriend_SetMyLabel_Req::set_bavailable(bool value) {
  _internal_set_bavailable(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SetMyLabel_Req.bAvailable)
}

// uint32 uiLabel = 3;
inline void ModuleFriend_SetMyLabel_Req::clear_uilabel() {
  uilabel_ = 0u;
}
inline uint32_t ModuleFriend_SetMyLabel_Req::_internal_uilabel() const {
  return uilabel_;
}
inline uint32_t ModuleFriend_SetMyLabel_Req::uilabel() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SetMyLabel_Req.uiLabel)
  return _internal_uilabel();
}
inline void ModuleFriend_SetMyLabel_Req::_internal_set_uilabel(uint32_t value) {
  
  uilabel_ = value;
}
inline void ModuleFriend_SetMyLabel_Req::set_uilabel(uint32_t value) {
  _internal_set_uilabel(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SetMyLabel_Req.uiLabel)
}

// -------------------------------------------------------------------

// ModuleFriend_SendGift_Req

// uint64 llRecver = 1;
inline void ModuleFriend_SendGift_Req::clear_llrecver() {
  llrecver_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_SendGift_Req::_internal_llrecver() const {
  return llrecver_;
}
inline uint64_t ModuleFriend_SendGift_Req::llrecver() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SendGift_Req.llRecver)
  return _internal_llrecver();
}
inline void ModuleFriend_SendGift_Req::_internal_set_llrecver(uint64_t value) {
  
  llrecver_ = value;
}
inline void ModuleFriend_SendGift_Req::set_llrecver(uint64_t value) {
  _internal_set_llrecver(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SendGift_Req.llRecver)
}

// uint64 llItemId = 2;
inline void ModuleFriend_SendGift_Req::clear_llitemid() {
  llitemid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_SendGift_Req::_internal_llitemid() const {
  return llitemid_;
}
inline uint64_t ModuleFriend_SendGift_Req::llitemid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SendGift_Req.llItemId)
  return _internal_llitemid();
}
inline void ModuleFriend_SendGift_Req::_internal_set_llitemid(uint64_t value) {
  
  llitemid_ = value;
}
inline void ModuleFriend_SendGift_Req::set_llitemid(uint64_t value) {
  _internal_set_llitemid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SendGift_Req.llItemId)
}

// uint32 uiCount = 3;
inline void ModuleFriend_SendGift_Req::clear_uicount() {
  uicount_ = 0u;
}
inline uint32_t ModuleFriend_SendGift_Req::_internal_uicount() const {
  return uicount_;
}
inline uint32_t ModuleFriend_SendGift_Req::uicount() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_SendGift_Req.uiCount)
  return _internal_uicount();
}
inline void ModuleFriend_SendGift_Req::_internal_set_uicount(uint32_t value) {
  
  uicount_ = value;
}
inline void ModuleFriend_SendGift_Req::set_uicount(uint32_t value) {
  _internal_set_uicount(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_SendGift_Req.uiCount)
}

// -------------------------------------------------------------------

// ModuleFriend_GiftMsg_Ntf

// uint64 llUid = 1;
inline void ModuleFriend_GiftMsg_Ntf::clear_lluid() {
  lluid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_GiftMsg_Ntf::_internal_lluid() const {
  return lluid_;
}
inline uint64_t ModuleFriend_GiftMsg_Ntf::lluid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_GiftMsg_Ntf.llUid)
  return _internal_lluid();
}
inline void ModuleFriend_GiftMsg_Ntf::_internal_set_lluid(uint64_t value) {
  
  lluid_ = value;
}
inline void ModuleFriend_GiftMsg_Ntf::set_lluid(uint64_t value) {
  _internal_set_lluid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_GiftMsg_Ntf.llUid)
}

// uint64 llSender = 2;
inline void ModuleFriend_GiftMsg_Ntf::clear_llsender() {
  llsender_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_GiftMsg_Ntf::_internal_llsender() const {
  return llsender_;
}
inline uint64_t ModuleFriend_GiftMsg_Ntf::llsender() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_GiftMsg_Ntf.llSender)
  return _internal_llsender();
}
inline void ModuleFriend_GiftMsg_Ntf::_internal_set_llsender(uint64_t value) {
  
  llsender_ = value;
}
inline void ModuleFriend_GiftMsg_Ntf::set_llsender(uint64_t value) {
  _internal_set_llsender(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_GiftMsg_Ntf.llSender)
}

// uint64 llRecver = 3;
inline void ModuleFriend_GiftMsg_Ntf::clear_llrecver() {
  llrecver_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_GiftMsg_Ntf::_internal_llrecver() const {
  return llrecver_;
}
inline uint64_t ModuleFriend_GiftMsg_Ntf::llrecver() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_GiftMsg_Ntf.llRecver)
  return _internal_llrecver();
}
inline void ModuleFriend_GiftMsg_Ntf::_internal_set_llrecver(uint64_t value) {
  
  llrecver_ = value;
}
inline void ModuleFriend_GiftMsg_Ntf::set_llrecver(uint64_t value) {
  _internal_set_llrecver(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_GiftMsg_Ntf.llRecver)
}

// uint32 uiItemTid = 4;
inline void ModuleFriend_GiftMsg_Ntf::clear_uiitemtid() {
  uiitemtid_ = 0u;
}
inline uint32_t ModuleFriend_GiftMsg_Ntf::_internal_uiitemtid() const {
  return uiitemtid_;
}
inline uint32_t ModuleFriend_GiftMsg_Ntf::uiitemtid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_GiftMsg_Ntf.uiItemTid)
  return _internal_uiitemtid();
}
inline void ModuleFriend_GiftMsg_Ntf::_internal_set_uiitemtid(uint32_t value) {
  
  uiitemtid_ = value;
}
inline void ModuleFriend_GiftMsg_Ntf::set_uiitemtid(uint32_t value) {
  _internal_set_uiitemtid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_GiftMsg_Ntf.uiItemTid)
}

// uint32 uiCount = 5;
inline void ModuleFriend_GiftMsg_Ntf::clear_uicount() {
  uicount_ = 0u;
}
inline uint32_t ModuleFriend_GiftMsg_Ntf::_internal_uicount() const {
  return uicount_;
}
inline uint32_t ModuleFriend_GiftMsg_Ntf::uicount() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_GiftMsg_Ntf.uiCount)
  return _internal_uicount();
}
inline void ModuleFriend_GiftMsg_Ntf::_internal_set_uicount(uint32_t value) {
  
  uicount_ = value;
}
inline void ModuleFriend_GiftMsg_Ntf::set_uicount(uint32_t value) {
  _internal_set_uicount(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_GiftMsg_Ntf.uiCount)
}

// uint32 uiTimeStamp = 6;
inline void ModuleFriend_GiftMsg_Ntf::clear_uitimestamp() {
  uitimestamp_ = 0u;
}
inline uint32_t ModuleFriend_GiftMsg_Ntf::_internal_uitimestamp() const {
  return uitimestamp_;
}
inline uint32_t ModuleFriend_GiftMsg_Ntf::uitimestamp() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_GiftMsg_Ntf.uiTimeStamp)
  return _internal_uitimestamp();
}
inline void ModuleFriend_GiftMsg_Ntf::_internal_set_uitimestamp(uint32_t value) {
  
  uitimestamp_ = value;
}
inline void ModuleFriend_GiftMsg_Ntf::set_uitimestamp(uint32_t value) {
  _internal_set_uitimestamp(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_GiftMsg_Ntf.uiTimeStamp)
}

// -------------------------------------------------------------------

// ModuleFriend_ReceiveGift_Req

// uint64 llGiftUid = 1;
inline void ModuleFriend_ReceiveGift_Req::clear_llgiftuid() {
  llgiftuid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_ReceiveGift_Req::_internal_llgiftuid() const {
  return llgiftuid_;
}
inline uint64_t ModuleFriend_ReceiveGift_Req::llgiftuid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_ReceiveGift_Req.llGiftUid)
  return _internal_llgiftuid();
}
inline void ModuleFriend_ReceiveGift_Req::_internal_set_llgiftuid(uint64_t value) {
  
  llgiftuid_ = value;
}
inline void ModuleFriend_ReceiveGift_Req::set_llgiftuid(uint64_t value) {
  _internal_set_llgiftuid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_ReceiveGift_Req.llGiftUid)
}

// -------------------------------------------------------------------

// ModuleFriend_ReceiveGift_Ntf

// uint64 llGiftUid = 1;
inline void ModuleFriend_ReceiveGift_Ntf::clear_llgiftuid() {
  llgiftuid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_ReceiveGift_Ntf::_internal_llgiftuid() const {
  return llgiftuid_;
}
inline uint64_t ModuleFriend_ReceiveGift_Ntf::llgiftuid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_ReceiveGift_Ntf.llGiftUid)
  return _internal_llgiftuid();
}
inline void ModuleFriend_ReceiveGift_Ntf::_internal_set_llgiftuid(uint64_t value) {
  
  llgiftuid_ = value;
}
inline void ModuleFriend_ReceiveGift_Ntf::set_llgiftuid(uint64_t value) {
  _internal_set_llgiftuid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_ReceiveGift_Ntf.llGiftUid)
}

// -------------------------------------------------------------------

// ModuleFriend_TeamId_Ntf

// uint64 llRoleUid = 1;
inline void ModuleFriend_TeamId_Ntf::clear_llroleuid() {
  llroleuid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_TeamId_Ntf::_internal_llroleuid() const {
  return llroleuid_;
}
inline uint64_t ModuleFriend_TeamId_Ntf::llroleuid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_TeamId_Ntf.llRoleUid)
  return _internal_llroleuid();
}
inline void ModuleFriend_TeamId_Ntf::_internal_set_llroleuid(uint64_t value) {
  
  llroleuid_ = value;
}
inline void ModuleFriend_TeamId_Ntf::set_llroleuid(uint64_t value) {
  _internal_set_llroleuid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_TeamId_Ntf.llRoleUid)
}

// uint64 llTeamId = 2;
inline void ModuleFriend_TeamId_Ntf::clear_llteamid() {
  llteamid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_TeamId_Ntf::_internal_llteamid() const {
  return llteamid_;
}
inline uint64_t ModuleFriend_TeamId_Ntf::llteamid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_TeamId_Ntf.llTeamId)
  return _internal_llteamid();
}
inline void ModuleFriend_TeamId_Ntf::_internal_set_llteamid(uint64_t value) {
  
  llteamid_ = value;
}
inline void ModuleFriend_TeamId_Ntf::set_llteamid(uint64_t value) {
  _internal_set_llteamid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_TeamId_Ntf.llTeamId)
}

// -------------------------------------------------------------------

// ModuleFriend_FriendOnline_Ntf

// uint64 llRoleUid = 1;
inline void ModuleFriend_FriendOnline_Ntf::clear_llroleuid() {
  llroleuid_ = uint64_t{0u};
}
inline uint64_t ModuleFriend_FriendOnline_Ntf::_internal_llroleuid() const {
  return llroleuid_;
}
inline uint64_t ModuleFriend_FriendOnline_Ntf::llroleuid() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_FriendOnline_Ntf.llRoleUid)
  return _internal_llroleuid();
}
inline void ModuleFriend_FriendOnline_Ntf::_internal_set_llroleuid(uint64_t value) {
  
  llroleuid_ = value;
}
inline void ModuleFriend_FriendOnline_Ntf::set_llroleuid(uint64_t value) {
  _internal_set_llroleuid(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_FriendOnline_Ntf.llRoleUid)
}

// bool bOnline = 2;
inline void ModuleFriend_FriendOnline_Ntf::clear_bonline() {
  bonline_ = false;
}
inline bool ModuleFriend_FriendOnline_Ntf::_internal_bonline() const {
  return bonline_;
}
inline bool ModuleFriend_FriendOnline_Ntf::bonline() const {
  // @@protoc_insertion_point(field_get:client.ModuleFriend_FriendOnline_Ntf.bOnline)
  return _internal_bonline();
}
inline void ModuleFriend_FriendOnline_Ntf::_internal_set_bonline(bool value) {
  
  bonline_ = value;
}
inline void ModuleFriend_FriendOnline_Ntf::set_bonline(bool value) {
  _internal_set_bonline(value);
  // @@protoc_insertion_point(field_set:client.ModuleFriend_FriendOnline_Ntf.bOnline)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::client::enModuleFriend> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::enModuleFriend>() {
  return ::client::enModuleFriend_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_friend_2eproto
