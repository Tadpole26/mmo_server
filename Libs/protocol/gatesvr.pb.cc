// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gatesvr.proto

#include "gatesvr.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace inner {
PROTOBUF_CONSTEXPR InnerGatesvr::InnerGatesvr(
    ::_pbi::ConstantInitialized)
  : fromuser_(uint64_t{0u})
  , _oneof_case_{}{}
struct InnerGatesvrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerGatesvrDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerGatesvrDefaultTypeInternal() {}
  union {
    InnerGatesvr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerGatesvrDefaultTypeInternal _InnerGatesvr_default_instance_;
PROTOBUF_CONSTEXPR InnerGatesvr_Fromscene_Test::InnerGatesvr_Fromscene_Test(
    ::_pbi::ConstantInitialized){}
struct InnerGatesvr_Fromscene_TestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerGatesvr_Fromscene_TestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerGatesvr_Fromscene_TestDefaultTypeInternal() {}
  union {
    InnerGatesvr_Fromscene_Test _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerGatesvr_Fromscene_TestDefaultTypeInternal _InnerGatesvr_Fromscene_Test_default_instance_;
PROTOBUF_CONSTEXPR InnerGatesvr_Fromscene_ToMeMsg::InnerGatesvr_Fromscene_ToMeMsg(
    ::_pbi::ConstantInitialized)
  : data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , moduleid_(0u)
  , cmdid_(0u){}
struct InnerGatesvr_Fromscene_ToMeMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerGatesvr_Fromscene_ToMeMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerGatesvr_Fromscene_ToMeMsgDefaultTypeInternal() {}
  union {
    InnerGatesvr_Fromscene_ToMeMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerGatesvr_Fromscene_ToMeMsgDefaultTypeInternal _InnerGatesvr_Fromscene_ToMeMsg_default_instance_;
}  // namespace inner
static ::_pb::Metadata file_level_metadata_gatesvr_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_gatesvr_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_gatesvr_2eproto = nullptr;

const uint32_t TableStruct_gatesvr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr, fromuser_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr, Fromscene_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr_Fromscene_Test, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr_Fromscene_ToMeMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr_Fromscene_ToMeMsg, moduleid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr_Fromscene_ToMeMsg, cmdid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerGatesvr_Fromscene_ToMeMsg, data_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::inner::InnerGatesvr)},
  { 10, -1, -1, sizeof(::inner::InnerGatesvr_Fromscene_Test)},
  { 16, -1, -1, sizeof(::inner::InnerGatesvr_Fromscene_ToMeMsg)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::inner::_InnerGatesvr_default_instance_._instance,
  &::inner::_InnerGatesvr_Fromscene_Test_default_instance_._instance,
  &::inner::_InnerGatesvr_Fromscene_ToMeMsg_default_instance_._instance,
};

const char descriptor_table_protodef_gatesvr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rgatesvr.proto\022\005inner\"\257\001\n\014InnerGatesvr\022"
  "\020\n\010fromUser\030\001 \001(\004\022<\n\016fromscene_test\030e \001("
  "\0132\".inner.InnerGatesvr_Fromscene_TestH\000\022"
  "B\n\021fromscene_tomemsg\030f \001(\0132%.inner.Inner"
  "Gatesvr_Fromscene_ToMeMsgH\000B\013\n\tFromscene"
  "\"\035\n\033InnerGatesvr_Fromscene_Test\"O\n\036Inner"
  "Gatesvr_Fromscene_ToMeMsg\022\020\n\010moduleId\030\001 "
  "\001(\r\022\r\n\005cmdId\030\002 \001(\r\022\014\n\004data\030\003 \001(\014b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_gatesvr_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_gatesvr_2eproto = {
    false, false, 320, descriptor_table_protodef_gatesvr_2eproto,
    "gatesvr.proto",
    &descriptor_table_gatesvr_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_gatesvr_2eproto::offsets,
    file_level_metadata_gatesvr_2eproto, file_level_enum_descriptors_gatesvr_2eproto,
    file_level_service_descriptors_gatesvr_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_gatesvr_2eproto_getter() {
  return &descriptor_table_gatesvr_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_gatesvr_2eproto(&descriptor_table_gatesvr_2eproto);
namespace inner {

// ===================================================================

class InnerGatesvr::_Internal {
 public:
  static const ::inner::InnerGatesvr_Fromscene_Test& fromscene_test(const InnerGatesvr* msg);
  static const ::inner::InnerGatesvr_Fromscene_ToMeMsg& fromscene_tomemsg(const InnerGatesvr* msg);
};

const ::inner::InnerGatesvr_Fromscene_Test&
InnerGatesvr::_Internal::fromscene_test(const InnerGatesvr* msg) {
  return *msg->Fromscene_.fromscene_test_;
}
const ::inner::InnerGatesvr_Fromscene_ToMeMsg&
InnerGatesvr::_Internal::fromscene_tomemsg(const InnerGatesvr* msg) {
  return *msg->Fromscene_.fromscene_tomemsg_;
}
void InnerGatesvr::set_allocated_fromscene_test(::inner::InnerGatesvr_Fromscene_Test* fromscene_test) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromscene();
  if (fromscene_test) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromscene_test);
    if (message_arena != submessage_arena) {
      fromscene_test = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromscene_test, submessage_arena);
    }
    set_has_fromscene_test();
    Fromscene_.fromscene_test_ = fromscene_test;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerGatesvr.fromscene_test)
}
void InnerGatesvr::set_allocated_fromscene_tomemsg(::inner::InnerGatesvr_Fromscene_ToMeMsg* fromscene_tomemsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Fromscene();
  if (fromscene_tomemsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fromscene_tomemsg);
    if (message_arena != submessage_arena) {
      fromscene_tomemsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fromscene_tomemsg, submessage_arena);
    }
    set_has_fromscene_tomemsg();
    Fromscene_.fromscene_tomemsg_ = fromscene_tomemsg;
  }
  // @@protoc_insertion_point(field_set_allocated:inner.InnerGatesvr.fromscene_tomemsg)
}
InnerGatesvr::InnerGatesvr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerGatesvr)
}
InnerGatesvr::InnerGatesvr(const InnerGatesvr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fromuser_ = from.fromuser_;
  clear_has_Fromscene();
  switch (from.Fromscene_case()) {
    case kFromsceneTest: {
      _internal_mutable_fromscene_test()->::inner::InnerGatesvr_Fromscene_Test::MergeFrom(from._internal_fromscene_test());
      break;
    }
    case kFromsceneTomemsg: {
      _internal_mutable_fromscene_tomemsg()->::inner::InnerGatesvr_Fromscene_ToMeMsg::MergeFrom(from._internal_fromscene_tomemsg());
      break;
    }
    case FROMSCENE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inner.InnerGatesvr)
}

inline void InnerGatesvr::SharedCtor() {
fromuser_ = uint64_t{0u};
clear_has_Fromscene();
}

InnerGatesvr::~InnerGatesvr() {
  // @@protoc_insertion_point(destructor:inner.InnerGatesvr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerGatesvr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Fromscene()) {
    clear_Fromscene();
  }
}

void InnerGatesvr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerGatesvr::clear_Fromscene() {
// @@protoc_insertion_point(one_of_clear_start:inner.InnerGatesvr)
  switch (Fromscene_case()) {
    case kFromsceneTest: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromscene_.fromscene_test_;
      }
      break;
    }
    case kFromsceneTomemsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete Fromscene_.fromscene_tomemsg_;
      }
      break;
    }
    case FROMSCENE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FROMSCENE_NOT_SET;
}


void InnerGatesvr::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerGatesvr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fromuser_ = uint64_t{0u};
  clear_Fromscene();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerGatesvr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 fromUser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fromuser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerGatesvr_Fromscene_Test fromscene_test = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromscene_test(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerGatesvr_Fromscene_ToMeMsg fromscene_tomemsg = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_fromscene_tomemsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerGatesvr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerGatesvr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fromUser = 1;
  if (this->_internal_fromuser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_fromuser(), target);
  }

  // .inner.InnerGatesvr_Fromscene_Test fromscene_test = 101;
  if (_internal_has_fromscene_test()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::fromscene_test(this),
        _Internal::fromscene_test(this).GetCachedSize(), target, stream);
  }

  // .inner.InnerGatesvr_Fromscene_ToMeMsg fromscene_tomemsg = 102;
  if (_internal_has_fromscene_tomemsg()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(102, _Internal::fromscene_tomemsg(this),
        _Internal::fromscene_tomemsg(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerGatesvr)
  return target;
}

size_t InnerGatesvr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerGatesvr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 fromUser = 1;
  if (this->_internal_fromuser() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_fromuser());
  }

  switch (Fromscene_case()) {
    // .inner.InnerGatesvr_Fromscene_Test fromscene_test = 101;
    case kFromsceneTest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromscene_.fromscene_test_);
      break;
    }
    // .inner.InnerGatesvr_Fromscene_ToMeMsg fromscene_tomemsg = 102;
    case kFromsceneTomemsg: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Fromscene_.fromscene_tomemsg_);
      break;
    }
    case FROMSCENE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerGatesvr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerGatesvr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerGatesvr::GetClassData() const { return &_class_data_; }

void InnerGatesvr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerGatesvr *>(to)->MergeFrom(
      static_cast<const InnerGatesvr &>(from));
}


void InnerGatesvr::MergeFrom(const InnerGatesvr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerGatesvr)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fromuser() != 0) {
    _internal_set_fromuser(from._internal_fromuser());
  }
  switch (from.Fromscene_case()) {
    case kFromsceneTest: {
      _internal_mutable_fromscene_test()->::inner::InnerGatesvr_Fromscene_Test::MergeFrom(from._internal_fromscene_test());
      break;
    }
    case kFromsceneTomemsg: {
      _internal_mutable_fromscene_tomemsg()->::inner::InnerGatesvr_Fromscene_ToMeMsg::MergeFrom(from._internal_fromscene_tomemsg());
      break;
    }
    case FROMSCENE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerGatesvr::CopyFrom(const InnerGatesvr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerGatesvr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerGatesvr::IsInitialized() const {
  return true;
}

void InnerGatesvr::InternalSwap(InnerGatesvr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fromuser_, other->fromuser_);
  swap(Fromscene_, other->Fromscene_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerGatesvr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gatesvr_2eproto_getter, &descriptor_table_gatesvr_2eproto_once,
      file_level_metadata_gatesvr_2eproto[0]);
}

// ===================================================================

class InnerGatesvr_Fromscene_Test::_Internal {
 public:
};

InnerGatesvr_Fromscene_Test::InnerGatesvr_Fromscene_Test(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inner.InnerGatesvr_Fromscene_Test)
}
InnerGatesvr_Fromscene_Test::InnerGatesvr_Fromscene_Test(const InnerGatesvr_Fromscene_Test& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerGatesvr_Fromscene_Test)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerGatesvr_Fromscene_Test::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerGatesvr_Fromscene_Test::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InnerGatesvr_Fromscene_Test::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gatesvr_2eproto_getter, &descriptor_table_gatesvr_2eproto_once,
      file_level_metadata_gatesvr_2eproto[1]);
}

// ===================================================================

class InnerGatesvr_Fromscene_ToMeMsg::_Internal {
 public:
};

InnerGatesvr_Fromscene_ToMeMsg::InnerGatesvr_Fromscene_ToMeMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerGatesvr_Fromscene_ToMeMsg)
}
InnerGatesvr_Fromscene_ToMeMsg::InnerGatesvr_Fromscene_ToMeMsg(const InnerGatesvr_Fromscene_ToMeMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&moduleid_, &from.moduleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmdid_) -
    reinterpret_cast<char*>(&moduleid_)) + sizeof(cmdid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerGatesvr_Fromscene_ToMeMsg)
}

inline void InnerGatesvr_Fromscene_ToMeMsg::SharedCtor() {
data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&moduleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cmdid_) -
    reinterpret_cast<char*>(&moduleid_)) + sizeof(cmdid_));
}

InnerGatesvr_Fromscene_ToMeMsg::~InnerGatesvr_Fromscene_ToMeMsg() {
  // @@protoc_insertion_point(destructor:inner.InnerGatesvr_Fromscene_ToMeMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerGatesvr_Fromscene_ToMeMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.Destroy();
}

void InnerGatesvr_Fromscene_ToMeMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerGatesvr_Fromscene_ToMeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerGatesvr_Fromscene_ToMeMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  ::memset(&moduleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmdid_) -
      reinterpret_cast<char*>(&moduleid_)) + sizeof(cmdid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerGatesvr_Fromscene_ToMeMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 moduleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          moduleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cmdId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          cmdid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerGatesvr_Fromscene_ToMeMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerGatesvr_Fromscene_ToMeMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 moduleId = 1;
  if (this->_internal_moduleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_moduleid(), target);
  }

  // uint32 cmdId = 2;
  if (this->_internal_cmdid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_cmdid(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerGatesvr_Fromscene_ToMeMsg)
  return target;
}

size_t InnerGatesvr_Fromscene_ToMeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerGatesvr_Fromscene_ToMeMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint32 moduleId = 1;
  if (this->_internal_moduleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_moduleid());
  }

  // uint32 cmdId = 2;
  if (this->_internal_cmdid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cmdid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerGatesvr_Fromscene_ToMeMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerGatesvr_Fromscene_ToMeMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerGatesvr_Fromscene_ToMeMsg::GetClassData() const { return &_class_data_; }

void InnerGatesvr_Fromscene_ToMeMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerGatesvr_Fromscene_ToMeMsg *>(to)->MergeFrom(
      static_cast<const InnerGatesvr_Fromscene_ToMeMsg &>(from));
}


void InnerGatesvr_Fromscene_ToMeMsg::MergeFrom(const InnerGatesvr_Fromscene_ToMeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerGatesvr_Fromscene_ToMeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_moduleid() != 0) {
    _internal_set_moduleid(from._internal_moduleid());
  }
  if (from._internal_cmdid() != 0) {
    _internal_set_cmdid(from._internal_cmdid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerGatesvr_Fromscene_ToMeMsg::CopyFrom(const InnerGatesvr_Fromscene_ToMeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerGatesvr_Fromscene_ToMeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerGatesvr_Fromscene_ToMeMsg::IsInitialized() const {
  return true;
}

void InnerGatesvr_Fromscene_ToMeMsg::InternalSwap(InnerGatesvr_Fromscene_ToMeMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerGatesvr_Fromscene_ToMeMsg, cmdid_)
      + sizeof(InnerGatesvr_Fromscene_ToMeMsg::cmdid_)
      - PROTOBUF_FIELD_OFFSET(InnerGatesvr_Fromscene_ToMeMsg, moduleid_)>(
          reinterpret_cast<char*>(&moduleid_),
          reinterpret_cast<char*>(&other->moduleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerGatesvr_Fromscene_ToMeMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gatesvr_2eproto_getter, &descriptor_table_gatesvr_2eproto_once,
      file_level_metadata_gatesvr_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::inner::InnerGatesvr*
Arena::CreateMaybeMessage< ::inner::InnerGatesvr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerGatesvr >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerGatesvr_Fromscene_Test*
Arena::CreateMaybeMessage< ::inner::InnerGatesvr_Fromscene_Test >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerGatesvr_Fromscene_Test >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerGatesvr_Fromscene_ToMeMsg*
Arena::CreateMaybeMessage< ::inner::InnerGatesvr_Fromscene_ToMeMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerGatesvr_Fromscene_ToMeMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
