// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenesvr.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_scenesvr_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_scenesvr_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "innerfriend.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_scenesvr_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_scenesvr_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenesvr_2eproto;
namespace inner {
class InnerScenesvr;
struct InnerScenesvrDefaultTypeInternal;
extern InnerScenesvrDefaultTypeInternal _InnerScenesvr_default_instance_;
class InnerScenesvr_Fromfriend_FriendList;
struct InnerScenesvr_Fromfriend_FriendListDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_FriendListDefaultTypeInternal _InnerScenesvr_Fromfriend_FriendList_default_instance_;
class InnerScenesvr_Fromfriend_FriendUpdate;
struct InnerScenesvr_Fromfriend_FriendUpdateDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_FriendUpdateDefaultTypeInternal _InnerScenesvr_Fromfriend_FriendUpdate_default_instance_;
class InnerScenesvr_Fromfriend_GiftEmail;
struct InnerScenesvr_Fromfriend_GiftEmailDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_GiftEmailDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftEmail_default_instance_;
class InnerScenesvr_Fromfriend_GiftExpire;
struct InnerScenesvr_Fromfriend_GiftExpireDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_GiftExpireDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftExpire_default_instance_;
class InnerScenesvr_Fromfriend_GiftReceived;
struct InnerScenesvr_Fromfriend_GiftReceivedDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_GiftReceivedDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftReceived_default_instance_;
class InnerScenesvr_Fromfriend_GiftVersion;
struct InnerScenesvr_Fromfriend_GiftVersionDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_GiftVersionDefaultTypeInternal _InnerScenesvr_Fromfriend_GiftVersion_default_instance_;
class InnerScenesvr_Fromfriend_ReturnItem;
struct InnerScenesvr_Fromfriend_ReturnItemDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_ReturnItemDefaultTypeInternal _InnerScenesvr_Fromfriend_ReturnItem_default_instance_;
class InnerScenesvr_Fromfriend_Test;
struct InnerScenesvr_Fromfriend_TestDefaultTypeInternal;
extern InnerScenesvr_Fromfriend_TestDefaultTypeInternal _InnerScenesvr_Fromfriend_Test_default_instance_;
class InnerScenesvr_Fromgate_ClientData;
struct InnerScenesvr_Fromgate_ClientDataDefaultTypeInternal;
extern InnerScenesvr_Fromgate_ClientDataDefaultTypeInternal _InnerScenesvr_Fromgate_ClientData_default_instance_;
class InnerScenesvr_Fromgate_ClientMsg;
struct InnerScenesvr_Fromgate_ClientMsgDefaultTypeInternal;
extern InnerScenesvr_Fromgate_ClientMsgDefaultTypeInternal _InnerScenesvr_Fromgate_ClientMsg_default_instance_;
class InnerScenesvr_Fromgate_Test;
struct InnerScenesvr_Fromgate_TestDefaultTypeInternal;
extern InnerScenesvr_Fromgate_TestDefaultTypeInternal _InnerScenesvr_Fromgate_Test_default_instance_;
class InnerScenesvr_Fromgate_createRole;
struct InnerScenesvr_Fromgate_createRoleDefaultTypeInternal;
extern InnerScenesvr_Fromgate_createRoleDefaultTypeInternal _InnerScenesvr_Fromgate_createRole_default_instance_;
class InnerScenesvr_Fromgate_serverRegister;
struct InnerScenesvr_Fromgate_serverRegisterDefaultTypeInternal;
extern InnerScenesvr_Fromgate_serverRegisterDefaultTypeInternal _InnerScenesvr_Fromgate_serverRegister_default_instance_;
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> ::inner::InnerScenesvr* Arena::CreateMaybeMessage<::inner::InnerScenesvr>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_FriendList* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_FriendList>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_FriendUpdate* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_FriendUpdate>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_GiftEmail* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_GiftEmail>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_GiftExpire* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_GiftExpire>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_GiftReceived* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_GiftReceived>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_GiftVersion* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_GiftVersion>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_ReturnItem* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_ReturnItem>(Arena*);
template<> ::inner::InnerScenesvr_Fromfriend_Test* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromfriend_Test>(Arena*);
template<> ::inner::InnerScenesvr_Fromgate_ClientData* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromgate_ClientData>(Arena*);
template<> ::inner::InnerScenesvr_Fromgate_ClientMsg* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromgate_ClientMsg>(Arena*);
template<> ::inner::InnerScenesvr_Fromgate_Test* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromgate_Test>(Arena*);
template<> ::inner::InnerScenesvr_Fromgate_createRole* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromgate_createRole>(Arena*);
template<> ::inner::InnerScenesvr_Fromgate_serverRegister* Arena::CreateMaybeMessage<::inner::InnerScenesvr_Fromgate_serverRegister>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace inner {

// ===================================================================

class InnerScenesvr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr) */ {
 public:
  inline InnerScenesvr() : InnerScenesvr(nullptr) {}
  ~InnerScenesvr() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr(const InnerScenesvr& from);
  InnerScenesvr(InnerScenesvr&& from) noexcept
    : InnerScenesvr() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr& operator=(const InnerScenesvr& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr& operator=(InnerScenesvr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr& default_instance() {
    return *internal_default_instance();
  }
  enum FromgateCase {
    kFromgateTest = 101,
    kFromgateServerregister = 102,
    kFromgateCreaterole = 103,
    kFromgateClientmsg = 104,
    kFromgateClientdata = 105,
    FROMGATE_NOT_SET = 0,
  };

  enum FromfriendCase {
    kFromfriendTest = 201,
    kFromfriendReturnitem = 202,
    kFromfriendGiftreceived = 203,
    kFromfriendGiftemail = 204,
    kFromfriendGiftexpire = 205,
    kFromfriendGiftversion = 206,
    kFromfriendFriendlist = 207,
    kFromfriendFriendupdate = 208,
    FROMFRIEND_NOT_SET = 0,
  };

  static inline const InnerScenesvr* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr*>(
               &_InnerScenesvr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InnerScenesvr& a, InnerScenesvr& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr";
  }
  protected:
  explicit InnerScenesvr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromUserFieldNumber = 1,
    kFromgateTestFieldNumber = 101,
    kFromgateServerregisterFieldNumber = 102,
    kFromgateCreateroleFieldNumber = 103,
    kFromgateClientmsgFieldNumber = 104,
    kFromgateClientdataFieldNumber = 105,
    kFromfriendTestFieldNumber = 201,
    kFromfriendReturnitemFieldNumber = 202,
    kFromfriendGiftreceivedFieldNumber = 203,
    kFromfriendGiftemailFieldNumber = 204,
    kFromfriendGiftexpireFieldNumber = 205,
    kFromfriendGiftversionFieldNumber = 206,
    kFromfriendFriendlistFieldNumber = 207,
    kFromfriendFriendupdateFieldNumber = 208,
  };
  // uint64 fromUser = 1;
  void clear_fromuser();
  uint64_t fromuser() const;
  void set_fromuser(uint64_t value);
  private:
  uint64_t _internal_fromuser() const;
  void _internal_set_fromuser(uint64_t value);
  public:

  // .inner.InnerScenesvr_Fromgate_Test fromgate_test = 101;
  bool has_fromgate_test() const;
  private:
  bool _internal_has_fromgate_test() const;
  public:
  void clear_fromgate_test();
  const ::inner::InnerScenesvr_Fromgate_Test& fromgate_test() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromgate_Test* release_fromgate_test();
  ::inner::InnerScenesvr_Fromgate_Test* mutable_fromgate_test();
  void set_allocated_fromgate_test(::inner::InnerScenesvr_Fromgate_Test* fromgate_test);
  private:
  const ::inner::InnerScenesvr_Fromgate_Test& _internal_fromgate_test() const;
  ::inner::InnerScenesvr_Fromgate_Test* _internal_mutable_fromgate_test();
  public:
  void unsafe_arena_set_allocated_fromgate_test(
      ::inner::InnerScenesvr_Fromgate_Test* fromgate_test);
  ::inner::InnerScenesvr_Fromgate_Test* unsafe_arena_release_fromgate_test();

  // .inner.InnerScenesvr_Fromgate_serverRegister fromgate_serverregister = 102;
  bool has_fromgate_serverregister() const;
  private:
  bool _internal_has_fromgate_serverregister() const;
  public:
  void clear_fromgate_serverregister();
  const ::inner::InnerScenesvr_Fromgate_serverRegister& fromgate_serverregister() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromgate_serverRegister* release_fromgate_serverregister();
  ::inner::InnerScenesvr_Fromgate_serverRegister* mutable_fromgate_serverregister();
  void set_allocated_fromgate_serverregister(::inner::InnerScenesvr_Fromgate_serverRegister* fromgate_serverregister);
  private:
  const ::inner::InnerScenesvr_Fromgate_serverRegister& _internal_fromgate_serverregister() const;
  ::inner::InnerScenesvr_Fromgate_serverRegister* _internal_mutable_fromgate_serverregister();
  public:
  void unsafe_arena_set_allocated_fromgate_serverregister(
      ::inner::InnerScenesvr_Fromgate_serverRegister* fromgate_serverregister);
  ::inner::InnerScenesvr_Fromgate_serverRegister* unsafe_arena_release_fromgate_serverregister();

  // .inner.InnerScenesvr_Fromgate_createRole fromgate_createrole = 103;
  bool has_fromgate_createrole() const;
  private:
  bool _internal_has_fromgate_createrole() const;
  public:
  void clear_fromgate_createrole();
  const ::inner::InnerScenesvr_Fromgate_createRole& fromgate_createrole() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromgate_createRole* release_fromgate_createrole();
  ::inner::InnerScenesvr_Fromgate_createRole* mutable_fromgate_createrole();
  void set_allocated_fromgate_createrole(::inner::InnerScenesvr_Fromgate_createRole* fromgate_createrole);
  private:
  const ::inner::InnerScenesvr_Fromgate_createRole& _internal_fromgate_createrole() const;
  ::inner::InnerScenesvr_Fromgate_createRole* _internal_mutable_fromgate_createrole();
  public:
  void unsafe_arena_set_allocated_fromgate_createrole(
      ::inner::InnerScenesvr_Fromgate_createRole* fromgate_createrole);
  ::inner::InnerScenesvr_Fromgate_createRole* unsafe_arena_release_fromgate_createrole();

  // .inner.InnerScenesvr_Fromgate_ClientMsg fromgate_clientmsg = 104;
  bool has_fromgate_clientmsg() const;
  private:
  bool _internal_has_fromgate_clientmsg() const;
  public:
  void clear_fromgate_clientmsg();
  const ::inner::InnerScenesvr_Fromgate_ClientMsg& fromgate_clientmsg() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromgate_ClientMsg* release_fromgate_clientmsg();
  ::inner::InnerScenesvr_Fromgate_ClientMsg* mutable_fromgate_clientmsg();
  void set_allocated_fromgate_clientmsg(::inner::InnerScenesvr_Fromgate_ClientMsg* fromgate_clientmsg);
  private:
  const ::inner::InnerScenesvr_Fromgate_ClientMsg& _internal_fromgate_clientmsg() const;
  ::inner::InnerScenesvr_Fromgate_ClientMsg* _internal_mutable_fromgate_clientmsg();
  public:
  void unsafe_arena_set_allocated_fromgate_clientmsg(
      ::inner::InnerScenesvr_Fromgate_ClientMsg* fromgate_clientmsg);
  ::inner::InnerScenesvr_Fromgate_ClientMsg* unsafe_arena_release_fromgate_clientmsg();

  // .inner.InnerScenesvr_Fromgate_ClientData fromgate_clientdata = 105;
  bool has_fromgate_clientdata() const;
  private:
  bool _internal_has_fromgate_clientdata() const;
  public:
  void clear_fromgate_clientdata();
  const ::inner::InnerScenesvr_Fromgate_ClientData& fromgate_clientdata() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromgate_ClientData* release_fromgate_clientdata();
  ::inner::InnerScenesvr_Fromgate_ClientData* mutable_fromgate_clientdata();
  void set_allocated_fromgate_clientdata(::inner::InnerScenesvr_Fromgate_ClientData* fromgate_clientdata);
  private:
  const ::inner::InnerScenesvr_Fromgate_ClientData& _internal_fromgate_clientdata() const;
  ::inner::InnerScenesvr_Fromgate_ClientData* _internal_mutable_fromgate_clientdata();
  public:
  void unsafe_arena_set_allocated_fromgate_clientdata(
      ::inner::InnerScenesvr_Fromgate_ClientData* fromgate_clientdata);
  ::inner::InnerScenesvr_Fromgate_ClientData* unsafe_arena_release_fromgate_clientdata();

  // .inner.InnerScenesvr_Fromfriend_Test fromfriend_test = 201;
  bool has_fromfriend_test() const;
  private:
  bool _internal_has_fromfriend_test() const;
  public:
  void clear_fromfriend_test();
  const ::inner::InnerScenesvr_Fromfriend_Test& fromfriend_test() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_Test* release_fromfriend_test();
  ::inner::InnerScenesvr_Fromfriend_Test* mutable_fromfriend_test();
  void set_allocated_fromfriend_test(::inner::InnerScenesvr_Fromfriend_Test* fromfriend_test);
  private:
  const ::inner::InnerScenesvr_Fromfriend_Test& _internal_fromfriend_test() const;
  ::inner::InnerScenesvr_Fromfriend_Test* _internal_mutable_fromfriend_test();
  public:
  void unsafe_arena_set_allocated_fromfriend_test(
      ::inner::InnerScenesvr_Fromfriend_Test* fromfriend_test);
  ::inner::InnerScenesvr_Fromfriend_Test* unsafe_arena_release_fromfriend_test();

  // .inner.InnerScenesvr_Fromfriend_ReturnItem fromfriend_returnitem = 202;
  bool has_fromfriend_returnitem() const;
  private:
  bool _internal_has_fromfriend_returnitem() const;
  public:
  void clear_fromfriend_returnitem();
  const ::inner::InnerScenesvr_Fromfriend_ReturnItem& fromfriend_returnitem() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_ReturnItem* release_fromfriend_returnitem();
  ::inner::InnerScenesvr_Fromfriend_ReturnItem* mutable_fromfriend_returnitem();
  void set_allocated_fromfriend_returnitem(::inner::InnerScenesvr_Fromfriend_ReturnItem* fromfriend_returnitem);
  private:
  const ::inner::InnerScenesvr_Fromfriend_ReturnItem& _internal_fromfriend_returnitem() const;
  ::inner::InnerScenesvr_Fromfriend_ReturnItem* _internal_mutable_fromfriend_returnitem();
  public:
  void unsafe_arena_set_allocated_fromfriend_returnitem(
      ::inner::InnerScenesvr_Fromfriend_ReturnItem* fromfriend_returnitem);
  ::inner::InnerScenesvr_Fromfriend_ReturnItem* unsafe_arena_release_fromfriend_returnitem();

  // .inner.InnerScenesvr_Fromfriend_GiftReceived fromfriend_giftreceived = 203;
  bool has_fromfriend_giftreceived() const;
  private:
  bool _internal_has_fromfriend_giftreceived() const;
  public:
  void clear_fromfriend_giftreceived();
  const ::inner::InnerScenesvr_Fromfriend_GiftReceived& fromfriend_giftreceived() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_GiftReceived* release_fromfriend_giftreceived();
  ::inner::InnerScenesvr_Fromfriend_GiftReceived* mutable_fromfriend_giftreceived();
  void set_allocated_fromfriend_giftreceived(::inner::InnerScenesvr_Fromfriend_GiftReceived* fromfriend_giftreceived);
  private:
  const ::inner::InnerScenesvr_Fromfriend_GiftReceived& _internal_fromfriend_giftreceived() const;
  ::inner::InnerScenesvr_Fromfriend_GiftReceived* _internal_mutable_fromfriend_giftreceived();
  public:
  void unsafe_arena_set_allocated_fromfriend_giftreceived(
      ::inner::InnerScenesvr_Fromfriend_GiftReceived* fromfriend_giftreceived);
  ::inner::InnerScenesvr_Fromfriend_GiftReceived* unsafe_arena_release_fromfriend_giftreceived();

  // .inner.InnerScenesvr_Fromfriend_GiftEmail fromfriend_giftemail = 204;
  bool has_fromfriend_giftemail() const;
  private:
  bool _internal_has_fromfriend_giftemail() const;
  public:
  void clear_fromfriend_giftemail();
  const ::inner::InnerScenesvr_Fromfriend_GiftEmail& fromfriend_giftemail() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_GiftEmail* release_fromfriend_giftemail();
  ::inner::InnerScenesvr_Fromfriend_GiftEmail* mutable_fromfriend_giftemail();
  void set_allocated_fromfriend_giftemail(::inner::InnerScenesvr_Fromfriend_GiftEmail* fromfriend_giftemail);
  private:
  const ::inner::InnerScenesvr_Fromfriend_GiftEmail& _internal_fromfriend_giftemail() const;
  ::inner::InnerScenesvr_Fromfriend_GiftEmail* _internal_mutable_fromfriend_giftemail();
  public:
  void unsafe_arena_set_allocated_fromfriend_giftemail(
      ::inner::InnerScenesvr_Fromfriend_GiftEmail* fromfriend_giftemail);
  ::inner::InnerScenesvr_Fromfriend_GiftEmail* unsafe_arena_release_fromfriend_giftemail();

  // .inner.InnerScenesvr_Fromfriend_GiftExpire fromfriend_giftexpire = 205;
  bool has_fromfriend_giftexpire() const;
  private:
  bool _internal_has_fromfriend_giftexpire() const;
  public:
  void clear_fromfriend_giftexpire();
  const ::inner::InnerScenesvr_Fromfriend_GiftExpire& fromfriend_giftexpire() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_GiftExpire* release_fromfriend_giftexpire();
  ::inner::InnerScenesvr_Fromfriend_GiftExpire* mutable_fromfriend_giftexpire();
  void set_allocated_fromfriend_giftexpire(::inner::InnerScenesvr_Fromfriend_GiftExpire* fromfriend_giftexpire);
  private:
  const ::inner::InnerScenesvr_Fromfriend_GiftExpire& _internal_fromfriend_giftexpire() const;
  ::inner::InnerScenesvr_Fromfriend_GiftExpire* _internal_mutable_fromfriend_giftexpire();
  public:
  void unsafe_arena_set_allocated_fromfriend_giftexpire(
      ::inner::InnerScenesvr_Fromfriend_GiftExpire* fromfriend_giftexpire);
  ::inner::InnerScenesvr_Fromfriend_GiftExpire* unsafe_arena_release_fromfriend_giftexpire();

  // .inner.InnerScenesvr_Fromfriend_GiftVersion fromfriend_giftversion = 206;
  bool has_fromfriend_giftversion() const;
  private:
  bool _internal_has_fromfriend_giftversion() const;
  public:
  void clear_fromfriend_giftversion();
  const ::inner::InnerScenesvr_Fromfriend_GiftVersion& fromfriend_giftversion() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_GiftVersion* release_fromfriend_giftversion();
  ::inner::InnerScenesvr_Fromfriend_GiftVersion* mutable_fromfriend_giftversion();
  void set_allocated_fromfriend_giftversion(::inner::InnerScenesvr_Fromfriend_GiftVersion* fromfriend_giftversion);
  private:
  const ::inner::InnerScenesvr_Fromfriend_GiftVersion& _internal_fromfriend_giftversion() const;
  ::inner::InnerScenesvr_Fromfriend_GiftVersion* _internal_mutable_fromfriend_giftversion();
  public:
  void unsafe_arena_set_allocated_fromfriend_giftversion(
      ::inner::InnerScenesvr_Fromfriend_GiftVersion* fromfriend_giftversion);
  ::inner::InnerScenesvr_Fromfriend_GiftVersion* unsafe_arena_release_fromfriend_giftversion();

  // .inner.InnerScenesvr_Fromfriend_FriendList fromfriend_friendlist = 207;
  bool has_fromfriend_friendlist() const;
  private:
  bool _internal_has_fromfriend_friendlist() const;
  public:
  void clear_fromfriend_friendlist();
  const ::inner::InnerScenesvr_Fromfriend_FriendList& fromfriend_friendlist() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_FriendList* release_fromfriend_friendlist();
  ::inner::InnerScenesvr_Fromfriend_FriendList* mutable_fromfriend_friendlist();
  void set_allocated_fromfriend_friendlist(::inner::InnerScenesvr_Fromfriend_FriendList* fromfriend_friendlist);
  private:
  const ::inner::InnerScenesvr_Fromfriend_FriendList& _internal_fromfriend_friendlist() const;
  ::inner::InnerScenesvr_Fromfriend_FriendList* _internal_mutable_fromfriend_friendlist();
  public:
  void unsafe_arena_set_allocated_fromfriend_friendlist(
      ::inner::InnerScenesvr_Fromfriend_FriendList* fromfriend_friendlist);
  ::inner::InnerScenesvr_Fromfriend_FriendList* unsafe_arena_release_fromfriend_friendlist();

  // .inner.InnerScenesvr_Fromfriend_FriendUpdate fromfriend_friendupdate = 208;
  bool has_fromfriend_friendupdate() const;
  private:
  bool _internal_has_fromfriend_friendupdate() const;
  public:
  void clear_fromfriend_friendupdate();
  const ::inner::InnerScenesvr_Fromfriend_FriendUpdate& fromfriend_friendupdate() const;
  PROTOBUF_NODISCARD ::inner::InnerScenesvr_Fromfriend_FriendUpdate* release_fromfriend_friendupdate();
  ::inner::InnerScenesvr_Fromfriend_FriendUpdate* mutable_fromfriend_friendupdate();
  void set_allocated_fromfriend_friendupdate(::inner::InnerScenesvr_Fromfriend_FriendUpdate* fromfriend_friendupdate);
  private:
  const ::inner::InnerScenesvr_Fromfriend_FriendUpdate& _internal_fromfriend_friendupdate() const;
  ::inner::InnerScenesvr_Fromfriend_FriendUpdate* _internal_mutable_fromfriend_friendupdate();
  public:
  void unsafe_arena_set_allocated_fromfriend_friendupdate(
      ::inner::InnerScenesvr_Fromfriend_FriendUpdate* fromfriend_friendupdate);
  ::inner::InnerScenesvr_Fromfriend_FriendUpdate* unsafe_arena_release_fromfriend_friendupdate();

  void clear_Fromgate();
  FromgateCase Fromgate_case() const;
  void clear_Fromfriend();
  FromfriendCase Fromfriend_case() const;
  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr)
 private:
  class _Internal;
  void set_has_fromgate_test();
  void set_has_fromgate_serverregister();
  void set_has_fromgate_createrole();
  void set_has_fromgate_clientmsg();
  void set_has_fromgate_clientdata();
  void set_has_fromfriend_test();
  void set_has_fromfriend_returnitem();
  void set_has_fromfriend_giftreceived();
  void set_has_fromfriend_giftemail();
  void set_has_fromfriend_giftexpire();
  void set_has_fromfriend_giftversion();
  void set_has_fromfriend_friendlist();
  void set_has_fromfriend_friendupdate();

  inline bool has_Fromgate() const;
  inline void clear_has_Fromgate();

  inline bool has_Fromfriend() const;
  inline void clear_has_Fromfriend();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t fromuser_;
  union FromgateUnion {
    constexpr FromgateUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::inner::InnerScenesvr_Fromgate_Test* fromgate_test_;
    ::inner::InnerScenesvr_Fromgate_serverRegister* fromgate_serverregister_;
    ::inner::InnerScenesvr_Fromgate_createRole* fromgate_createrole_;
    ::inner::InnerScenesvr_Fromgate_ClientMsg* fromgate_clientmsg_;
    ::inner::InnerScenesvr_Fromgate_ClientData* fromgate_clientdata_;
  } Fromgate_;
  union FromfriendUnion {
    constexpr FromfriendUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::inner::InnerScenesvr_Fromfriend_Test* fromfriend_test_;
    ::inner::InnerScenesvr_Fromfriend_ReturnItem* fromfriend_returnitem_;
    ::inner::InnerScenesvr_Fromfriend_GiftReceived* fromfriend_giftreceived_;
    ::inner::InnerScenesvr_Fromfriend_GiftEmail* fromfriend_giftemail_;
    ::inner::InnerScenesvr_Fromfriend_GiftExpire* fromfriend_giftexpire_;
    ::inner::InnerScenesvr_Fromfriend_GiftVersion* fromfriend_giftversion_;
    ::inner::InnerScenesvr_Fromfriend_FriendList* fromfriend_friendlist_;
    ::inner::InnerScenesvr_Fromfriend_FriendUpdate* fromfriend_friendupdate_;
  } Fromfriend_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[2];

  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromgate_Test final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromgate_Test) */ {
 public:
  inline InnerScenesvr_Fromgate_Test() : InnerScenesvr_Fromgate_Test(nullptr) {}
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromgate_Test(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromgate_Test(const InnerScenesvr_Fromgate_Test& from);
  InnerScenesvr_Fromgate_Test(InnerScenesvr_Fromgate_Test&& from) noexcept
    : InnerScenesvr_Fromgate_Test() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromgate_Test& operator=(const InnerScenesvr_Fromgate_Test& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromgate_Test& operator=(InnerScenesvr_Fromgate_Test&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromgate_Test& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromgate_Test* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromgate_Test*>(
               &_InnerScenesvr_Fromgate_Test_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InnerScenesvr_Fromgate_Test& a, InnerScenesvr_Fromgate_Test& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromgate_Test* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromgate_Test* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromgate_Test* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromgate_Test>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InnerScenesvr_Fromgate_Test& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromgate_Test& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromgate_Test";
  }
  protected:
  explicit InnerScenesvr_Fromgate_Test(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromgate_Test)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromgate_serverRegister final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromgate_serverRegister) */ {
 public:
  inline InnerScenesvr_Fromgate_serverRegister() : InnerScenesvr_Fromgate_serverRegister(nullptr) {}
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromgate_serverRegister(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromgate_serverRegister(const InnerScenesvr_Fromgate_serverRegister& from);
  InnerScenesvr_Fromgate_serverRegister(InnerScenesvr_Fromgate_serverRegister&& from) noexcept
    : InnerScenesvr_Fromgate_serverRegister() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromgate_serverRegister& operator=(const InnerScenesvr_Fromgate_serverRegister& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromgate_serverRegister& operator=(InnerScenesvr_Fromgate_serverRegister&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromgate_serverRegister& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromgate_serverRegister* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromgate_serverRegister*>(
               &_InnerScenesvr_Fromgate_serverRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(InnerScenesvr_Fromgate_serverRegister& a, InnerScenesvr_Fromgate_serverRegister& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromgate_serverRegister* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromgate_serverRegister* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromgate_serverRegister* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromgate_serverRegister>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InnerScenesvr_Fromgate_serverRegister& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromgate_serverRegister& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromgate_serverRegister";
  }
  protected:
  explicit InnerScenesvr_Fromgate_serverRegister(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromgate_serverRegister)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromgate_createRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromgate_createRole) */ {
 public:
  inline InnerScenesvr_Fromgate_createRole() : InnerScenesvr_Fromgate_createRole(nullptr) {}
  ~InnerScenesvr_Fromgate_createRole() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromgate_createRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromgate_createRole(const InnerScenesvr_Fromgate_createRole& from);
  InnerScenesvr_Fromgate_createRole(InnerScenesvr_Fromgate_createRole&& from) noexcept
    : InnerScenesvr_Fromgate_createRole() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromgate_createRole& operator=(const InnerScenesvr_Fromgate_createRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromgate_createRole& operator=(InnerScenesvr_Fromgate_createRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromgate_createRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromgate_createRole* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromgate_createRole*>(
               &_InnerScenesvr_Fromgate_createRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(InnerScenesvr_Fromgate_createRole& a, InnerScenesvr_Fromgate_createRole& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromgate_createRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromgate_createRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromgate_createRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromgate_createRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromgate_createRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromgate_createRole& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromgate_createRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromgate_createRole";
  }
  protected:
  explicit InnerScenesvr_Fromgate_createRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIdFieldNumber = 1,
  };
  // uint64 roleId = 1;
  void clear_roleid();
  uint64_t roleid() const;
  void set_roleid(uint64_t value);
  private:
  uint64_t _internal_roleid() const;
  void _internal_set_roleid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromgate_createRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t roleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromgate_ClientMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromgate_ClientMsg) */ {
 public:
  inline InnerScenesvr_Fromgate_ClientMsg() : InnerScenesvr_Fromgate_ClientMsg(nullptr) {}
  ~InnerScenesvr_Fromgate_ClientMsg() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromgate_ClientMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromgate_ClientMsg(const InnerScenesvr_Fromgate_ClientMsg& from);
  InnerScenesvr_Fromgate_ClientMsg(InnerScenesvr_Fromgate_ClientMsg&& from) noexcept
    : InnerScenesvr_Fromgate_ClientMsg() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromgate_ClientMsg& operator=(const InnerScenesvr_Fromgate_ClientMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromgate_ClientMsg& operator=(InnerScenesvr_Fromgate_ClientMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromgate_ClientMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromgate_ClientMsg* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromgate_ClientMsg*>(
               &_InnerScenesvr_Fromgate_ClientMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(InnerScenesvr_Fromgate_ClientMsg& a, InnerScenesvr_Fromgate_ClientMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromgate_ClientMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromgate_ClientMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromgate_ClientMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromgate_ClientMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromgate_ClientMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromgate_ClientMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromgate_ClientMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromgate_ClientMsg";
  }
  protected:
  explicit InnerScenesvr_Fromgate_ClientMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3,
    kModuleIdFieldNumber = 1,
    kCmdIdFieldNumber = 2,
  };
  // bytes data = 3;
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // uint32 moduleId = 1;
  void clear_moduleid();
  uint32_t moduleid() const;
  void set_moduleid(uint32_t value);
  private:
  uint32_t _internal_moduleid() const;
  void _internal_set_moduleid(uint32_t value);
  public:

  // uint32 cmdId = 2;
  void clear_cmdid();
  uint32_t cmdid() const;
  void set_cmdid(uint32_t value);
  private:
  uint32_t _internal_cmdid() const;
  void _internal_set_cmdid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromgate_ClientMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  uint32_t moduleid_;
  uint32_t cmdid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromgate_ClientData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromgate_ClientData) */ {
 public:
  inline InnerScenesvr_Fromgate_ClientData() : InnerScenesvr_Fromgate_ClientData(nullptr) {}
  ~InnerScenesvr_Fromgate_ClientData() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromgate_ClientData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromgate_ClientData(const InnerScenesvr_Fromgate_ClientData& from);
  InnerScenesvr_Fromgate_ClientData(InnerScenesvr_Fromgate_ClientData&& from) noexcept
    : InnerScenesvr_Fromgate_ClientData() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromgate_ClientData& operator=(const InnerScenesvr_Fromgate_ClientData& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromgate_ClientData& operator=(InnerScenesvr_Fromgate_ClientData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromgate_ClientData& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromgate_ClientData* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromgate_ClientData*>(
               &_InnerScenesvr_Fromgate_ClientData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InnerScenesvr_Fromgate_ClientData& a, InnerScenesvr_Fromgate_ClientData& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromgate_ClientData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromgate_ClientData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromgate_ClientData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromgate_ClientData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromgate_ClientData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromgate_ClientData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromgate_ClientData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromgate_ClientData";
  }
  protected:
  explicit InnerScenesvr_Fromgate_ClientData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromgate_ClientData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_Test final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_Test) */ {
 public:
  inline InnerScenesvr_Fromfriend_Test() : InnerScenesvr_Fromfriend_Test(nullptr) {}
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_Test(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_Test(const InnerScenesvr_Fromfriend_Test& from);
  InnerScenesvr_Fromfriend_Test(InnerScenesvr_Fromfriend_Test&& from) noexcept
    : InnerScenesvr_Fromfriend_Test() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_Test& operator=(const InnerScenesvr_Fromfriend_Test& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_Test& operator=(InnerScenesvr_Fromfriend_Test&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_Test& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_Test* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_Test*>(
               &_InnerScenesvr_Fromfriend_Test_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InnerScenesvr_Fromfriend_Test& a, InnerScenesvr_Fromfriend_Test& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_Test* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_Test* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_Test* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_Test>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InnerScenesvr_Fromfriend_Test& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_Test& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_Test";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_Test(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_Test)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_ReturnItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_ReturnItem) */ {
 public:
  inline InnerScenesvr_Fromfriend_ReturnItem() : InnerScenesvr_Fromfriend_ReturnItem(nullptr) {}
  ~InnerScenesvr_Fromfriend_ReturnItem() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_ReturnItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_ReturnItem(const InnerScenesvr_Fromfriend_ReturnItem& from);
  InnerScenesvr_Fromfriend_ReturnItem(InnerScenesvr_Fromfriend_ReturnItem&& from) noexcept
    : InnerScenesvr_Fromfriend_ReturnItem() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_ReturnItem& operator=(const InnerScenesvr_Fromfriend_ReturnItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_ReturnItem& operator=(InnerScenesvr_Fromfriend_ReturnItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_ReturnItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_ReturnItem* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_ReturnItem*>(
               &_InnerScenesvr_Fromfriend_ReturnItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(InnerScenesvr_Fromfriend_ReturnItem& a, InnerScenesvr_Fromfriend_ReturnItem& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_ReturnItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_ReturnItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_ReturnItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_ReturnItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_ReturnItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_ReturnItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_ReturnItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_ReturnItem";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_ReturnItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlToUserFieldNumber = 1,
    kUiItemIdFieldNumber = 2,
    kUiCountFieldNumber = 3,
    kBBindFieldNumber = 4,
  };
  // uint64 llToUser = 1;
  void clear_lltouser();
  uint64_t lltouser() const;
  void set_lltouser(uint64_t value);
  private:
  uint64_t _internal_lltouser() const;
  void _internal_set_lltouser(uint64_t value);
  public:

  // uint32 uiItemId = 2;
  void clear_uiitemid();
  uint32_t uiitemid() const;
  void set_uiitemid(uint32_t value);
  private:
  uint32_t _internal_uiitemid() const;
  void _internal_set_uiitemid(uint32_t value);
  public:

  // uint32 uiCount = 3;
  void clear_uicount();
  uint32_t uicount() const;
  void set_uicount(uint32_t value);
  private:
  uint32_t _internal_uicount() const;
  void _internal_set_uicount(uint32_t value);
  public:

  // bool bBind = 4;
  void clear_bbind();
  bool bbind() const;
  void set_bbind(bool value);
  private:
  bool _internal_bbind() const;
  void _internal_set_bbind(bool value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_ReturnItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t lltouser_;
  uint32_t uiitemid_;
  uint32_t uicount_;
  bool bbind_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_GiftReceived final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_GiftReceived) */ {
 public:
  inline InnerScenesvr_Fromfriend_GiftReceived() : InnerScenesvr_Fromfriend_GiftReceived(nullptr) {}
  ~InnerScenesvr_Fromfriend_GiftReceived() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftReceived(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_GiftReceived(const InnerScenesvr_Fromfriend_GiftReceived& from);
  InnerScenesvr_Fromfriend_GiftReceived(InnerScenesvr_Fromfriend_GiftReceived&& from) noexcept
    : InnerScenesvr_Fromfriend_GiftReceived() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_GiftReceived& operator=(const InnerScenesvr_Fromfriend_GiftReceived& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_GiftReceived& operator=(InnerScenesvr_Fromfriend_GiftReceived&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_GiftReceived& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_GiftReceived* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_GiftReceived*>(
               &_InnerScenesvr_Fromfriend_GiftReceived_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(InnerScenesvr_Fromfriend_GiftReceived& a, InnerScenesvr_Fromfriend_GiftReceived& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_GiftReceived* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_GiftReceived* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_GiftReceived* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_GiftReceived>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_GiftReceived& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_GiftReceived& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_GiftReceived* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_GiftReceived";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_GiftReceived(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecToRoleListFieldNumber = 1,
    kLlGiftUidFieldNumber = 2,
    kLlRecverFieldNumber = 3,
    kUiItemIdFieldNumber = 4,
    kUiCountFieldNumber = 5,
  };
  // repeated uint64 vecToRoleList = 1;
  int vectorolelist_size() const;
  private:
  int _internal_vectorolelist_size() const;
  public:
  void clear_vectorolelist();
  private:
  uint64_t _internal_vectorolelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_vectorolelist() const;
  void _internal_add_vectorolelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_vectorolelist();
  public:
  uint64_t vectorolelist(int index) const;
  void set_vectorolelist(int index, uint64_t value);
  void add_vectorolelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      vectorolelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_vectorolelist();

  // uint64 llGiftUid = 2;
  void clear_llgiftuid();
  uint64_t llgiftuid() const;
  void set_llgiftuid(uint64_t value);
  private:
  uint64_t _internal_llgiftuid() const;
  void _internal_set_llgiftuid(uint64_t value);
  public:

  // uint64 llRecver = 3;
  void clear_llrecver();
  uint64_t llrecver() const;
  void set_llrecver(uint64_t value);
  private:
  uint64_t _internal_llrecver() const;
  void _internal_set_llrecver(uint64_t value);
  public:

  // uint32 uiItemId = 4;
  void clear_uiitemid();
  uint32_t uiitemid() const;
  void set_uiitemid(uint32_t value);
  private:
  uint32_t _internal_uiitemid() const;
  void _internal_set_uiitemid(uint32_t value);
  public:

  // uint32 uiCount = 5;
  void clear_uicount();
  uint32_t uicount() const;
  void set_uicount(uint32_t value);
  private:
  uint32_t _internal_uicount() const;
  void _internal_set_uicount(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_GiftReceived)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > vectorolelist_;
  mutable std::atomic<int> _vectorolelist_cached_byte_size_;
  uint64_t llgiftuid_;
  uint64_t llrecver_;
  uint32_t uiitemid_;
  uint32_t uicount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_GiftEmail final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_GiftEmail) */ {
 public:
  inline InnerScenesvr_Fromfriend_GiftEmail() : InnerScenesvr_Fromfriend_GiftEmail(nullptr) {}
  ~InnerScenesvr_Fromfriend_GiftEmail() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftEmail(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_GiftEmail(const InnerScenesvr_Fromfriend_GiftEmail& from);
  InnerScenesvr_Fromfriend_GiftEmail(InnerScenesvr_Fromfriend_GiftEmail&& from) noexcept
    : InnerScenesvr_Fromfriend_GiftEmail() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_GiftEmail& operator=(const InnerScenesvr_Fromfriend_GiftEmail& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_GiftEmail& operator=(InnerScenesvr_Fromfriend_GiftEmail&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_GiftEmail& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_GiftEmail* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_GiftEmail*>(
               &_InnerScenesvr_Fromfriend_GiftEmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(InnerScenesvr_Fromfriend_GiftEmail& a, InnerScenesvr_Fromfriend_GiftEmail& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_GiftEmail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_GiftEmail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_GiftEmail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_GiftEmail>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_GiftEmail& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_GiftEmail& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_GiftEmail* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_GiftEmail";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_GiftEmail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlToUserFieldNumber = 1,
    kLlSenderFieldNumber = 2,
    kUiItemIdFieldNumber = 3,
    kUiCountFieldNumber = 4,
    kLlGiftUdFieldNumber = 5,
  };
  // uint64 llToUser = 1;
  void clear_lltouser();
  uint64_t lltouser() const;
  void set_lltouser(uint64_t value);
  private:
  uint64_t _internal_lltouser() const;
  void _internal_set_lltouser(uint64_t value);
  public:

  // uint64 llSender = 2;
  void clear_llsender();
  uint64_t llsender() const;
  void set_llsender(uint64_t value);
  private:
  uint64_t _internal_llsender() const;
  void _internal_set_llsender(uint64_t value);
  public:

  // uint32 uiItemId = 3;
  void clear_uiitemid();
  uint32_t uiitemid() const;
  void set_uiitemid(uint32_t value);
  private:
  uint32_t _internal_uiitemid() const;
  void _internal_set_uiitemid(uint32_t value);
  public:

  // uint32 uiCount = 4;
  void clear_uicount();
  uint32_t uicount() const;
  void set_uicount(uint32_t value);
  private:
  uint32_t _internal_uicount() const;
  void _internal_set_uicount(uint32_t value);
  public:

  // uint64 llGiftUd = 5;
  void clear_llgiftud();
  uint64_t llgiftud() const;
  void set_llgiftud(uint64_t value);
  private:
  uint64_t _internal_llgiftud() const;
  void _internal_set_llgiftud(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_GiftEmail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t lltouser_;
  uint64_t llsender_;
  uint32_t uiitemid_;
  uint32_t uicount_;
  uint64_t llgiftud_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_GiftExpire final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_GiftExpire) */ {
 public:
  inline InnerScenesvr_Fromfriend_GiftExpire() : InnerScenesvr_Fromfriend_GiftExpire(nullptr) {}
  ~InnerScenesvr_Fromfriend_GiftExpire() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftExpire(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_GiftExpire(const InnerScenesvr_Fromfriend_GiftExpire& from);
  InnerScenesvr_Fromfriend_GiftExpire(InnerScenesvr_Fromfriend_GiftExpire&& from) noexcept
    : InnerScenesvr_Fromfriend_GiftExpire() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_GiftExpire& operator=(const InnerScenesvr_Fromfriend_GiftExpire& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_GiftExpire& operator=(InnerScenesvr_Fromfriend_GiftExpire&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_GiftExpire& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_GiftExpire* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_GiftExpire*>(
               &_InnerScenesvr_Fromfriend_GiftExpire_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(InnerScenesvr_Fromfriend_GiftExpire& a, InnerScenesvr_Fromfriend_GiftExpire& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_GiftExpire* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_GiftExpire* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_GiftExpire* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_GiftExpire>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_GiftExpire& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_GiftExpire& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_GiftExpire* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_GiftExpire";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_GiftExpire(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlToUserFieldNumber = 1,
    kLlRecverFieldNumber = 2,
    kUiItemIdFieldNumber = 3,
    kUiCountFieldNumber = 4,
    kLlGiftUidFieldNumber = 5,
  };
  // uint64 llToUser = 1;
  void clear_lltouser();
  uint64_t lltouser() const;
  void set_lltouser(uint64_t value);
  private:
  uint64_t _internal_lltouser() const;
  void _internal_set_lltouser(uint64_t value);
  public:

  // uint64 llRecver = 2;
  void clear_llrecver();
  uint64_t llrecver() const;
  void set_llrecver(uint64_t value);
  private:
  uint64_t _internal_llrecver() const;
  void _internal_set_llrecver(uint64_t value);
  public:

  // uint32 uiItemId = 3;
  void clear_uiitemid();
  uint32_t uiitemid() const;
  void set_uiitemid(uint32_t value);
  private:
  uint32_t _internal_uiitemid() const;
  void _internal_set_uiitemid(uint32_t value);
  public:

  // uint32 uiCount = 4;
  void clear_uicount();
  uint32_t uicount() const;
  void set_uicount(uint32_t value);
  private:
  uint32_t _internal_uicount() const;
  void _internal_set_uicount(uint32_t value);
  public:

  // uint64 llGiftUid = 5;
  void clear_llgiftuid();
  uint64_t llgiftuid() const;
  void set_llgiftuid(uint64_t value);
  private:
  uint64_t _internal_llgiftuid() const;
  void _internal_set_llgiftuid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_GiftExpire)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t lltouser_;
  uint64_t llrecver_;
  uint32_t uiitemid_;
  uint32_t uicount_;
  uint64_t llgiftuid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_GiftVersion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_GiftVersion) */ {
 public:
  inline InnerScenesvr_Fromfriend_GiftVersion() : InnerScenesvr_Fromfriend_GiftVersion(nullptr) {}
  ~InnerScenesvr_Fromfriend_GiftVersion() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_GiftVersion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_GiftVersion(const InnerScenesvr_Fromfriend_GiftVersion& from);
  InnerScenesvr_Fromfriend_GiftVersion(InnerScenesvr_Fromfriend_GiftVersion&& from) noexcept
    : InnerScenesvr_Fromfriend_GiftVersion() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_GiftVersion& operator=(const InnerScenesvr_Fromfriend_GiftVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_GiftVersion& operator=(InnerScenesvr_Fromfriend_GiftVersion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_GiftVersion& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_GiftVersion* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_GiftVersion*>(
               &_InnerScenesvr_Fromfriend_GiftVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(InnerScenesvr_Fromfriend_GiftVersion& a, InnerScenesvr_Fromfriend_GiftVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_GiftVersion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_GiftVersion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_GiftVersion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_GiftVersion>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_GiftVersion& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_GiftVersion& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_GiftVersion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_GiftVersion";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_GiftVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlToUserFieldNumber = 1,
    kUiVersionIdFieldNumber = 2,
  };
  // uint64 llToUser = 1;
  void clear_lltouser();
  uint64_t lltouser() const;
  void set_lltouser(uint64_t value);
  private:
  uint64_t _internal_lltouser() const;
  void _internal_set_lltouser(uint64_t value);
  public:

  // uint32 uiVersionId = 2;
  void clear_uiversionid();
  uint32_t uiversionid() const;
  void set_uiversionid(uint32_t value);
  private:
  uint32_t _internal_uiversionid() const;
  void _internal_set_uiversionid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_GiftVersion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t lltouser_;
  uint32_t uiversionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_FriendList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_FriendList) */ {
 public:
  inline InnerScenesvr_Fromfriend_FriendList() : InnerScenesvr_Fromfriend_FriendList(nullptr) {}
  ~InnerScenesvr_Fromfriend_FriendList() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_FriendList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_FriendList(const InnerScenesvr_Fromfriend_FriendList& from);
  InnerScenesvr_Fromfriend_FriendList(InnerScenesvr_Fromfriend_FriendList&& from) noexcept
    : InnerScenesvr_Fromfriend_FriendList() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_FriendList& operator=(const InnerScenesvr_Fromfriend_FriendList& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_FriendList& operator=(InnerScenesvr_Fromfriend_FriendList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_FriendList& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_FriendList* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_FriendList*>(
               &_InnerScenesvr_Fromfriend_FriendList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(InnerScenesvr_Fromfriend_FriendList& a, InnerScenesvr_Fromfriend_FriendList& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_FriendList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_FriendList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_FriendList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_FriendList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_FriendList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_FriendList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_FriendList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_FriendList";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_FriendList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecFriendListFieldNumber = 2,
    kLlToUserFieldNumber = 1,
  };
  // .inner.InnerFriendList vecFriendList = 2;
  bool has_vecfriendlist() const;
  private:
  bool _internal_has_vecfriendlist() const;
  public:
  void clear_vecfriendlist();
  const ::inner::InnerFriendList& vecfriendlist() const;
  PROTOBUF_NODISCARD ::inner::InnerFriendList* release_vecfriendlist();
  ::inner::InnerFriendList* mutable_vecfriendlist();
  void set_allocated_vecfriendlist(::inner::InnerFriendList* vecfriendlist);
  private:
  const ::inner::InnerFriendList& _internal_vecfriendlist() const;
  ::inner::InnerFriendList* _internal_mutable_vecfriendlist();
  public:
  void unsafe_arena_set_allocated_vecfriendlist(
      ::inner::InnerFriendList* vecfriendlist);
  ::inner::InnerFriendList* unsafe_arena_release_vecfriendlist();

  // uint64 llToUser = 1;
  void clear_lltouser();
  uint64_t lltouser() const;
  void set_lltouser(uint64_t value);
  private:
  uint64_t _internal_lltouser() const;
  void _internal_set_lltouser(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_FriendList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::inner::InnerFriendList* vecfriendlist_;
  uint64_t lltouser_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// -------------------------------------------------------------------

class InnerScenesvr_Fromfriend_FriendUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:inner.InnerScenesvr_Fromfriend_FriendUpdate) */ {
 public:
  inline InnerScenesvr_Fromfriend_FriendUpdate() : InnerScenesvr_Fromfriend_FriendUpdate(nullptr) {}
  ~InnerScenesvr_Fromfriend_FriendUpdate() override;
  explicit PROTOBUF_CONSTEXPR InnerScenesvr_Fromfriend_FriendUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerScenesvr_Fromfriend_FriendUpdate(const InnerScenesvr_Fromfriend_FriendUpdate& from);
  InnerScenesvr_Fromfriend_FriendUpdate(InnerScenesvr_Fromfriend_FriendUpdate&& from) noexcept
    : InnerScenesvr_Fromfriend_FriendUpdate() {
    *this = ::std::move(from);
  }

  inline InnerScenesvr_Fromfriend_FriendUpdate& operator=(const InnerScenesvr_Fromfriend_FriendUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerScenesvr_Fromfriend_FriendUpdate& operator=(InnerScenesvr_Fromfriend_FriendUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InnerScenesvr_Fromfriend_FriendUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const InnerScenesvr_Fromfriend_FriendUpdate* internal_default_instance() {
    return reinterpret_cast<const InnerScenesvr_Fromfriend_FriendUpdate*>(
               &_InnerScenesvr_Fromfriend_FriendUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(InnerScenesvr_Fromfriend_FriendUpdate& a, InnerScenesvr_Fromfriend_FriendUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(InnerScenesvr_Fromfriend_FriendUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InnerScenesvr_Fromfriend_FriendUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InnerScenesvr_Fromfriend_FriendUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InnerScenesvr_Fromfriend_FriendUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InnerScenesvr_Fromfriend_FriendUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InnerScenesvr_Fromfriend_FriendUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InnerScenesvr_Fromfriend_FriendUpdate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "inner.InnerScenesvr_Fromfriend_FriendUpdate";
  }
  protected:
  explicit InnerScenesvr_Fromfriend_FriendUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOOneFriendFieldNumber = 2,
    kLlToUserFieldNumber = 1,
  };
  // .inner.InnerFriend oOneFriend = 2;
  bool has_oonefriend() const;
  private:
  bool _internal_has_oonefriend() const;
  public:
  void clear_oonefriend();
  const ::inner::InnerFriend& oonefriend() const;
  PROTOBUF_NODISCARD ::inner::InnerFriend* release_oonefriend();
  ::inner::InnerFriend* mutable_oonefriend();
  void set_allocated_oonefriend(::inner::InnerFriend* oonefriend);
  private:
  const ::inner::InnerFriend& _internal_oonefriend() const;
  ::inner::InnerFriend* _internal_mutable_oonefriend();
  public:
  void unsafe_arena_set_allocated_oonefriend(
      ::inner::InnerFriend* oonefriend);
  ::inner::InnerFriend* unsafe_arena_release_oonefriend();

  // uint64 llToUser = 1;
  void clear_lltouser();
  uint64_t lltouser() const;
  void set_lltouser(uint64_t value);
  private:
  uint64_t _internal_lltouser() const;
  void _internal_set_lltouser(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:inner.InnerScenesvr_Fromfriend_FriendUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::inner::InnerFriend* oonefriend_;
  uint64_t lltouser_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenesvr_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InnerScenesvr

// uint64 fromUser = 1;
inline void InnerScenesvr::clear_fromuser() {
  fromuser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr::_internal_fromuser() const {
  return fromuser_;
}
inline uint64_t InnerScenesvr::fromuser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromUser)
  return _internal_fromuser();
}
inline void InnerScenesvr::_internal_set_fromuser(uint64_t value) {
  
  fromuser_ = value;
}
inline void InnerScenesvr::set_fromuser(uint64_t value) {
  _internal_set_fromuser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr.fromUser)
}

// .inner.InnerScenesvr_Fromgate_Test fromgate_test = 101;
inline bool InnerScenesvr::_internal_has_fromgate_test() const {
  return Fromgate_case() == kFromgateTest;
}
inline bool InnerScenesvr::has_fromgate_test() const {
  return _internal_has_fromgate_test();
}
inline void InnerScenesvr::set_has_fromgate_test() {
  _oneof_case_[0] = kFromgateTest;
}
inline void InnerScenesvr::clear_fromgate_test() {
  if (_internal_has_fromgate_test()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromgate_.fromgate_test_;
    }
    clear_has_Fromgate();
  }
}
inline ::inner::InnerScenesvr_Fromgate_Test* InnerScenesvr::release_fromgate_test() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromgate_test)
  if (_internal_has_fromgate_test()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_Test* temp = Fromgate_.fromgate_test_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromgate_.fromgate_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromgate_Test& InnerScenesvr::_internal_fromgate_test() const {
  return _internal_has_fromgate_test()
      ? *Fromgate_.fromgate_test_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromgate_Test&>(::inner::_InnerScenesvr_Fromgate_Test_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromgate_Test& InnerScenesvr::fromgate_test() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromgate_test)
  return _internal_fromgate_test();
}
inline ::inner::InnerScenesvr_Fromgate_Test* InnerScenesvr::unsafe_arena_release_fromgate_test() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromgate_test)
  if (_internal_has_fromgate_test()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_Test* temp = Fromgate_.fromgate_test_;
    Fromgate_.fromgate_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromgate_test(::inner::InnerScenesvr_Fromgate_Test* fromgate_test) {
  clear_Fromgate();
  if (fromgate_test) {
    set_has_fromgate_test();
    Fromgate_.fromgate_test_ = fromgate_test;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromgate_test)
}
inline ::inner::InnerScenesvr_Fromgate_Test* InnerScenesvr::_internal_mutable_fromgate_test() {
  if (!_internal_has_fromgate_test()) {
    clear_Fromgate();
    set_has_fromgate_test();
    Fromgate_.fromgate_test_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromgate_Test >(GetArenaForAllocation());
  }
  return Fromgate_.fromgate_test_;
}
inline ::inner::InnerScenesvr_Fromgate_Test* InnerScenesvr::mutable_fromgate_test() {
  ::inner::InnerScenesvr_Fromgate_Test* _msg = _internal_mutable_fromgate_test();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromgate_test)
  return _msg;
}

// .inner.InnerScenesvr_Fromgate_serverRegister fromgate_serverregister = 102;
inline bool InnerScenesvr::_internal_has_fromgate_serverregister() const {
  return Fromgate_case() == kFromgateServerregister;
}
inline bool InnerScenesvr::has_fromgate_serverregister() const {
  return _internal_has_fromgate_serverregister();
}
inline void InnerScenesvr::set_has_fromgate_serverregister() {
  _oneof_case_[0] = kFromgateServerregister;
}
inline void InnerScenesvr::clear_fromgate_serverregister() {
  if (_internal_has_fromgate_serverregister()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromgate_.fromgate_serverregister_;
    }
    clear_has_Fromgate();
  }
}
inline ::inner::InnerScenesvr_Fromgate_serverRegister* InnerScenesvr::release_fromgate_serverregister() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromgate_serverregister)
  if (_internal_has_fromgate_serverregister()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_serverRegister* temp = Fromgate_.fromgate_serverregister_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromgate_.fromgate_serverregister_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromgate_serverRegister& InnerScenesvr::_internal_fromgate_serverregister() const {
  return _internal_has_fromgate_serverregister()
      ? *Fromgate_.fromgate_serverregister_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromgate_serverRegister&>(::inner::_InnerScenesvr_Fromgate_serverRegister_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromgate_serverRegister& InnerScenesvr::fromgate_serverregister() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromgate_serverregister)
  return _internal_fromgate_serverregister();
}
inline ::inner::InnerScenesvr_Fromgate_serverRegister* InnerScenesvr::unsafe_arena_release_fromgate_serverregister() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromgate_serverregister)
  if (_internal_has_fromgate_serverregister()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_serverRegister* temp = Fromgate_.fromgate_serverregister_;
    Fromgate_.fromgate_serverregister_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromgate_serverregister(::inner::InnerScenesvr_Fromgate_serverRegister* fromgate_serverregister) {
  clear_Fromgate();
  if (fromgate_serverregister) {
    set_has_fromgate_serverregister();
    Fromgate_.fromgate_serverregister_ = fromgate_serverregister;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromgate_serverregister)
}
inline ::inner::InnerScenesvr_Fromgate_serverRegister* InnerScenesvr::_internal_mutable_fromgate_serverregister() {
  if (!_internal_has_fromgate_serverregister()) {
    clear_Fromgate();
    set_has_fromgate_serverregister();
    Fromgate_.fromgate_serverregister_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromgate_serverRegister >(GetArenaForAllocation());
  }
  return Fromgate_.fromgate_serverregister_;
}
inline ::inner::InnerScenesvr_Fromgate_serverRegister* InnerScenesvr::mutable_fromgate_serverregister() {
  ::inner::InnerScenesvr_Fromgate_serverRegister* _msg = _internal_mutable_fromgate_serverregister();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromgate_serverregister)
  return _msg;
}

// .inner.InnerScenesvr_Fromgate_createRole fromgate_createrole = 103;
inline bool InnerScenesvr::_internal_has_fromgate_createrole() const {
  return Fromgate_case() == kFromgateCreaterole;
}
inline bool InnerScenesvr::has_fromgate_createrole() const {
  return _internal_has_fromgate_createrole();
}
inline void InnerScenesvr::set_has_fromgate_createrole() {
  _oneof_case_[0] = kFromgateCreaterole;
}
inline void InnerScenesvr::clear_fromgate_createrole() {
  if (_internal_has_fromgate_createrole()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromgate_.fromgate_createrole_;
    }
    clear_has_Fromgate();
  }
}
inline ::inner::InnerScenesvr_Fromgate_createRole* InnerScenesvr::release_fromgate_createrole() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromgate_createrole)
  if (_internal_has_fromgate_createrole()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_createRole* temp = Fromgate_.fromgate_createrole_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromgate_.fromgate_createrole_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromgate_createRole& InnerScenesvr::_internal_fromgate_createrole() const {
  return _internal_has_fromgate_createrole()
      ? *Fromgate_.fromgate_createrole_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromgate_createRole&>(::inner::_InnerScenesvr_Fromgate_createRole_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromgate_createRole& InnerScenesvr::fromgate_createrole() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromgate_createrole)
  return _internal_fromgate_createrole();
}
inline ::inner::InnerScenesvr_Fromgate_createRole* InnerScenesvr::unsafe_arena_release_fromgate_createrole() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromgate_createrole)
  if (_internal_has_fromgate_createrole()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_createRole* temp = Fromgate_.fromgate_createrole_;
    Fromgate_.fromgate_createrole_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromgate_createrole(::inner::InnerScenesvr_Fromgate_createRole* fromgate_createrole) {
  clear_Fromgate();
  if (fromgate_createrole) {
    set_has_fromgate_createrole();
    Fromgate_.fromgate_createrole_ = fromgate_createrole;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromgate_createrole)
}
inline ::inner::InnerScenesvr_Fromgate_createRole* InnerScenesvr::_internal_mutable_fromgate_createrole() {
  if (!_internal_has_fromgate_createrole()) {
    clear_Fromgate();
    set_has_fromgate_createrole();
    Fromgate_.fromgate_createrole_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromgate_createRole >(GetArenaForAllocation());
  }
  return Fromgate_.fromgate_createrole_;
}
inline ::inner::InnerScenesvr_Fromgate_createRole* InnerScenesvr::mutable_fromgate_createrole() {
  ::inner::InnerScenesvr_Fromgate_createRole* _msg = _internal_mutable_fromgate_createrole();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromgate_createrole)
  return _msg;
}

// .inner.InnerScenesvr_Fromgate_ClientMsg fromgate_clientmsg = 104;
inline bool InnerScenesvr::_internal_has_fromgate_clientmsg() const {
  return Fromgate_case() == kFromgateClientmsg;
}
inline bool InnerScenesvr::has_fromgate_clientmsg() const {
  return _internal_has_fromgate_clientmsg();
}
inline void InnerScenesvr::set_has_fromgate_clientmsg() {
  _oneof_case_[0] = kFromgateClientmsg;
}
inline void InnerScenesvr::clear_fromgate_clientmsg() {
  if (_internal_has_fromgate_clientmsg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromgate_.fromgate_clientmsg_;
    }
    clear_has_Fromgate();
  }
}
inline ::inner::InnerScenesvr_Fromgate_ClientMsg* InnerScenesvr::release_fromgate_clientmsg() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromgate_clientmsg)
  if (_internal_has_fromgate_clientmsg()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_ClientMsg* temp = Fromgate_.fromgate_clientmsg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromgate_.fromgate_clientmsg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromgate_ClientMsg& InnerScenesvr::_internal_fromgate_clientmsg() const {
  return _internal_has_fromgate_clientmsg()
      ? *Fromgate_.fromgate_clientmsg_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromgate_ClientMsg&>(::inner::_InnerScenesvr_Fromgate_ClientMsg_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromgate_ClientMsg& InnerScenesvr::fromgate_clientmsg() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromgate_clientmsg)
  return _internal_fromgate_clientmsg();
}
inline ::inner::InnerScenesvr_Fromgate_ClientMsg* InnerScenesvr::unsafe_arena_release_fromgate_clientmsg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromgate_clientmsg)
  if (_internal_has_fromgate_clientmsg()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_ClientMsg* temp = Fromgate_.fromgate_clientmsg_;
    Fromgate_.fromgate_clientmsg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromgate_clientmsg(::inner::InnerScenesvr_Fromgate_ClientMsg* fromgate_clientmsg) {
  clear_Fromgate();
  if (fromgate_clientmsg) {
    set_has_fromgate_clientmsg();
    Fromgate_.fromgate_clientmsg_ = fromgate_clientmsg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromgate_clientmsg)
}
inline ::inner::InnerScenesvr_Fromgate_ClientMsg* InnerScenesvr::_internal_mutable_fromgate_clientmsg() {
  if (!_internal_has_fromgate_clientmsg()) {
    clear_Fromgate();
    set_has_fromgate_clientmsg();
    Fromgate_.fromgate_clientmsg_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromgate_ClientMsg >(GetArenaForAllocation());
  }
  return Fromgate_.fromgate_clientmsg_;
}
inline ::inner::InnerScenesvr_Fromgate_ClientMsg* InnerScenesvr::mutable_fromgate_clientmsg() {
  ::inner::InnerScenesvr_Fromgate_ClientMsg* _msg = _internal_mutable_fromgate_clientmsg();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromgate_clientmsg)
  return _msg;
}

// .inner.InnerScenesvr_Fromgate_ClientData fromgate_clientdata = 105;
inline bool InnerScenesvr::_internal_has_fromgate_clientdata() const {
  return Fromgate_case() == kFromgateClientdata;
}
inline bool InnerScenesvr::has_fromgate_clientdata() const {
  return _internal_has_fromgate_clientdata();
}
inline void InnerScenesvr::set_has_fromgate_clientdata() {
  _oneof_case_[0] = kFromgateClientdata;
}
inline void InnerScenesvr::clear_fromgate_clientdata() {
  if (_internal_has_fromgate_clientdata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromgate_.fromgate_clientdata_;
    }
    clear_has_Fromgate();
  }
}
inline ::inner::InnerScenesvr_Fromgate_ClientData* InnerScenesvr::release_fromgate_clientdata() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromgate_clientdata)
  if (_internal_has_fromgate_clientdata()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_ClientData* temp = Fromgate_.fromgate_clientdata_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromgate_.fromgate_clientdata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromgate_ClientData& InnerScenesvr::_internal_fromgate_clientdata() const {
  return _internal_has_fromgate_clientdata()
      ? *Fromgate_.fromgate_clientdata_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromgate_ClientData&>(::inner::_InnerScenesvr_Fromgate_ClientData_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromgate_ClientData& InnerScenesvr::fromgate_clientdata() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromgate_clientdata)
  return _internal_fromgate_clientdata();
}
inline ::inner::InnerScenesvr_Fromgate_ClientData* InnerScenesvr::unsafe_arena_release_fromgate_clientdata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromgate_clientdata)
  if (_internal_has_fromgate_clientdata()) {
    clear_has_Fromgate();
    ::inner::InnerScenesvr_Fromgate_ClientData* temp = Fromgate_.fromgate_clientdata_;
    Fromgate_.fromgate_clientdata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromgate_clientdata(::inner::InnerScenesvr_Fromgate_ClientData* fromgate_clientdata) {
  clear_Fromgate();
  if (fromgate_clientdata) {
    set_has_fromgate_clientdata();
    Fromgate_.fromgate_clientdata_ = fromgate_clientdata;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromgate_clientdata)
}
inline ::inner::InnerScenesvr_Fromgate_ClientData* InnerScenesvr::_internal_mutable_fromgate_clientdata() {
  if (!_internal_has_fromgate_clientdata()) {
    clear_Fromgate();
    set_has_fromgate_clientdata();
    Fromgate_.fromgate_clientdata_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromgate_ClientData >(GetArenaForAllocation());
  }
  return Fromgate_.fromgate_clientdata_;
}
inline ::inner::InnerScenesvr_Fromgate_ClientData* InnerScenesvr::mutable_fromgate_clientdata() {
  ::inner::InnerScenesvr_Fromgate_ClientData* _msg = _internal_mutable_fromgate_clientdata();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromgate_clientdata)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_Test fromfriend_test = 201;
inline bool InnerScenesvr::_internal_has_fromfriend_test() const {
  return Fromfriend_case() == kFromfriendTest;
}
inline bool InnerScenesvr::has_fromfriend_test() const {
  return _internal_has_fromfriend_test();
}
inline void InnerScenesvr::set_has_fromfriend_test() {
  _oneof_case_[1] = kFromfriendTest;
}
inline void InnerScenesvr::clear_fromfriend_test() {
  if (_internal_has_fromfriend_test()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_test_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_Test* InnerScenesvr::release_fromfriend_test() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_test)
  if (_internal_has_fromfriend_test()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_Test* temp = Fromfriend_.fromfriend_test_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_Test& InnerScenesvr::_internal_fromfriend_test() const {
  return _internal_has_fromfriend_test()
      ? *Fromfriend_.fromfriend_test_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_Test&>(::inner::_InnerScenesvr_Fromfriend_Test_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_Test& InnerScenesvr::fromfriend_test() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_test)
  return _internal_fromfriend_test();
}
inline ::inner::InnerScenesvr_Fromfriend_Test* InnerScenesvr::unsafe_arena_release_fromfriend_test() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_test)
  if (_internal_has_fromfriend_test()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_Test* temp = Fromfriend_.fromfriend_test_;
    Fromfriend_.fromfriend_test_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_test(::inner::InnerScenesvr_Fromfriend_Test* fromfriend_test) {
  clear_Fromfriend();
  if (fromfriend_test) {
    set_has_fromfriend_test();
    Fromfriend_.fromfriend_test_ = fromfriend_test;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_test)
}
inline ::inner::InnerScenesvr_Fromfriend_Test* InnerScenesvr::_internal_mutable_fromfriend_test() {
  if (!_internal_has_fromfriend_test()) {
    clear_Fromfriend();
    set_has_fromfriend_test();
    Fromfriend_.fromfriend_test_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_Test >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_test_;
}
inline ::inner::InnerScenesvr_Fromfriend_Test* InnerScenesvr::mutable_fromfriend_test() {
  ::inner::InnerScenesvr_Fromfriend_Test* _msg = _internal_mutable_fromfriend_test();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_test)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_ReturnItem fromfriend_returnitem = 202;
inline bool InnerScenesvr::_internal_has_fromfriend_returnitem() const {
  return Fromfriend_case() == kFromfriendReturnitem;
}
inline bool InnerScenesvr::has_fromfriend_returnitem() const {
  return _internal_has_fromfriend_returnitem();
}
inline void InnerScenesvr::set_has_fromfriend_returnitem() {
  _oneof_case_[1] = kFromfriendReturnitem;
}
inline void InnerScenesvr::clear_fromfriend_returnitem() {
  if (_internal_has_fromfriend_returnitem()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_returnitem_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_ReturnItem* InnerScenesvr::release_fromfriend_returnitem() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_returnitem)
  if (_internal_has_fromfriend_returnitem()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_ReturnItem* temp = Fromfriend_.fromfriend_returnitem_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_returnitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_ReturnItem& InnerScenesvr::_internal_fromfriend_returnitem() const {
  return _internal_has_fromfriend_returnitem()
      ? *Fromfriend_.fromfriend_returnitem_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_ReturnItem&>(::inner::_InnerScenesvr_Fromfriend_ReturnItem_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_ReturnItem& InnerScenesvr::fromfriend_returnitem() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_returnitem)
  return _internal_fromfriend_returnitem();
}
inline ::inner::InnerScenesvr_Fromfriend_ReturnItem* InnerScenesvr::unsafe_arena_release_fromfriend_returnitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_returnitem)
  if (_internal_has_fromfriend_returnitem()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_ReturnItem* temp = Fromfriend_.fromfriend_returnitem_;
    Fromfriend_.fromfriend_returnitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_returnitem(::inner::InnerScenesvr_Fromfriend_ReturnItem* fromfriend_returnitem) {
  clear_Fromfriend();
  if (fromfriend_returnitem) {
    set_has_fromfriend_returnitem();
    Fromfriend_.fromfriend_returnitem_ = fromfriend_returnitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_returnitem)
}
inline ::inner::InnerScenesvr_Fromfriend_ReturnItem* InnerScenesvr::_internal_mutable_fromfriend_returnitem() {
  if (!_internal_has_fromfriend_returnitem()) {
    clear_Fromfriend();
    set_has_fromfriend_returnitem();
    Fromfriend_.fromfriend_returnitem_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_ReturnItem >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_returnitem_;
}
inline ::inner::InnerScenesvr_Fromfriend_ReturnItem* InnerScenesvr::mutable_fromfriend_returnitem() {
  ::inner::InnerScenesvr_Fromfriend_ReturnItem* _msg = _internal_mutable_fromfriend_returnitem();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_returnitem)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_GiftReceived fromfriend_giftreceived = 203;
inline bool InnerScenesvr::_internal_has_fromfriend_giftreceived() const {
  return Fromfriend_case() == kFromfriendGiftreceived;
}
inline bool InnerScenesvr::has_fromfriend_giftreceived() const {
  return _internal_has_fromfriend_giftreceived();
}
inline void InnerScenesvr::set_has_fromfriend_giftreceived() {
  _oneof_case_[1] = kFromfriendGiftreceived;
}
inline void InnerScenesvr::clear_fromfriend_giftreceived() {
  if (_internal_has_fromfriend_giftreceived()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_giftreceived_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_GiftReceived* InnerScenesvr::release_fromfriend_giftreceived() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_giftreceived)
  if (_internal_has_fromfriend_giftreceived()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftReceived* temp = Fromfriend_.fromfriend_giftreceived_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_giftreceived_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftReceived& InnerScenesvr::_internal_fromfriend_giftreceived() const {
  return _internal_has_fromfriend_giftreceived()
      ? *Fromfriend_.fromfriend_giftreceived_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_GiftReceived&>(::inner::_InnerScenesvr_Fromfriend_GiftReceived_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftReceived& InnerScenesvr::fromfriend_giftreceived() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_giftreceived)
  return _internal_fromfriend_giftreceived();
}
inline ::inner::InnerScenesvr_Fromfriend_GiftReceived* InnerScenesvr::unsafe_arena_release_fromfriend_giftreceived() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_giftreceived)
  if (_internal_has_fromfriend_giftreceived()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftReceived* temp = Fromfriend_.fromfriend_giftreceived_;
    Fromfriend_.fromfriend_giftreceived_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_giftreceived(::inner::InnerScenesvr_Fromfriend_GiftReceived* fromfriend_giftreceived) {
  clear_Fromfriend();
  if (fromfriend_giftreceived) {
    set_has_fromfriend_giftreceived();
    Fromfriend_.fromfriend_giftreceived_ = fromfriend_giftreceived;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_giftreceived)
}
inline ::inner::InnerScenesvr_Fromfriend_GiftReceived* InnerScenesvr::_internal_mutable_fromfriend_giftreceived() {
  if (!_internal_has_fromfriend_giftreceived()) {
    clear_Fromfriend();
    set_has_fromfriend_giftreceived();
    Fromfriend_.fromfriend_giftreceived_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftReceived >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_giftreceived_;
}
inline ::inner::InnerScenesvr_Fromfriend_GiftReceived* InnerScenesvr::mutable_fromfriend_giftreceived() {
  ::inner::InnerScenesvr_Fromfriend_GiftReceived* _msg = _internal_mutable_fromfriend_giftreceived();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_giftreceived)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_GiftEmail fromfriend_giftemail = 204;
inline bool InnerScenesvr::_internal_has_fromfriend_giftemail() const {
  return Fromfriend_case() == kFromfriendGiftemail;
}
inline bool InnerScenesvr::has_fromfriend_giftemail() const {
  return _internal_has_fromfriend_giftemail();
}
inline void InnerScenesvr::set_has_fromfriend_giftemail() {
  _oneof_case_[1] = kFromfriendGiftemail;
}
inline void InnerScenesvr::clear_fromfriend_giftemail() {
  if (_internal_has_fromfriend_giftemail()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_giftemail_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_GiftEmail* InnerScenesvr::release_fromfriend_giftemail() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_giftemail)
  if (_internal_has_fromfriend_giftemail()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftEmail* temp = Fromfriend_.fromfriend_giftemail_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_giftemail_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftEmail& InnerScenesvr::_internal_fromfriend_giftemail() const {
  return _internal_has_fromfriend_giftemail()
      ? *Fromfriend_.fromfriend_giftemail_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_GiftEmail&>(::inner::_InnerScenesvr_Fromfriend_GiftEmail_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftEmail& InnerScenesvr::fromfriend_giftemail() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_giftemail)
  return _internal_fromfriend_giftemail();
}
inline ::inner::InnerScenesvr_Fromfriend_GiftEmail* InnerScenesvr::unsafe_arena_release_fromfriend_giftemail() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_giftemail)
  if (_internal_has_fromfriend_giftemail()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftEmail* temp = Fromfriend_.fromfriend_giftemail_;
    Fromfriend_.fromfriend_giftemail_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_giftemail(::inner::InnerScenesvr_Fromfriend_GiftEmail* fromfriend_giftemail) {
  clear_Fromfriend();
  if (fromfriend_giftemail) {
    set_has_fromfriend_giftemail();
    Fromfriend_.fromfriend_giftemail_ = fromfriend_giftemail;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_giftemail)
}
inline ::inner::InnerScenesvr_Fromfriend_GiftEmail* InnerScenesvr::_internal_mutable_fromfriend_giftemail() {
  if (!_internal_has_fromfriend_giftemail()) {
    clear_Fromfriend();
    set_has_fromfriend_giftemail();
    Fromfriend_.fromfriend_giftemail_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftEmail >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_giftemail_;
}
inline ::inner::InnerScenesvr_Fromfriend_GiftEmail* InnerScenesvr::mutable_fromfriend_giftemail() {
  ::inner::InnerScenesvr_Fromfriend_GiftEmail* _msg = _internal_mutable_fromfriend_giftemail();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_giftemail)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_GiftExpire fromfriend_giftexpire = 205;
inline bool InnerScenesvr::_internal_has_fromfriend_giftexpire() const {
  return Fromfriend_case() == kFromfriendGiftexpire;
}
inline bool InnerScenesvr::has_fromfriend_giftexpire() const {
  return _internal_has_fromfriend_giftexpire();
}
inline void InnerScenesvr::set_has_fromfriend_giftexpire() {
  _oneof_case_[1] = kFromfriendGiftexpire;
}
inline void InnerScenesvr::clear_fromfriend_giftexpire() {
  if (_internal_has_fromfriend_giftexpire()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_giftexpire_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_GiftExpire* InnerScenesvr::release_fromfriend_giftexpire() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_giftexpire)
  if (_internal_has_fromfriend_giftexpire()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftExpire* temp = Fromfriend_.fromfriend_giftexpire_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_giftexpire_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftExpire& InnerScenesvr::_internal_fromfriend_giftexpire() const {
  return _internal_has_fromfriend_giftexpire()
      ? *Fromfriend_.fromfriend_giftexpire_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_GiftExpire&>(::inner::_InnerScenesvr_Fromfriend_GiftExpire_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftExpire& InnerScenesvr::fromfriend_giftexpire() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_giftexpire)
  return _internal_fromfriend_giftexpire();
}
inline ::inner::InnerScenesvr_Fromfriend_GiftExpire* InnerScenesvr::unsafe_arena_release_fromfriend_giftexpire() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_giftexpire)
  if (_internal_has_fromfriend_giftexpire()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftExpire* temp = Fromfriend_.fromfriend_giftexpire_;
    Fromfriend_.fromfriend_giftexpire_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_giftexpire(::inner::InnerScenesvr_Fromfriend_GiftExpire* fromfriend_giftexpire) {
  clear_Fromfriend();
  if (fromfriend_giftexpire) {
    set_has_fromfriend_giftexpire();
    Fromfriend_.fromfriend_giftexpire_ = fromfriend_giftexpire;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_giftexpire)
}
inline ::inner::InnerScenesvr_Fromfriend_GiftExpire* InnerScenesvr::_internal_mutable_fromfriend_giftexpire() {
  if (!_internal_has_fromfriend_giftexpire()) {
    clear_Fromfriend();
    set_has_fromfriend_giftexpire();
    Fromfriend_.fromfriend_giftexpire_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftExpire >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_giftexpire_;
}
inline ::inner::InnerScenesvr_Fromfriend_GiftExpire* InnerScenesvr::mutable_fromfriend_giftexpire() {
  ::inner::InnerScenesvr_Fromfriend_GiftExpire* _msg = _internal_mutable_fromfriend_giftexpire();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_giftexpire)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_GiftVersion fromfriend_giftversion = 206;
inline bool InnerScenesvr::_internal_has_fromfriend_giftversion() const {
  return Fromfriend_case() == kFromfriendGiftversion;
}
inline bool InnerScenesvr::has_fromfriend_giftversion() const {
  return _internal_has_fromfriend_giftversion();
}
inline void InnerScenesvr::set_has_fromfriend_giftversion() {
  _oneof_case_[1] = kFromfriendGiftversion;
}
inline void InnerScenesvr::clear_fromfriend_giftversion() {
  if (_internal_has_fromfriend_giftversion()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_giftversion_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_GiftVersion* InnerScenesvr::release_fromfriend_giftversion() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_giftversion)
  if (_internal_has_fromfriend_giftversion()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftVersion* temp = Fromfriend_.fromfriend_giftversion_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_giftversion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftVersion& InnerScenesvr::_internal_fromfriend_giftversion() const {
  return _internal_has_fromfriend_giftversion()
      ? *Fromfriend_.fromfriend_giftversion_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_GiftVersion&>(::inner::_InnerScenesvr_Fromfriend_GiftVersion_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_GiftVersion& InnerScenesvr::fromfriend_giftversion() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_giftversion)
  return _internal_fromfriend_giftversion();
}
inline ::inner::InnerScenesvr_Fromfriend_GiftVersion* InnerScenesvr::unsafe_arena_release_fromfriend_giftversion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_giftversion)
  if (_internal_has_fromfriend_giftversion()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_GiftVersion* temp = Fromfriend_.fromfriend_giftversion_;
    Fromfriend_.fromfriend_giftversion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_giftversion(::inner::InnerScenesvr_Fromfriend_GiftVersion* fromfriend_giftversion) {
  clear_Fromfriend();
  if (fromfriend_giftversion) {
    set_has_fromfriend_giftversion();
    Fromfriend_.fromfriend_giftversion_ = fromfriend_giftversion;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_giftversion)
}
inline ::inner::InnerScenesvr_Fromfriend_GiftVersion* InnerScenesvr::_internal_mutable_fromfriend_giftversion() {
  if (!_internal_has_fromfriend_giftversion()) {
    clear_Fromfriend();
    set_has_fromfriend_giftversion();
    Fromfriend_.fromfriend_giftversion_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_GiftVersion >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_giftversion_;
}
inline ::inner::InnerScenesvr_Fromfriend_GiftVersion* InnerScenesvr::mutable_fromfriend_giftversion() {
  ::inner::InnerScenesvr_Fromfriend_GiftVersion* _msg = _internal_mutable_fromfriend_giftversion();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_giftversion)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_FriendList fromfriend_friendlist = 207;
inline bool InnerScenesvr::_internal_has_fromfriend_friendlist() const {
  return Fromfriend_case() == kFromfriendFriendlist;
}
inline bool InnerScenesvr::has_fromfriend_friendlist() const {
  return _internal_has_fromfriend_friendlist();
}
inline void InnerScenesvr::set_has_fromfriend_friendlist() {
  _oneof_case_[1] = kFromfriendFriendlist;
}
inline void InnerScenesvr::clear_fromfriend_friendlist() {
  if (_internal_has_fromfriend_friendlist()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_friendlist_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_FriendList* InnerScenesvr::release_fromfriend_friendlist() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_friendlist)
  if (_internal_has_fromfriend_friendlist()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_FriendList* temp = Fromfriend_.fromfriend_friendlist_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_friendlist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_FriendList& InnerScenesvr::_internal_fromfriend_friendlist() const {
  return _internal_has_fromfriend_friendlist()
      ? *Fromfriend_.fromfriend_friendlist_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_FriendList&>(::inner::_InnerScenesvr_Fromfriend_FriendList_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_FriendList& InnerScenesvr::fromfriend_friendlist() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_friendlist)
  return _internal_fromfriend_friendlist();
}
inline ::inner::InnerScenesvr_Fromfriend_FriendList* InnerScenesvr::unsafe_arena_release_fromfriend_friendlist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_friendlist)
  if (_internal_has_fromfriend_friendlist()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_FriendList* temp = Fromfriend_.fromfriend_friendlist_;
    Fromfriend_.fromfriend_friendlist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_friendlist(::inner::InnerScenesvr_Fromfriend_FriendList* fromfriend_friendlist) {
  clear_Fromfriend();
  if (fromfriend_friendlist) {
    set_has_fromfriend_friendlist();
    Fromfriend_.fromfriend_friendlist_ = fromfriend_friendlist;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_friendlist)
}
inline ::inner::InnerScenesvr_Fromfriend_FriendList* InnerScenesvr::_internal_mutable_fromfriend_friendlist() {
  if (!_internal_has_fromfriend_friendlist()) {
    clear_Fromfriend();
    set_has_fromfriend_friendlist();
    Fromfriend_.fromfriend_friendlist_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_FriendList >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_friendlist_;
}
inline ::inner::InnerScenesvr_Fromfriend_FriendList* InnerScenesvr::mutable_fromfriend_friendlist() {
  ::inner::InnerScenesvr_Fromfriend_FriendList* _msg = _internal_mutable_fromfriend_friendlist();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_friendlist)
  return _msg;
}

// .inner.InnerScenesvr_Fromfriend_FriendUpdate fromfriend_friendupdate = 208;
inline bool InnerScenesvr::_internal_has_fromfriend_friendupdate() const {
  return Fromfriend_case() == kFromfriendFriendupdate;
}
inline bool InnerScenesvr::has_fromfriend_friendupdate() const {
  return _internal_has_fromfriend_friendupdate();
}
inline void InnerScenesvr::set_has_fromfriend_friendupdate() {
  _oneof_case_[1] = kFromfriendFriendupdate;
}
inline void InnerScenesvr::clear_fromfriend_friendupdate() {
  if (_internal_has_fromfriend_friendupdate()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Fromfriend_.fromfriend_friendupdate_;
    }
    clear_has_Fromfriend();
  }
}
inline ::inner::InnerScenesvr_Fromfriend_FriendUpdate* InnerScenesvr::release_fromfriend_friendupdate() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr.fromfriend_friendupdate)
  if (_internal_has_fromfriend_friendupdate()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_FriendUpdate* temp = Fromfriend_.fromfriend_friendupdate_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Fromfriend_.fromfriend_friendupdate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::inner::InnerScenesvr_Fromfriend_FriendUpdate& InnerScenesvr::_internal_fromfriend_friendupdate() const {
  return _internal_has_fromfriend_friendupdate()
      ? *Fromfriend_.fromfriend_friendupdate_
      : reinterpret_cast< ::inner::InnerScenesvr_Fromfriend_FriendUpdate&>(::inner::_InnerScenesvr_Fromfriend_FriendUpdate_default_instance_);
}
inline const ::inner::InnerScenesvr_Fromfriend_FriendUpdate& InnerScenesvr::fromfriend_friendupdate() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr.fromfriend_friendupdate)
  return _internal_fromfriend_friendupdate();
}
inline ::inner::InnerScenesvr_Fromfriend_FriendUpdate* InnerScenesvr::unsafe_arena_release_fromfriend_friendupdate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:inner.InnerScenesvr.fromfriend_friendupdate)
  if (_internal_has_fromfriend_friendupdate()) {
    clear_has_Fromfriend();
    ::inner::InnerScenesvr_Fromfriend_FriendUpdate* temp = Fromfriend_.fromfriend_friendupdate_;
    Fromfriend_.fromfriend_friendupdate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InnerScenesvr::unsafe_arena_set_allocated_fromfriend_friendupdate(::inner::InnerScenesvr_Fromfriend_FriendUpdate* fromfriend_friendupdate) {
  clear_Fromfriend();
  if (fromfriend_friendupdate) {
    set_has_fromfriend_friendupdate();
    Fromfriend_.fromfriend_friendupdate_ = fromfriend_friendupdate;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr.fromfriend_friendupdate)
}
inline ::inner::InnerScenesvr_Fromfriend_FriendUpdate* InnerScenesvr::_internal_mutable_fromfriend_friendupdate() {
  if (!_internal_has_fromfriend_friendupdate()) {
    clear_Fromfriend();
    set_has_fromfriend_friendupdate();
    Fromfriend_.fromfriend_friendupdate_ = CreateMaybeMessage< ::inner::InnerScenesvr_Fromfriend_FriendUpdate >(GetArenaForAllocation());
  }
  return Fromfriend_.fromfriend_friendupdate_;
}
inline ::inner::InnerScenesvr_Fromfriend_FriendUpdate* InnerScenesvr::mutable_fromfriend_friendupdate() {
  ::inner::InnerScenesvr_Fromfriend_FriendUpdate* _msg = _internal_mutable_fromfriend_friendupdate();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr.fromfriend_friendupdate)
  return _msg;
}

inline bool InnerScenesvr::has_Fromgate() const {
  return Fromgate_case() != FROMGATE_NOT_SET;
}
inline void InnerScenesvr::clear_has_Fromgate() {
  _oneof_case_[0] = FROMGATE_NOT_SET;
}
inline bool InnerScenesvr::has_Fromfriend() const {
  return Fromfriend_case() != FROMFRIEND_NOT_SET;
}
inline void InnerScenesvr::clear_has_Fromfriend() {
  _oneof_case_[1] = FROMFRIEND_NOT_SET;
}
inline InnerScenesvr::FromgateCase InnerScenesvr::Fromgate_case() const {
  return InnerScenesvr::FromgateCase(_oneof_case_[0]);
}
inline InnerScenesvr::FromfriendCase InnerScenesvr::Fromfriend_case() const {
  return InnerScenesvr::FromfriendCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// InnerScenesvr_Fromgate_Test

// -------------------------------------------------------------------

// InnerScenesvr_Fromgate_serverRegister

// -------------------------------------------------------------------

// InnerScenesvr_Fromgate_createRole

// uint64 roleId = 1;
inline void InnerScenesvr_Fromgate_createRole::clear_roleid() {
  roleid_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromgate_createRole::_internal_roleid() const {
  return roleid_;
}
inline uint64_t InnerScenesvr_Fromgate_createRole::roleid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromgate_createRole.roleId)
  return _internal_roleid();
}
inline void InnerScenesvr_Fromgate_createRole::_internal_set_roleid(uint64_t value) {
  
  roleid_ = value;
}
inline void InnerScenesvr_Fromgate_createRole::set_roleid(uint64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromgate_createRole.roleId)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromgate_ClientMsg

// uint32 moduleId = 1;
inline void InnerScenesvr_Fromgate_ClientMsg::clear_moduleid() {
  moduleid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromgate_ClientMsg::_internal_moduleid() const {
  return moduleid_;
}
inline uint32_t InnerScenesvr_Fromgate_ClientMsg::moduleid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromgate_ClientMsg.moduleId)
  return _internal_moduleid();
}
inline void InnerScenesvr_Fromgate_ClientMsg::_internal_set_moduleid(uint32_t value) {
  
  moduleid_ = value;
}
inline void InnerScenesvr_Fromgate_ClientMsg::set_moduleid(uint32_t value) {
  _internal_set_moduleid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromgate_ClientMsg.moduleId)
}

// uint32 cmdId = 2;
inline void InnerScenesvr_Fromgate_ClientMsg::clear_cmdid() {
  cmdid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromgate_ClientMsg::_internal_cmdid() const {
  return cmdid_;
}
inline uint32_t InnerScenesvr_Fromgate_ClientMsg::cmdid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromgate_ClientMsg.cmdId)
  return _internal_cmdid();
}
inline void InnerScenesvr_Fromgate_ClientMsg::_internal_set_cmdid(uint32_t value) {
  
  cmdid_ = value;
}
inline void InnerScenesvr_Fromgate_ClientMsg::set_cmdid(uint32_t value) {
  _internal_set_cmdid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromgate_ClientMsg.cmdId)
}

// bytes data = 3;
inline void InnerScenesvr_Fromgate_ClientMsg::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& InnerScenesvr_Fromgate_ClientMsg::data() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromgate_ClientMsg.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void InnerScenesvr_Fromgate_ClientMsg::set_data(ArgT0&& arg0, ArgT... args) {
 
 data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromgate_ClientMsg.data)
}
inline std::string* InnerScenesvr_Fromgate_ClientMsg::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr_Fromgate_ClientMsg.data)
  return _s;
}
inline const std::string& InnerScenesvr_Fromgate_ClientMsg::_internal_data() const {
  return data_.Get();
}
inline void InnerScenesvr_Fromgate_ClientMsg::_internal_set_data(const std::string& value) {
  
  data_.Set(value, GetArenaForAllocation());
}
inline std::string* InnerScenesvr_Fromgate_ClientMsg::_internal_mutable_data() {
  
  return data_.Mutable(GetArenaForAllocation());
}
inline std::string* InnerScenesvr_Fromgate_ClientMsg::release_data() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr_Fromgate_ClientMsg.data)
  return data_.Release();
}
inline void InnerScenesvr_Fromgate_ClientMsg::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (data_.IsDefault()) {
    data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr_Fromgate_ClientMsg.data)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromgate_ClientData

// bytes data = 1;
inline void InnerScenesvr_Fromgate_ClientData::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& InnerScenesvr_Fromgate_ClientData::data() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromgate_ClientData.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void InnerScenesvr_Fromgate_ClientData::set_data(ArgT0&& arg0, ArgT... args) {
 
 data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromgate_ClientData.data)
}
inline std::string* InnerScenesvr_Fromgate_ClientData::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr_Fromgate_ClientData.data)
  return _s;
}
inline const std::string& InnerScenesvr_Fromgate_ClientData::_internal_data() const {
  return data_.Get();
}
inline void InnerScenesvr_Fromgate_ClientData::_internal_set_data(const std::string& value) {
  
  data_.Set(value, GetArenaForAllocation());
}
inline std::string* InnerScenesvr_Fromgate_ClientData::_internal_mutable_data() {
  
  return data_.Mutable(GetArenaForAllocation());
}
inline std::string* InnerScenesvr_Fromgate_ClientData::release_data() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr_Fromgate_ClientData.data)
  return data_.Release();
}
inline void InnerScenesvr_Fromgate_ClientData::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (data_.IsDefault()) {
    data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr_Fromgate_ClientData.data)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_Test

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_ReturnItem

// uint64 llToUser = 1;
inline void InnerScenesvr_Fromfriend_ReturnItem::clear_lltouser() {
  lltouser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_ReturnItem::_internal_lltouser() const {
  return lltouser_;
}
inline uint64_t InnerScenesvr_Fromfriend_ReturnItem::lltouser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_ReturnItem.llToUser)
  return _internal_lltouser();
}
inline void InnerScenesvr_Fromfriend_ReturnItem::_internal_set_lltouser(uint64_t value) {
  
  lltouser_ = value;
}
inline void InnerScenesvr_Fromfriend_ReturnItem::set_lltouser(uint64_t value) {
  _internal_set_lltouser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_ReturnItem.llToUser)
}

// uint32 uiItemId = 2;
inline void InnerScenesvr_Fromfriend_ReturnItem::clear_uiitemid() {
  uiitemid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_ReturnItem::_internal_uiitemid() const {
  return uiitemid_;
}
inline uint32_t InnerScenesvr_Fromfriend_ReturnItem::uiitemid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_ReturnItem.uiItemId)
  return _internal_uiitemid();
}
inline void InnerScenesvr_Fromfriend_ReturnItem::_internal_set_uiitemid(uint32_t value) {
  
  uiitemid_ = value;
}
inline void InnerScenesvr_Fromfriend_ReturnItem::set_uiitemid(uint32_t value) {
  _internal_set_uiitemid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_ReturnItem.uiItemId)
}

// uint32 uiCount = 3;
inline void InnerScenesvr_Fromfriend_ReturnItem::clear_uicount() {
  uicount_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_ReturnItem::_internal_uicount() const {
  return uicount_;
}
inline uint32_t InnerScenesvr_Fromfriend_ReturnItem::uicount() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_ReturnItem.uiCount)
  return _internal_uicount();
}
inline void InnerScenesvr_Fromfriend_ReturnItem::_internal_set_uicount(uint32_t value) {
  
  uicount_ = value;
}
inline void InnerScenesvr_Fromfriend_ReturnItem::set_uicount(uint32_t value) {
  _internal_set_uicount(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_ReturnItem.uiCount)
}

// bool bBind = 4;
inline void InnerScenesvr_Fromfriend_ReturnItem::clear_bbind() {
  bbind_ = false;
}
inline bool InnerScenesvr_Fromfriend_ReturnItem::_internal_bbind() const {
  return bbind_;
}
inline bool InnerScenesvr_Fromfriend_ReturnItem::bbind() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_ReturnItem.bBind)
  return _internal_bbind();
}
inline void InnerScenesvr_Fromfriend_ReturnItem::_internal_set_bbind(bool value) {
  
  bbind_ = value;
}
inline void InnerScenesvr_Fromfriend_ReturnItem::set_bbind(bool value) {
  _internal_set_bbind(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_ReturnItem.bBind)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_GiftReceived

// repeated uint64 vecToRoleList = 1;
inline int InnerScenesvr_Fromfriend_GiftReceived::_internal_vectorolelist_size() const {
  return vectorolelist_.size();
}
inline int InnerScenesvr_Fromfriend_GiftReceived::vectorolelist_size() const {
  return _internal_vectorolelist_size();
}
inline void InnerScenesvr_Fromfriend_GiftReceived::clear_vectorolelist() {
  vectorolelist_.Clear();
}
inline uint64_t InnerScenesvr_Fromfriend_GiftReceived::_internal_vectorolelist(int index) const {
  return vectorolelist_.Get(index);
}
inline uint64_t InnerScenesvr_Fromfriend_GiftReceived::vectorolelist(int index) const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftReceived.vecToRoleList)
  return _internal_vectorolelist(index);
}
inline void InnerScenesvr_Fromfriend_GiftReceived::set_vectorolelist(int index, uint64_t value) {
  vectorolelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftReceived.vecToRoleList)
}
inline void InnerScenesvr_Fromfriend_GiftReceived::_internal_add_vectorolelist(uint64_t value) {
  vectorolelist_.Add(value);
}
inline void InnerScenesvr_Fromfriend_GiftReceived::add_vectorolelist(uint64_t value) {
  _internal_add_vectorolelist(value);
  // @@protoc_insertion_point(field_add:inner.InnerScenesvr_Fromfriend_GiftReceived.vecToRoleList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
InnerScenesvr_Fromfriend_GiftReceived::_internal_vectorolelist() const {
  return vectorolelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
InnerScenesvr_Fromfriend_GiftReceived::vectorolelist() const {
  // @@protoc_insertion_point(field_list:inner.InnerScenesvr_Fromfriend_GiftReceived.vecToRoleList)
  return _internal_vectorolelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
InnerScenesvr_Fromfriend_GiftReceived::_internal_mutable_vectorolelist() {
  return &vectorolelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
InnerScenesvr_Fromfriend_GiftReceived::mutable_vectorolelist() {
  // @@protoc_insertion_point(field_mutable_list:inner.InnerScenesvr_Fromfriend_GiftReceived.vecToRoleList)
  return _internal_mutable_vectorolelist();
}

// uint64 llGiftUid = 2;
inline void InnerScenesvr_Fromfriend_GiftReceived::clear_llgiftuid() {
  llgiftuid_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftReceived::_internal_llgiftuid() const {
  return llgiftuid_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftReceived::llgiftuid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftReceived.llGiftUid)
  return _internal_llgiftuid();
}
inline void InnerScenesvr_Fromfriend_GiftReceived::_internal_set_llgiftuid(uint64_t value) {
  
  llgiftuid_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftReceived::set_llgiftuid(uint64_t value) {
  _internal_set_llgiftuid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftReceived.llGiftUid)
}

// uint64 llRecver = 3;
inline void InnerScenesvr_Fromfriend_GiftReceived::clear_llrecver() {
  llrecver_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftReceived::_internal_llrecver() const {
  return llrecver_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftReceived::llrecver() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftReceived.llRecver)
  return _internal_llrecver();
}
inline void InnerScenesvr_Fromfriend_GiftReceived::_internal_set_llrecver(uint64_t value) {
  
  llrecver_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftReceived::set_llrecver(uint64_t value) {
  _internal_set_llrecver(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftReceived.llRecver)
}

// uint32 uiItemId = 4;
inline void InnerScenesvr_Fromfriend_GiftReceived::clear_uiitemid() {
  uiitemid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftReceived::_internal_uiitemid() const {
  return uiitemid_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftReceived::uiitemid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftReceived.uiItemId)
  return _internal_uiitemid();
}
inline void InnerScenesvr_Fromfriend_GiftReceived::_internal_set_uiitemid(uint32_t value) {
  
  uiitemid_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftReceived::set_uiitemid(uint32_t value) {
  _internal_set_uiitemid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftReceived.uiItemId)
}

// uint32 uiCount = 5;
inline void InnerScenesvr_Fromfriend_GiftReceived::clear_uicount() {
  uicount_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftReceived::_internal_uicount() const {
  return uicount_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftReceived::uicount() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftReceived.uiCount)
  return _internal_uicount();
}
inline void InnerScenesvr_Fromfriend_GiftReceived::_internal_set_uicount(uint32_t value) {
  
  uicount_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftReceived::set_uicount(uint32_t value) {
  _internal_set_uicount(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftReceived.uiCount)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_GiftEmail

// uint64 llToUser = 1;
inline void InnerScenesvr_Fromfriend_GiftEmail::clear_lltouser() {
  lltouser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftEmail::_internal_lltouser() const {
  return lltouser_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftEmail::lltouser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftEmail.llToUser)
  return _internal_lltouser();
}
inline void InnerScenesvr_Fromfriend_GiftEmail::_internal_set_lltouser(uint64_t value) {
  
  lltouser_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftEmail::set_lltouser(uint64_t value) {
  _internal_set_lltouser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftEmail.llToUser)
}

// uint64 llSender = 2;
inline void InnerScenesvr_Fromfriend_GiftEmail::clear_llsender() {
  llsender_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftEmail::_internal_llsender() const {
  return llsender_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftEmail::llsender() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftEmail.llSender)
  return _internal_llsender();
}
inline void InnerScenesvr_Fromfriend_GiftEmail::_internal_set_llsender(uint64_t value) {
  
  llsender_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftEmail::set_llsender(uint64_t value) {
  _internal_set_llsender(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftEmail.llSender)
}

// uint32 uiItemId = 3;
inline void InnerScenesvr_Fromfriend_GiftEmail::clear_uiitemid() {
  uiitemid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftEmail::_internal_uiitemid() const {
  return uiitemid_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftEmail::uiitemid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftEmail.uiItemId)
  return _internal_uiitemid();
}
inline void InnerScenesvr_Fromfriend_GiftEmail::_internal_set_uiitemid(uint32_t value) {
  
  uiitemid_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftEmail::set_uiitemid(uint32_t value) {
  _internal_set_uiitemid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftEmail.uiItemId)
}

// uint32 uiCount = 4;
inline void InnerScenesvr_Fromfriend_GiftEmail::clear_uicount() {
  uicount_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftEmail::_internal_uicount() const {
  return uicount_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftEmail::uicount() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftEmail.uiCount)
  return _internal_uicount();
}
inline void InnerScenesvr_Fromfriend_GiftEmail::_internal_set_uicount(uint32_t value) {
  
  uicount_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftEmail::set_uicount(uint32_t value) {
  _internal_set_uicount(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftEmail.uiCount)
}

// uint64 llGiftUd = 5;
inline void InnerScenesvr_Fromfriend_GiftEmail::clear_llgiftud() {
  llgiftud_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftEmail::_internal_llgiftud() const {
  return llgiftud_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftEmail::llgiftud() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftEmail.llGiftUd)
  return _internal_llgiftud();
}
inline void InnerScenesvr_Fromfriend_GiftEmail::_internal_set_llgiftud(uint64_t value) {
  
  llgiftud_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftEmail::set_llgiftud(uint64_t value) {
  _internal_set_llgiftud(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftEmail.llGiftUd)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_GiftExpire

// uint64 llToUser = 1;
inline void InnerScenesvr_Fromfriend_GiftExpire::clear_lltouser() {
  lltouser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftExpire::_internal_lltouser() const {
  return lltouser_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftExpire::lltouser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftExpire.llToUser)
  return _internal_lltouser();
}
inline void InnerScenesvr_Fromfriend_GiftExpire::_internal_set_lltouser(uint64_t value) {
  
  lltouser_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftExpire::set_lltouser(uint64_t value) {
  _internal_set_lltouser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftExpire.llToUser)
}

// uint64 llRecver = 2;
inline void InnerScenesvr_Fromfriend_GiftExpire::clear_llrecver() {
  llrecver_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftExpire::_internal_llrecver() const {
  return llrecver_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftExpire::llrecver() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftExpire.llRecver)
  return _internal_llrecver();
}
inline void InnerScenesvr_Fromfriend_GiftExpire::_internal_set_llrecver(uint64_t value) {
  
  llrecver_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftExpire::set_llrecver(uint64_t value) {
  _internal_set_llrecver(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftExpire.llRecver)
}

// uint32 uiItemId = 3;
inline void InnerScenesvr_Fromfriend_GiftExpire::clear_uiitemid() {
  uiitemid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftExpire::_internal_uiitemid() const {
  return uiitemid_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftExpire::uiitemid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftExpire.uiItemId)
  return _internal_uiitemid();
}
inline void InnerScenesvr_Fromfriend_GiftExpire::_internal_set_uiitemid(uint32_t value) {
  
  uiitemid_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftExpire::set_uiitemid(uint32_t value) {
  _internal_set_uiitemid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftExpire.uiItemId)
}

// uint32 uiCount = 4;
inline void InnerScenesvr_Fromfriend_GiftExpire::clear_uicount() {
  uicount_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftExpire::_internal_uicount() const {
  return uicount_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftExpire::uicount() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftExpire.uiCount)
  return _internal_uicount();
}
inline void InnerScenesvr_Fromfriend_GiftExpire::_internal_set_uicount(uint32_t value) {
  
  uicount_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftExpire::set_uicount(uint32_t value) {
  _internal_set_uicount(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftExpire.uiCount)
}

// uint64 llGiftUid = 5;
inline void InnerScenesvr_Fromfriend_GiftExpire::clear_llgiftuid() {
  llgiftuid_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftExpire::_internal_llgiftuid() const {
  return llgiftuid_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftExpire::llgiftuid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftExpire.llGiftUid)
  return _internal_llgiftuid();
}
inline void InnerScenesvr_Fromfriend_GiftExpire::_internal_set_llgiftuid(uint64_t value) {
  
  llgiftuid_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftExpire::set_llgiftuid(uint64_t value) {
  _internal_set_llgiftuid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftExpire.llGiftUid)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_GiftVersion

// uint64 llToUser = 1;
inline void InnerScenesvr_Fromfriend_GiftVersion::clear_lltouser() {
  lltouser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_GiftVersion::_internal_lltouser() const {
  return lltouser_;
}
inline uint64_t InnerScenesvr_Fromfriend_GiftVersion::lltouser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftVersion.llToUser)
  return _internal_lltouser();
}
inline void InnerScenesvr_Fromfriend_GiftVersion::_internal_set_lltouser(uint64_t value) {
  
  lltouser_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftVersion::set_lltouser(uint64_t value) {
  _internal_set_lltouser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftVersion.llToUser)
}

// uint32 uiVersionId = 2;
inline void InnerScenesvr_Fromfriend_GiftVersion::clear_uiversionid() {
  uiversionid_ = 0u;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftVersion::_internal_uiversionid() const {
  return uiversionid_;
}
inline uint32_t InnerScenesvr_Fromfriend_GiftVersion::uiversionid() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_GiftVersion.uiVersionId)
  return _internal_uiversionid();
}
inline void InnerScenesvr_Fromfriend_GiftVersion::_internal_set_uiversionid(uint32_t value) {
  
  uiversionid_ = value;
}
inline void InnerScenesvr_Fromfriend_GiftVersion::set_uiversionid(uint32_t value) {
  _internal_set_uiversionid(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_GiftVersion.uiVersionId)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_FriendList

// uint64 llToUser = 1;
inline void InnerScenesvr_Fromfriend_FriendList::clear_lltouser() {
  lltouser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_FriendList::_internal_lltouser() const {
  return lltouser_;
}
inline uint64_t InnerScenesvr_Fromfriend_FriendList::lltouser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_FriendList.llToUser)
  return _internal_lltouser();
}
inline void InnerScenesvr_Fromfriend_FriendList::_internal_set_lltouser(uint64_t value) {
  
  lltouser_ = value;
}
inline void InnerScenesvr_Fromfriend_FriendList::set_lltouser(uint64_t value) {
  _internal_set_lltouser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_FriendList.llToUser)
}

// .inner.InnerFriendList vecFriendList = 2;
inline bool InnerScenesvr_Fromfriend_FriendList::_internal_has_vecfriendlist() const {
  return this != internal_default_instance() && vecfriendlist_ != nullptr;
}
inline bool InnerScenesvr_Fromfriend_FriendList::has_vecfriendlist() const {
  return _internal_has_vecfriendlist();
}
inline const ::inner::InnerFriendList& InnerScenesvr_Fromfriend_FriendList::_internal_vecfriendlist() const {
  const ::inner::InnerFriendList* p = vecfriendlist_;
  return p != nullptr ? *p : reinterpret_cast<const ::inner::InnerFriendList&>(
      ::inner::_InnerFriendList_default_instance_);
}
inline const ::inner::InnerFriendList& InnerScenesvr_Fromfriend_FriendList::vecfriendlist() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_FriendList.vecFriendList)
  return _internal_vecfriendlist();
}
inline void InnerScenesvr_Fromfriend_FriendList::unsafe_arena_set_allocated_vecfriendlist(
    ::inner::InnerFriendList* vecfriendlist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vecfriendlist_);
  }
  vecfriendlist_ = vecfriendlist;
  if (vecfriendlist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr_Fromfriend_FriendList.vecFriendList)
}
inline ::inner::InnerFriendList* InnerScenesvr_Fromfriend_FriendList::release_vecfriendlist() {
  
  ::inner::InnerFriendList* temp = vecfriendlist_;
  vecfriendlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::inner::InnerFriendList* InnerScenesvr_Fromfriend_FriendList::unsafe_arena_release_vecfriendlist() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr_Fromfriend_FriendList.vecFriendList)
  
  ::inner::InnerFriendList* temp = vecfriendlist_;
  vecfriendlist_ = nullptr;
  return temp;
}
inline ::inner::InnerFriendList* InnerScenesvr_Fromfriend_FriendList::_internal_mutable_vecfriendlist() {
  
  if (vecfriendlist_ == nullptr) {
    auto* p = CreateMaybeMessage<::inner::InnerFriendList>(GetArenaForAllocation());
    vecfriendlist_ = p;
  }
  return vecfriendlist_;
}
inline ::inner::InnerFriendList* InnerScenesvr_Fromfriend_FriendList::mutable_vecfriendlist() {
  ::inner::InnerFriendList* _msg = _internal_mutable_vecfriendlist();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr_Fromfriend_FriendList.vecFriendList)
  return _msg;
}
inline void InnerScenesvr_Fromfriend_FriendList::set_allocated_vecfriendlist(::inner::InnerFriendList* vecfriendlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vecfriendlist_);
  }
  if (vecfriendlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vecfriendlist));
    if (message_arena != submessage_arena) {
      vecfriendlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vecfriendlist, submessage_arena);
    }
    
  } else {
    
  }
  vecfriendlist_ = vecfriendlist;
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr_Fromfriend_FriendList.vecFriendList)
}

// -------------------------------------------------------------------

// InnerScenesvr_Fromfriend_FriendUpdate

// uint64 llToUser = 1;
inline void InnerScenesvr_Fromfriend_FriendUpdate::clear_lltouser() {
  lltouser_ = uint64_t{0u};
}
inline uint64_t InnerScenesvr_Fromfriend_FriendUpdate::_internal_lltouser() const {
  return lltouser_;
}
inline uint64_t InnerScenesvr_Fromfriend_FriendUpdate::lltouser() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_FriendUpdate.llToUser)
  return _internal_lltouser();
}
inline void InnerScenesvr_Fromfriend_FriendUpdate::_internal_set_lltouser(uint64_t value) {
  
  lltouser_ = value;
}
inline void InnerScenesvr_Fromfriend_FriendUpdate::set_lltouser(uint64_t value) {
  _internal_set_lltouser(value);
  // @@protoc_insertion_point(field_set:inner.InnerScenesvr_Fromfriend_FriendUpdate.llToUser)
}

// .inner.InnerFriend oOneFriend = 2;
inline bool InnerScenesvr_Fromfriend_FriendUpdate::_internal_has_oonefriend() const {
  return this != internal_default_instance() && oonefriend_ != nullptr;
}
inline bool InnerScenesvr_Fromfriend_FriendUpdate::has_oonefriend() const {
  return _internal_has_oonefriend();
}
inline const ::inner::InnerFriend& InnerScenesvr_Fromfriend_FriendUpdate::_internal_oonefriend() const {
  const ::inner::InnerFriend* p = oonefriend_;
  return p != nullptr ? *p : reinterpret_cast<const ::inner::InnerFriend&>(
      ::inner::_InnerFriend_default_instance_);
}
inline const ::inner::InnerFriend& InnerScenesvr_Fromfriend_FriendUpdate::oonefriend() const {
  // @@protoc_insertion_point(field_get:inner.InnerScenesvr_Fromfriend_FriendUpdate.oOneFriend)
  return _internal_oonefriend();
}
inline void InnerScenesvr_Fromfriend_FriendUpdate::unsafe_arena_set_allocated_oonefriend(
    ::inner::InnerFriend* oonefriend) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oonefriend_);
  }
  oonefriend_ = oonefriend;
  if (oonefriend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:inner.InnerScenesvr_Fromfriend_FriendUpdate.oOneFriend)
}
inline ::inner::InnerFriend* InnerScenesvr_Fromfriend_FriendUpdate::release_oonefriend() {
  
  ::inner::InnerFriend* temp = oonefriend_;
  oonefriend_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::inner::InnerFriend* InnerScenesvr_Fromfriend_FriendUpdate::unsafe_arena_release_oonefriend() {
  // @@protoc_insertion_point(field_release:inner.InnerScenesvr_Fromfriend_FriendUpdate.oOneFriend)
  
  ::inner::InnerFriend* temp = oonefriend_;
  oonefriend_ = nullptr;
  return temp;
}
inline ::inner::InnerFriend* InnerScenesvr_Fromfriend_FriendUpdate::_internal_mutable_oonefriend() {
  
  if (oonefriend_ == nullptr) {
    auto* p = CreateMaybeMessage<::inner::InnerFriend>(GetArenaForAllocation());
    oonefriend_ = p;
  }
  return oonefriend_;
}
inline ::inner::InnerFriend* InnerScenesvr_Fromfriend_FriendUpdate::mutable_oonefriend() {
  ::inner::InnerFriend* _msg = _internal_mutable_oonefriend();
  // @@protoc_insertion_point(field_mutable:inner.InnerScenesvr_Fromfriend_FriendUpdate.oOneFriend)
  return _msg;
}
inline void InnerScenesvr_Fromfriend_FriendUpdate::set_allocated_oonefriend(::inner::InnerFriend* oonefriend) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(oonefriend_);
  }
  if (oonefriend) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oonefriend));
    if (message_arena != submessage_arena) {
      oonefriend = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oonefriend, submessage_arena);
    }
    
  } else {
    
  }
  oonefriend_ = oonefriend;
  // @@protoc_insertion_point(field_set_allocated:inner.InnerScenesvr_Fromfriend_FriendUpdate.oOneFriend)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace inner

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_scenesvr_2eproto
