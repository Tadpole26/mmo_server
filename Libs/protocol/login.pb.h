// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_login_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_login_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "logincommon.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_login_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_login_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_login_2eproto;
namespace client {
class ModuleLogin_Ntf_CreateRole;
struct ModuleLogin_Ntf_CreateRoleDefaultTypeInternal;
extern ModuleLogin_Ntf_CreateRoleDefaultTypeInternal _ModuleLogin_Ntf_CreateRole_default_instance_;
class ModuleLogin_Ntf_KeepHeart;
struct ModuleLogin_Ntf_KeepHeartDefaultTypeInternal;
extern ModuleLogin_Ntf_KeepHeartDefaultTypeInternal _ModuleLogin_Ntf_KeepHeart_default_instance_;
class ModuleLogin_Ntf_LoginGateway;
struct ModuleLogin_Ntf_LoginGatewayDefaultTypeInternal;
extern ModuleLogin_Ntf_LoginGatewayDefaultTypeInternal _ModuleLogin_Ntf_LoginGateway_default_instance_;
class ModuleLogin_Req_CreateRole;
struct ModuleLogin_Req_CreateRoleDefaultTypeInternal;
extern ModuleLogin_Req_CreateRoleDefaultTypeInternal _ModuleLogin_Req_CreateRole_default_instance_;
class ModuleLogin_Req_KeepHeart;
struct ModuleLogin_Req_KeepHeartDefaultTypeInternal;
extern ModuleLogin_Req_KeepHeartDefaultTypeInternal _ModuleLogin_Req_KeepHeart_default_instance_;
class ModuleLogin_Req_LoginGateway;
struct ModuleLogin_Req_LoginGatewayDefaultTypeInternal;
extern ModuleLogin_Req_LoginGatewayDefaultTypeInternal _ModuleLogin_Req_LoginGateway_default_instance_;
}  // namespace client
PROTOBUF_NAMESPACE_OPEN
template<> ::client::ModuleLogin_Ntf_CreateRole* Arena::CreateMaybeMessage<::client::ModuleLogin_Ntf_CreateRole>(Arena*);
template<> ::client::ModuleLogin_Ntf_KeepHeart* Arena::CreateMaybeMessage<::client::ModuleLogin_Ntf_KeepHeart>(Arena*);
template<> ::client::ModuleLogin_Ntf_LoginGateway* Arena::CreateMaybeMessage<::client::ModuleLogin_Ntf_LoginGateway>(Arena*);
template<> ::client::ModuleLogin_Req_CreateRole* Arena::CreateMaybeMessage<::client::ModuleLogin_Req_CreateRole>(Arena*);
template<> ::client::ModuleLogin_Req_KeepHeart* Arena::CreateMaybeMessage<::client::ModuleLogin_Req_KeepHeart>(Arena*);
template<> ::client::ModuleLogin_Req_LoginGateway* Arena::CreateMaybeMessage<::client::ModuleLogin_Req_LoginGateway>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace client {

enum enModuleLogin : int {
  enModuleLogin_None = 0,
  enModuleLogin_Req_LoginGateway = 1,
  enModuleLogin_Ntf_LoginGateway = 2,
  enModuleLogin_Req_KeepHeart = 3,
  enModuleLogin_Ntf_KeepHeart = 4,
  enModuleLogin_Req_CreateRole = 5,
  enModuleLogin_Ntf_CreateRole = 6,
  enModuleLogin_RealMax = 7,
  enModuleLogin_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  enModuleLogin_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool enModuleLogin_IsValid(int value);
constexpr enModuleLogin enModuleLogin_MIN = enModuleLogin_None;
constexpr enModuleLogin enModuleLogin_MAX = enModuleLogin_RealMax;
constexpr int enModuleLogin_ARRAYSIZE = enModuleLogin_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enModuleLogin_descriptor();
template<typename T>
inline const std::string& enModuleLogin_Name(T enum_t_value) {
  static_assert(::std::is_same<T, enModuleLogin>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function enModuleLogin_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    enModuleLogin_descriptor(), enum_t_value);
}
inline bool enModuleLogin_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, enModuleLogin* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<enModuleLogin>(
    enModuleLogin_descriptor(), name, value);
}
// ===================================================================

class ModuleLogin_Req_LoginGateway final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleLogin_Req_LoginGateway) */ {
 public:
  inline ModuleLogin_Req_LoginGateway() : ModuleLogin_Req_LoginGateway(nullptr) {}
  ~ModuleLogin_Req_LoginGateway() override;
  explicit PROTOBUF_CONSTEXPR ModuleLogin_Req_LoginGateway(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleLogin_Req_LoginGateway(const ModuleLogin_Req_LoginGateway& from);
  ModuleLogin_Req_LoginGateway(ModuleLogin_Req_LoginGateway&& from) noexcept
    : ModuleLogin_Req_LoginGateway() {
    *this = ::std::move(from);
  }

  inline ModuleLogin_Req_LoginGateway& operator=(const ModuleLogin_Req_LoginGateway& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLogin_Req_LoginGateway& operator=(ModuleLogin_Req_LoginGateway&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleLogin_Req_LoginGateway& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleLogin_Req_LoginGateway* internal_default_instance() {
    return reinterpret_cast<const ModuleLogin_Req_LoginGateway*>(
               &_ModuleLogin_Req_LoginGateway_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModuleLogin_Req_LoginGateway& a, ModuleLogin_Req_LoginGateway& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLogin_Req_LoginGateway* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleLogin_Req_LoginGateway* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleLogin_Req_LoginGateway* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleLogin_Req_LoginGateway>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleLogin_Req_LoginGateway& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleLogin_Req_LoginGateway& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleLogin_Req_LoginGateway* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleLogin_Req_LoginGateway";
  }
  protected:
  explicit ModuleLogin_Req_LoginGateway(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccIdFieldNumber = 1,
  };
  // uint64 accId = 1;
  void clear_accid();
  uint64_t accid() const;
  void set_accid(uint64_t value);
  private:
  uint64_t _internal_accid() const;
  void _internal_set_accid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleLogin_Req_LoginGateway)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t accid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ModuleLogin_Ntf_LoginGateway final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleLogin_Ntf_LoginGateway) */ {
 public:
  inline ModuleLogin_Ntf_LoginGateway() : ModuleLogin_Ntf_LoginGateway(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleLogin_Ntf_LoginGateway(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleLogin_Ntf_LoginGateway(const ModuleLogin_Ntf_LoginGateway& from);
  ModuleLogin_Ntf_LoginGateway(ModuleLogin_Ntf_LoginGateway&& from) noexcept
    : ModuleLogin_Ntf_LoginGateway() {
    *this = ::std::move(from);
  }

  inline ModuleLogin_Ntf_LoginGateway& operator=(const ModuleLogin_Ntf_LoginGateway& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLogin_Ntf_LoginGateway& operator=(ModuleLogin_Ntf_LoginGateway&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleLogin_Ntf_LoginGateway& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleLogin_Ntf_LoginGateway* internal_default_instance() {
    return reinterpret_cast<const ModuleLogin_Ntf_LoginGateway*>(
               &_ModuleLogin_Ntf_LoginGateway_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModuleLogin_Ntf_LoginGateway& a, ModuleLogin_Ntf_LoginGateway& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLogin_Ntf_LoginGateway* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleLogin_Ntf_LoginGateway* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleLogin_Ntf_LoginGateway* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleLogin_Ntf_LoginGateway>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleLogin_Ntf_LoginGateway& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleLogin_Ntf_LoginGateway& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleLogin_Ntf_LoginGateway";
  }
  protected:
  explicit ModuleLogin_Ntf_LoginGateway(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleLogin_Ntf_LoginGateway)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ModuleLogin_Req_KeepHeart final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleLogin_Req_KeepHeart) */ {
 public:
  inline ModuleLogin_Req_KeepHeart() : ModuleLogin_Req_KeepHeart(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleLogin_Req_KeepHeart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleLogin_Req_KeepHeart(const ModuleLogin_Req_KeepHeart& from);
  ModuleLogin_Req_KeepHeart(ModuleLogin_Req_KeepHeart&& from) noexcept
    : ModuleLogin_Req_KeepHeart() {
    *this = ::std::move(from);
  }

  inline ModuleLogin_Req_KeepHeart& operator=(const ModuleLogin_Req_KeepHeart& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLogin_Req_KeepHeart& operator=(ModuleLogin_Req_KeepHeart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleLogin_Req_KeepHeart& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleLogin_Req_KeepHeart* internal_default_instance() {
    return reinterpret_cast<const ModuleLogin_Req_KeepHeart*>(
               &_ModuleLogin_Req_KeepHeart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ModuleLogin_Req_KeepHeart& a, ModuleLogin_Req_KeepHeart& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLogin_Req_KeepHeart* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleLogin_Req_KeepHeart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleLogin_Req_KeepHeart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleLogin_Req_KeepHeart>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleLogin_Req_KeepHeart& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleLogin_Req_KeepHeart& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleLogin_Req_KeepHeart";
  }
  protected:
  explicit ModuleLogin_Req_KeepHeart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleLogin_Req_KeepHeart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ModuleLogin_Ntf_KeepHeart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleLogin_Ntf_KeepHeart) */ {
 public:
  inline ModuleLogin_Ntf_KeepHeart() : ModuleLogin_Ntf_KeepHeart(nullptr) {}
  ~ModuleLogin_Ntf_KeepHeart() override;
  explicit PROTOBUF_CONSTEXPR ModuleLogin_Ntf_KeepHeart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleLogin_Ntf_KeepHeart(const ModuleLogin_Ntf_KeepHeart& from);
  ModuleLogin_Ntf_KeepHeart(ModuleLogin_Ntf_KeepHeart&& from) noexcept
    : ModuleLogin_Ntf_KeepHeart() {
    *this = ::std::move(from);
  }

  inline ModuleLogin_Ntf_KeepHeart& operator=(const ModuleLogin_Ntf_KeepHeart& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLogin_Ntf_KeepHeart& operator=(ModuleLogin_Ntf_KeepHeart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleLogin_Ntf_KeepHeart& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleLogin_Ntf_KeepHeart* internal_default_instance() {
    return reinterpret_cast<const ModuleLogin_Ntf_KeepHeart*>(
               &_ModuleLogin_Ntf_KeepHeart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ModuleLogin_Ntf_KeepHeart& a, ModuleLogin_Ntf_KeepHeart& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLogin_Ntf_KeepHeart* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleLogin_Ntf_KeepHeart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleLogin_Ntf_KeepHeart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleLogin_Ntf_KeepHeart>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleLogin_Ntf_KeepHeart& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleLogin_Ntf_KeepHeart& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleLogin_Ntf_KeepHeart* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleLogin_Ntf_KeepHeart";
  }
  protected:
  explicit ModuleLogin_Ntf_KeepHeart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerTimeFieldNumber = 1,
  };
  // uint64 serverTime = 1;
  void clear_servertime();
  uint64_t servertime() const;
  void set_servertime(uint64_t value);
  private:
  uint64_t _internal_servertime() const;
  void _internal_set_servertime(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:client.ModuleLogin_Ntf_KeepHeart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t servertime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ModuleLogin_Req_CreateRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:client.ModuleLogin_Req_CreateRole) */ {
 public:
  inline ModuleLogin_Req_CreateRole() : ModuleLogin_Req_CreateRole(nullptr) {}
  ~ModuleLogin_Req_CreateRole() override;
  explicit PROTOBUF_CONSTEXPR ModuleLogin_Req_CreateRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleLogin_Req_CreateRole(const ModuleLogin_Req_CreateRole& from);
  ModuleLogin_Req_CreateRole(ModuleLogin_Req_CreateRole&& from) noexcept
    : ModuleLogin_Req_CreateRole() {
    *this = ::std::move(from);
  }

  inline ModuleLogin_Req_CreateRole& operator=(const ModuleLogin_Req_CreateRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLogin_Req_CreateRole& operator=(ModuleLogin_Req_CreateRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleLogin_Req_CreateRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleLogin_Req_CreateRole* internal_default_instance() {
    return reinterpret_cast<const ModuleLogin_Req_CreateRole*>(
               &_ModuleLogin_Req_CreateRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ModuleLogin_Req_CreateRole& a, ModuleLogin_Req_CreateRole& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLogin_Req_CreateRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleLogin_Req_CreateRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleLogin_Req_CreateRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleLogin_Req_CreateRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ModuleLogin_Req_CreateRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ModuleLogin_Req_CreateRole& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleLogin_Req_CreateRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleLogin_Req_CreateRole";
  }
  protected:
  explicit ModuleLogin_Req_CreateRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleFieldNumber = 1,
  };
  // .common.ZoneCreateRole role = 1;
  bool has_role() const;
  private:
  bool _internal_has_role() const;
  public:
  void clear_role();
  const ::common::ZoneCreateRole& role() const;
  PROTOBUF_NODISCARD ::common::ZoneCreateRole* release_role();
  ::common::ZoneCreateRole* mutable_role();
  void set_allocated_role(::common::ZoneCreateRole* role);
  private:
  const ::common::ZoneCreateRole& _internal_role() const;
  ::common::ZoneCreateRole* _internal_mutable_role();
  public:
  void unsafe_arena_set_allocated_role(
      ::common::ZoneCreateRole* role);
  ::common::ZoneCreateRole* unsafe_arena_release_role();

  // @@protoc_insertion_point(class_scope:client.ModuleLogin_Req_CreateRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::common::ZoneCreateRole* role_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class ModuleLogin_Ntf_CreateRole final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:client.ModuleLogin_Ntf_CreateRole) */ {
 public:
  inline ModuleLogin_Ntf_CreateRole() : ModuleLogin_Ntf_CreateRole(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ModuleLogin_Ntf_CreateRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModuleLogin_Ntf_CreateRole(const ModuleLogin_Ntf_CreateRole& from);
  ModuleLogin_Ntf_CreateRole(ModuleLogin_Ntf_CreateRole&& from) noexcept
    : ModuleLogin_Ntf_CreateRole() {
    *this = ::std::move(from);
  }

  inline ModuleLogin_Ntf_CreateRole& operator=(const ModuleLogin_Ntf_CreateRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLogin_Ntf_CreateRole& operator=(ModuleLogin_Ntf_CreateRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleLogin_Ntf_CreateRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleLogin_Ntf_CreateRole* internal_default_instance() {
    return reinterpret_cast<const ModuleLogin_Ntf_CreateRole*>(
               &_ModuleLogin_Ntf_CreateRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ModuleLogin_Ntf_CreateRole& a, ModuleLogin_Ntf_CreateRole& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLogin_Ntf_CreateRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleLogin_Ntf_CreateRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleLogin_Ntf_CreateRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModuleLogin_Ntf_CreateRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ModuleLogin_Ntf_CreateRole& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ModuleLogin_Ntf_CreateRole& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "client.ModuleLogin_Ntf_CreateRole";
  }
  protected:
  explicit ModuleLogin_Ntf_CreateRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:client.ModuleLogin_Ntf_CreateRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_login_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModuleLogin_Req_LoginGateway

// uint64 accId = 1;
inline void ModuleLogin_Req_LoginGateway::clear_accid() {
  accid_ = uint64_t{0u};
}
inline uint64_t ModuleLogin_Req_LoginGateway::_internal_accid() const {
  return accid_;
}
inline uint64_t ModuleLogin_Req_LoginGateway::accid() const {
  // @@protoc_insertion_point(field_get:client.ModuleLogin_Req_LoginGateway.accId)
  return _internal_accid();
}
inline void ModuleLogin_Req_LoginGateway::_internal_set_accid(uint64_t value) {
  
  accid_ = value;
}
inline void ModuleLogin_Req_LoginGateway::set_accid(uint64_t value) {
  _internal_set_accid(value);
  // @@protoc_insertion_point(field_set:client.ModuleLogin_Req_LoginGateway.accId)
}

// -------------------------------------------------------------------

// ModuleLogin_Ntf_LoginGateway

// -------------------------------------------------------------------

// ModuleLogin_Req_KeepHeart

// -------------------------------------------------------------------

// ModuleLogin_Ntf_KeepHeart

// uint64 serverTime = 1;
inline void ModuleLogin_Ntf_KeepHeart::clear_servertime() {
  servertime_ = uint64_t{0u};
}
inline uint64_t ModuleLogin_Ntf_KeepHeart::_internal_servertime() const {
  return servertime_;
}
inline uint64_t ModuleLogin_Ntf_KeepHeart::servertime() const {
  // @@protoc_insertion_point(field_get:client.ModuleLogin_Ntf_KeepHeart.serverTime)
  return _internal_servertime();
}
inline void ModuleLogin_Ntf_KeepHeart::_internal_set_servertime(uint64_t value) {
  
  servertime_ = value;
}
inline void ModuleLogin_Ntf_KeepHeart::set_servertime(uint64_t value) {
  _internal_set_servertime(value);
  // @@protoc_insertion_point(field_set:client.ModuleLogin_Ntf_KeepHeart.serverTime)
}

// -------------------------------------------------------------------

// ModuleLogin_Req_CreateRole

// .common.ZoneCreateRole role = 1;
inline bool ModuleLogin_Req_CreateRole::_internal_has_role() const {
  return this != internal_default_instance() && role_ != nullptr;
}
inline bool ModuleLogin_Req_CreateRole::has_role() const {
  return _internal_has_role();
}
inline const ::common::ZoneCreateRole& ModuleLogin_Req_CreateRole::_internal_role() const {
  const ::common::ZoneCreateRole* p = role_;
  return p != nullptr ? *p : reinterpret_cast<const ::common::ZoneCreateRole&>(
      ::common::_ZoneCreateRole_default_instance_);
}
inline const ::common::ZoneCreateRole& ModuleLogin_Req_CreateRole::role() const {
  // @@protoc_insertion_point(field_get:client.ModuleLogin_Req_CreateRole.role)
  return _internal_role();
}
inline void ModuleLogin_Req_CreateRole::unsafe_arena_set_allocated_role(
    ::common::ZoneCreateRole* role) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(role_);
  }
  role_ = role;
  if (role) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:client.ModuleLogin_Req_CreateRole.role)
}
inline ::common::ZoneCreateRole* ModuleLogin_Req_CreateRole::release_role() {
  
  ::common::ZoneCreateRole* temp = role_;
  role_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::common::ZoneCreateRole* ModuleLogin_Req_CreateRole::unsafe_arena_release_role() {
  // @@protoc_insertion_point(field_release:client.ModuleLogin_Req_CreateRole.role)
  
  ::common::ZoneCreateRole* temp = role_;
  role_ = nullptr;
  return temp;
}
inline ::common::ZoneCreateRole* ModuleLogin_Req_CreateRole::_internal_mutable_role() {
  
  if (role_ == nullptr) {
    auto* p = CreateMaybeMessage<::common::ZoneCreateRole>(GetArenaForAllocation());
    role_ = p;
  }
  return role_;
}
inline ::common::ZoneCreateRole* ModuleLogin_Req_CreateRole::mutable_role() {
  ::common::ZoneCreateRole* _msg = _internal_mutable_role();
  // @@protoc_insertion_point(field_mutable:client.ModuleLogin_Req_CreateRole.role)
  return _msg;
}
inline void ModuleLogin_Req_CreateRole::set_allocated_role(::common::ZoneCreateRole* role) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(role_);
  }
  if (role) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(role));
    if (message_arena != submessage_arena) {
      role = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:client.ModuleLogin_Req_CreateRole.role)
}

// -------------------------------------------------------------------

// ModuleLogin_Ntf_CreateRole

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::client::enModuleLogin> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::enModuleLogin>() {
  return ::client::enModuleLogin_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_login_2eproto
