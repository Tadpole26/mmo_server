// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: errorcode.proto

#include "errorcode.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace client {
}  // namespace client
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_errorcode_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_errorcode_2eproto = nullptr;
const uint32_t TableStruct_errorcode_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_errorcode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017errorcode.proto\022\006client*\242\003\n\013enErrorCod"
  "e\022\021\n\rECode_Success\020\000\022\"\n\035ECode_Login_Role"
  "NameCollision\020\351\007\022\027\n\022ECode_Login_NoRole\020\352"
  "\007\022\033\n\026ECode_Login_RoleInGame\020\353\007\022\033\n\026ECode_"
  "Login_CheckOften\020\354\007\022\031\n\024ECode_Login_NoInG"
  "ame\020\355\007\022\034\n\027ECode_Login_NameTooLong\020\356\007\022\035\n\030"
  "ECode_Login_NameNotRight\020\357\007\022\036\n\031ECode_Log"
  "in_DeviceNotSame\020\360\007\022\037\n\032ECode_Login_Relog"
  "inTimeout\020\361\007\022\030\n\023ECode_Login_Failure\020\362\007\022\034"
  "\n\027ECode_Match_RoomRelease\020\321\017\022\035\n\030ECode_Ma"
  "tch_NotEnterRoom\020\322\017\022\031\n\024ECode_Match_FullR"
  "oom\020\323\017b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_errorcode_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_errorcode_2eproto = {
    false, false, 454, descriptor_table_protodef_errorcode_2eproto,
    "errorcode.proto",
    &descriptor_table_errorcode_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_errorcode_2eproto::offsets,
    nullptr, file_level_enum_descriptors_errorcode_2eproto,
    file_level_service_descriptors_errorcode_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_errorcode_2eproto_getter() {
  return &descriptor_table_errorcode_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_errorcode_2eproto(&descriptor_table_errorcode_2eproto);
namespace client {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_errorcode_2eproto);
  return file_level_enum_descriptors_errorcode_2eproto[0];
}
bool enErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 2001:
    case 2002:
    case 2003:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace client
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
