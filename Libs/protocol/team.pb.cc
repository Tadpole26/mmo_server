// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: team.proto

#include "team.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace client {
PROTOBUF_CONSTEXPR ModuleTeam_Req_CreateTeam::ModuleTeam_Req_CreateTeam(
    ::_pbi::ConstantInitialized)
  : targetid_(0u)
  , minlevel_(0u)
  , maxlevel_(0u){}
struct ModuleTeam_Req_CreateTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_CreateTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_CreateTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_CreateTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_CreateTeamDefaultTypeInternal _ModuleTeam_Req_CreateTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_CreateTeam::ModuleTeam_Ntf_CreateTeam(
    ::_pbi::ConstantInitialized)
  : base_(nullptr)
  , memberlist_(nullptr)
  , notteam_(nullptr)
  , ownteam_(nullptr){}
struct ModuleTeam_Ntf_CreateTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_CreateTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_CreateTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_CreateTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_CreateTeamDefaultTypeInternal _ModuleTeam_Ntf_CreateTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_SelfJoinTeam::ModuleTeam_Ntf_SelfJoinTeam(
    ::_pbi::ConstantInitialized)
  : base_(nullptr)
  , memberlist_(nullptr)
  , notteam_(nullptr)
  , ownteam_(nullptr){}
struct ModuleTeam_Ntf_SelfJoinTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_SelfJoinTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_SelfJoinTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_SelfJoinTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_SelfJoinTeamDefaultTypeInternal _ModuleTeam_Ntf_SelfJoinTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_UpdateTeam::ModuleTeam_Ntf_UpdateTeam(
    ::_pbi::ConstantInitialized)
  : fieldlist_(nullptr){}
struct ModuleTeam_Ntf_UpdateTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_UpdateTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_UpdateTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_UpdateTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_UpdateTeamDefaultTypeInternal _ModuleTeam_Ntf_UpdateTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_AddMember::ModuleTeam_Ntf_AddMember(
    ::_pbi::ConstantInitialized)
  : memeberlist_(nullptr){}
struct ModuleTeam_Ntf_AddMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_AddMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_AddMemberDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_AddMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_AddMemberDefaultTypeInternal _ModuleTeam_Ntf_AddMember_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_RemoveMember::ModuleTeam_Ntf_RemoveMember(
    ::_pbi::ConstantInitialized)
  : roleids_()
  , _roleids_cached_byte_size_(0){}
struct ModuleTeam_Ntf_RemoveMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_RemoveMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_RemoveMemberDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_RemoveMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_RemoveMemberDefaultTypeInternal _ModuleTeam_Ntf_RemoveMember_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_UpdateMember::ModuleTeam_Ntf_UpdateMember(
    ::_pbi::ConstantInitialized)
  : fieldlist_(nullptr)
  , roleid_(uint64_t{0u}){}
struct ModuleTeam_Ntf_UpdateMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_UpdateMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_UpdateMemberDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_UpdateMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_UpdateMemberDefaultTypeInternal _ModuleTeam_Ntf_UpdateMember_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderFireMember::ModuleTeam_Req_LeaderFireMember(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u}){}
struct ModuleTeam_Req_LeaderFireMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderFireMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderFireMemberDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderFireMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderFireMemberDefaultTypeInternal _ModuleTeam_Req_LeaderFireMember_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderChangeTarget::ModuleTeam_Req_LeaderChangeTarget(
    ::_pbi::ConstantInitialized)
  : targetid_(0u)
  , minlevel_(0u)
  , maxlevel_(0u){}
struct ModuleTeam_Req_LeaderChangeTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderChangeTargetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderChangeTargetDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderChangeTarget _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderChangeTargetDefaultTypeInternal _ModuleTeam_Req_LeaderChangeTarget_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderCancelMatch::ModuleTeam_Req_LeaderCancelMatch(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_LeaderCancelMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderCancelMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderCancelMatchDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderCancelMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderCancelMatchDefaultTypeInternal _ModuleTeam_Req_LeaderCancelMatch_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderTogetherMember::ModuleTeam_Req_LeaderTogetherMember(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u}){}
struct ModuleTeam_Req_LeaderTogetherMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderTogetherMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderTogetherMemberDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderTogetherMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderTogetherMemberDefaultTypeInternal _ModuleTeam_Req_LeaderTogetherMember_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderAppoint::ModuleTeam_Req_LeaderAppoint(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u}){}
struct ModuleTeam_Req_LeaderAppointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderAppointDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderAppointDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderAppoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderAppointDefaultTypeInternal _ModuleTeam_Req_LeaderAppoint_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderRefuseAllApply::ModuleTeam_Req_LeaderRefuseAllApply(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_LeaderRefuseAllApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderRefuseAllApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderRefuseAllApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderRefuseAllApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderRefuseAllApplyDefaultTypeInternal _ModuleTeam_Req_LeaderRefuseAllApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderAgreeAllApply::ModuleTeam_Req_LeaderAgreeAllApply(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_LeaderAgreeAllApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderAgreeAllApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderAgreeAllApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderAgreeAllApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderAgreeAllApplyDefaultTypeInternal _ModuleTeam_Req_LeaderAgreeAllApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderRefuseApply::ModuleTeam_Req_LeaderRefuseApply(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u})
  , zoneidf_(0u){}
struct ModuleTeam_Req_LeaderRefuseApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderRefuseApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderRefuseApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderRefuseApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderRefuseApplyDefaultTypeInternal _ModuleTeam_Req_LeaderRefuseApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderAgreeApply::ModuleTeam_Req_LeaderAgreeApply(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u})
  , zoneidf_(0u){}
struct ModuleTeam_Req_LeaderAgreeApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderAgreeApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderAgreeApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderAgreeApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderAgreeApplyDefaultTypeInternal _ModuleTeam_Req_LeaderAgreeApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderAddApply::ModuleTeam_Ntf_LeaderAddApply(
    ::_pbi::ConstantInitialized)
  : applylist_(nullptr){}
struct ModuleTeam_Ntf_LeaderAddApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderAddApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_LeaderAddApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_LeaderAddApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_LeaderAddApplyDefaultTypeInternal _ModuleTeam_Ntf_LeaderAddApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderRemoveApply::ModuleTeam_Ntf_LeaderRemoveApply(
    ::_pbi::ConstantInitialized)
  : roleids_()
  , _roleids_cached_byte_size_(0){}
struct ModuleTeam_Ntf_LeaderRemoveApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderRemoveApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_LeaderRemoveApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_LeaderRemoveApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_LeaderRemoveApplyDefaultTypeInternal _ModuleTeam_Ntf_LeaderRemoveApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderUpdateApply::ModuleTeam_Ntf_LeaderUpdateApply(
    ::_pbi::ConstantInitialized)
  : applylist_(nullptr){}
struct ModuleTeam_Ntf_LeaderUpdateApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderUpdateApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_LeaderUpdateApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_LeaderUpdateApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_LeaderUpdateApplyDefaultTypeInternal _ModuleTeam_Ntf_LeaderUpdateApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_InviteFriend::ModuleTeam_Req_InviteFriend(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u}){}
struct ModuleTeam_Req_InviteFriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_InviteFriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_InviteFriendDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_InviteFriend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_InviteFriendDefaultTypeInternal _ModuleTeam_Req_InviteFriend_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_InviteFamily::ModuleTeam_Req_InviteFamily(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u}){}
struct ModuleTeam_Req_InviteFamilyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_InviteFamilyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_InviteFamilyDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_InviteFamily _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_InviteFamilyDefaultTypeInternal _ModuleTeam_Req_InviteFamily_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_InvitePlayer::ModuleTeam_Req_InvitePlayer(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u})
  , zoneidf_(0u){}
struct ModuleTeam_Req_InvitePlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_InvitePlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_InvitePlayerDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_InvitePlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_InvitePlayerDefaultTypeInternal _ModuleTeam_Req_InvitePlayer_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_AddInvited::ModuleTeam_Ntf_AddInvited(
    ::_pbi::ConstantInitialized)
  : invited_(nullptr){}
struct ModuleTeam_Ntf_AddInvitedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_AddInvitedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_AddInvitedDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_AddInvited _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_AddInvitedDefaultTypeInternal _ModuleTeam_Ntf_AddInvited_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_AgreeInvited::ModuleTeam_Req_AgreeInvited(
    ::_pbi::ConstantInitialized)
  : teamid_(uint64_t{0u})
  , leadersceneid_(uint64_t{0u}){}
struct ModuleTeam_Req_AgreeInvitedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_AgreeInvitedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_AgreeInvitedDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_AgreeInvited _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_AgreeInvitedDefaultTypeInternal _ModuleTeam_Req_AgreeInvited_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_RefuseInvited::ModuleTeam_Req_RefuseInvited(
    ::_pbi::ConstantInitialized)
  : teamid_(uint64_t{0u}){}
struct ModuleTeam_Req_RefuseInvitedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_RefuseInvitedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_RefuseInvitedDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_RefuseInvited _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_RefuseInvitedDefaultTypeInternal _ModuleTeam_Req_RefuseInvited_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaveTeam::ModuleTeam_Req_LeaveTeam(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_LeaveTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaveTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaveTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaveTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaveTeamDefaultTypeInternal _ModuleTeam_Req_LeaveTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaveTeam::ModuleTeam_Ntf_LeaveTeam(
    ::_pbi::ConstantInitialized)
  : type_(0u){}
struct ModuleTeam_Ntf_LeaveTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaveTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_LeaveTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_LeaveTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_LeaveTeamDefaultTypeInternal _ModuleTeam_Ntf_LeaveTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_ApplyTeam::ModuleTeam_Req_ApplyTeam(
    ::_pbi::ConstantInitialized)
  : teamid_(uint64_t{0u})
  , leadersceneid_(uint64_t{0u}){}
struct ModuleTeam_Req_ApplyTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_ApplyTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_ApplyTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_ApplyTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_ApplyTeamDefaultTypeInternal _ModuleTeam_Req_ApplyTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_FollowLeader::ModuleTeam_Req_FollowLeader(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_FollowLeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_FollowLeaderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_FollowLeaderDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_FollowLeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_FollowLeaderDefaultTypeInternal _ModuleTeam_Req_FollowLeader_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_CancelFollow::ModuleTeam_Req_CancelFollow(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_CancelFollowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_CancelFollowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_CancelFollowDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_CancelFollow _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_CancelFollowDefaultTypeInternal _ModuleTeam_Req_CancelFollow_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_AreeTogether::ModuleTeam_Req_AreeTogether(
    ::_pbi::ConstantInitialized)
  : teamid_(uint64_t{0u}){}
struct ModuleTeam_Req_AreeTogetherDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_AreeTogetherDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_AreeTogetherDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_AreeTogether _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_AreeTogetherDefaultTypeInternal _ModuleTeam_Req_AreeTogether_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_RefuseTogether::ModuleTeam_Req_RefuseTogether(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_RefuseTogetherDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_RefuseTogetherDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_RefuseTogetherDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_RefuseTogether _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_RefuseTogetherDefaultTypeInternal _ModuleTeam_Req_RefuseTogether_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_ReplaceLeader::ModuleTeam_Req_ReplaceLeader(
    ::_pbi::ConstantInitialized)
  : roleid_(uint64_t{0u}){}
struct ModuleTeam_Req_ReplaceLeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_ReplaceLeaderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_ReplaceLeaderDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_ReplaceLeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_ReplaceLeaderDefaultTypeInternal _ModuleTeam_Req_ReplaceLeader_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_PersonChangeTarget::ModuleTeam_Req_PersonChangeTarget(
    ::_pbi::ConstantInitialized)
  : targerid_(0u){}
struct ModuleTeam_Req_PersonChangeTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_PersonChangeTargetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_PersonChangeTargetDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_PersonChangeTarget _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_PersonChangeTargetDefaultTypeInternal _ModuleTeam_Req_PersonChangeTarget_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_PersonCancelMatch::ModuleTeam_Req_PersonCancelMatch(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_PersonCancelMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_PersonCancelMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_PersonCancelMatchDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_PersonCancelMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_PersonCancelMatchDefaultTypeInternal _ModuleTeam_Req_PersonCancelMatch_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderTogetherMember::ModuleTeam_Ntf_LeaderTogetherMember(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Ntf_LeaderTogetherMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderTogetherMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_LeaderTogetherMemberDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_LeaderTogetherMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_LeaderTogetherMemberDefaultTypeInternal _ModuleTeam_Ntf_LeaderTogetherMember_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderEmptyApply::ModuleTeam_Ntf_LeaderEmptyApply(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Ntf_LeaderEmptyApplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_LeaderEmptyApplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_LeaderEmptyApplyDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_LeaderEmptyApply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_LeaderEmptyApplyDefaultTypeInternal _ModuleTeam_Ntf_LeaderEmptyApply_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_TeamRecruitInfo::ModuleTeam_Ntf_TeamRecruitInfo(
    ::_pbi::ConstantInitialized)
  : recruit_(nullptr){}
struct ModuleTeam_Ntf_TeamRecruitInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_TeamRecruitInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_TeamRecruitInfoDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_TeamRecruitInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_TeamRecruitInfoDefaultTypeInternal _ModuleTeam_Ntf_TeamRecruitInfo_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderStartMatch::ModuleTeam_Req_LeaderStartMatch(
    ::_pbi::ConstantInitialized)
  : text_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModuleTeam_Req_LeaderStartMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_LeaderStartMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_LeaderStartMatchDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_LeaderStartMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_LeaderStartMatchDefaultTypeInternal _ModuleTeam_Req_LeaderStartMatch_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_VoteBegin::ModuleTeam_Ntf_VoteBegin(
    ::_pbi::ConstantInitialized)
  : base_(nullptr)
  , rolelist_(nullptr){}
struct ModuleTeam_Ntf_VoteBeginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_VoteBeginDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_VoteBeginDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_VoteBegin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_VoteBeginDefaultTypeInternal _ModuleTeam_Ntf_VoteBegin_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_Vote::ModuleTeam_Req_Vote(
    ::_pbi::ConstantInitialized)
  : agree_(false){}
struct ModuleTeam_Req_VoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_VoteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_VoteDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_Vote _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_VoteDefaultTypeInternal _ModuleTeam_Req_Vote_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_VoteUpdate::ModuleTeam_Ntf_VoteUpdate(
    ::_pbi::ConstantInitialized)
  : role_(nullptr){}
struct ModuleTeam_Ntf_VoteUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_VoteUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_VoteUpdateDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_VoteUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_VoteUpdateDefaultTypeInternal _ModuleTeam_Ntf_VoteUpdate_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_VoteEnd::ModuleTeam_Ntf_VoteEnd(
    ::_pbi::ConstantInitialized)
  : pass_(false){}
struct ModuleTeam_Ntf_VoteEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_VoteEndDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_VoteEndDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_VoteEnd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_VoteEndDefaultTypeInternal _ModuleTeam_Ntf_VoteEnd_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Ntf_MountTeam::ModuleTeam_Ntf_MountTeam(
    ::_pbi::ConstantInitialized)
  : team_(nullptr){}
struct ModuleTeam_Ntf_MountTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Ntf_MountTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Ntf_MountTeamDefaultTypeInternal() {}
  union {
    ModuleTeam_Ntf_MountTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Ntf_MountTeamDefaultTypeInternal _ModuleTeam_Ntf_MountTeam_default_instance_;
PROTOBUF_CONSTEXPR ModuleTeam_Req_FollowJumpMap::ModuleTeam_Req_FollowJumpMap(
    ::_pbi::ConstantInitialized){}
struct ModuleTeam_Req_FollowJumpMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleTeam_Req_FollowJumpMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleTeam_Req_FollowJumpMapDefaultTypeInternal() {}
  union {
    ModuleTeam_Req_FollowJumpMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleTeam_Req_FollowJumpMapDefaultTypeInternal _ModuleTeam_Req_FollowJumpMap_default_instance_;
}  // namespace client
static ::_pb::Metadata file_level_metadata_team_2eproto[45];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_team_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_team_2eproto = nullptr;

const uint32_t TableStruct_team_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_CreateTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_CreateTeam, targetid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_CreateTeam, minlevel_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_CreateTeam, maxlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_CreateTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_CreateTeam, base_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_CreateTeam, memberlist_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_CreateTeam, notteam_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_CreateTeam, ownteam_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_SelfJoinTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_SelfJoinTeam, base_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_SelfJoinTeam, memberlist_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_SelfJoinTeam, notteam_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_SelfJoinTeam, ownteam_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_UpdateTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_UpdateTeam, fieldlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_AddMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_AddMember, memeberlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_RemoveMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_RemoveMember, roleids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_UpdateMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_UpdateMember, roleid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_UpdateMember, fieldlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderFireMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderFireMember, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderChangeTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderChangeTarget, targetid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderChangeTarget, minlevel_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderChangeTarget, maxlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderCancelMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderTogetherMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderTogetherMember, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderAppoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderAppoint, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderRefuseAllApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderAgreeAllApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderRefuseApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderRefuseApply, roleid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderRefuseApply, zoneidf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderAgreeApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderAgreeApply, roleid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderAgreeApply, zoneidf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderAddApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderAddApply, applylist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderRemoveApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderRemoveApply, roleids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderUpdateApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderUpdateApply, applylist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InviteFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InviteFriend, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InviteFamily, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InviteFamily, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InvitePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InvitePlayer, roleid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_InvitePlayer, zoneidf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_AddInvited, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_AddInvited, invited_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_AgreeInvited, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_AgreeInvited, teamid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_AgreeInvited, leadersceneid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_RefuseInvited, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_RefuseInvited, teamid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaveTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaveTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaveTeam, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_ApplyTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_ApplyTeam, teamid_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_ApplyTeam, leadersceneid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_FollowLeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_CancelFollow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_AreeTogether, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_AreeTogether, teamid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_RefuseTogether, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_ReplaceLeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_ReplaceLeader, roleid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_PersonChangeTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_PersonChangeTarget, targerid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_PersonCancelMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderTogetherMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_LeaderEmptyApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_TeamRecruitInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_TeamRecruitInfo, recruit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderStartMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_LeaderStartMatch, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteBegin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteBegin, base_),
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteBegin, rolelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_Vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_Vote, agree_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteUpdate, role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_VoteEnd, pass_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_MountTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Ntf_MountTeam, team_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::client::ModuleTeam_Req_FollowJumpMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::client::ModuleTeam_Req_CreateTeam)},
  { 9, -1, -1, sizeof(::client::ModuleTeam_Ntf_CreateTeam)},
  { 19, -1, -1, sizeof(::client::ModuleTeam_Ntf_SelfJoinTeam)},
  { 29, -1, -1, sizeof(::client::ModuleTeam_Ntf_UpdateTeam)},
  { 36, -1, -1, sizeof(::client::ModuleTeam_Ntf_AddMember)},
  { 43, -1, -1, sizeof(::client::ModuleTeam_Ntf_RemoveMember)},
  { 50, -1, -1, sizeof(::client::ModuleTeam_Ntf_UpdateMember)},
  { 58, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderFireMember)},
  { 65, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderChangeTarget)},
  { 74, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderCancelMatch)},
  { 80, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderTogetherMember)},
  { 87, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderAppoint)},
  { 94, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderRefuseAllApply)},
  { 100, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderAgreeAllApply)},
  { 106, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderRefuseApply)},
  { 114, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderAgreeApply)},
  { 122, -1, -1, sizeof(::client::ModuleTeam_Ntf_LeaderAddApply)},
  { 129, -1, -1, sizeof(::client::ModuleTeam_Ntf_LeaderRemoveApply)},
  { 136, -1, -1, sizeof(::client::ModuleTeam_Ntf_LeaderUpdateApply)},
  { 143, -1, -1, sizeof(::client::ModuleTeam_Req_InviteFriend)},
  { 150, -1, -1, sizeof(::client::ModuleTeam_Req_InviteFamily)},
  { 157, -1, -1, sizeof(::client::ModuleTeam_Req_InvitePlayer)},
  { 165, -1, -1, sizeof(::client::ModuleTeam_Ntf_AddInvited)},
  { 172, -1, -1, sizeof(::client::ModuleTeam_Req_AgreeInvited)},
  { 180, -1, -1, sizeof(::client::ModuleTeam_Req_RefuseInvited)},
  { 187, -1, -1, sizeof(::client::ModuleTeam_Req_LeaveTeam)},
  { 193, -1, -1, sizeof(::client::ModuleTeam_Ntf_LeaveTeam)},
  { 200, -1, -1, sizeof(::client::ModuleTeam_Req_ApplyTeam)},
  { 208, -1, -1, sizeof(::client::ModuleTeam_Req_FollowLeader)},
  { 214, -1, -1, sizeof(::client::ModuleTeam_Req_CancelFollow)},
  { 220, -1, -1, sizeof(::client::ModuleTeam_Req_AreeTogether)},
  { 227, -1, -1, sizeof(::client::ModuleTeam_Req_RefuseTogether)},
  { 233, -1, -1, sizeof(::client::ModuleTeam_Req_ReplaceLeader)},
  { 240, -1, -1, sizeof(::client::ModuleTeam_Req_PersonChangeTarget)},
  { 247, -1, -1, sizeof(::client::ModuleTeam_Req_PersonCancelMatch)},
  { 253, -1, -1, sizeof(::client::ModuleTeam_Ntf_LeaderTogetherMember)},
  { 259, -1, -1, sizeof(::client::ModuleTeam_Ntf_LeaderEmptyApply)},
  { 265, -1, -1, sizeof(::client::ModuleTeam_Ntf_TeamRecruitInfo)},
  { 272, -1, -1, sizeof(::client::ModuleTeam_Req_LeaderStartMatch)},
  { 279, -1, -1, sizeof(::client::ModuleTeam_Ntf_VoteBegin)},
  { 287, -1, -1, sizeof(::client::ModuleTeam_Req_Vote)},
  { 294, -1, -1, sizeof(::client::ModuleTeam_Ntf_VoteUpdate)},
  { 301, -1, -1, sizeof(::client::ModuleTeam_Ntf_VoteEnd)},
  { 308, -1, -1, sizeof(::client::ModuleTeam_Ntf_MountTeam)},
  { 315, -1, -1, sizeof(::client::ModuleTeam_Req_FollowJumpMap)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::client::_ModuleTeam_Req_CreateTeam_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_CreateTeam_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_SelfJoinTeam_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_UpdateTeam_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_AddMember_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_RemoveMember_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_UpdateMember_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderFireMember_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderChangeTarget_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderCancelMatch_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderTogetherMember_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderAppoint_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderRefuseAllApply_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderAgreeAllApply_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderRefuseApply_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderAgreeApply_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_LeaderAddApply_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_LeaderRemoveApply_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_LeaderUpdateApply_default_instance_._instance,
  &::client::_ModuleTeam_Req_InviteFriend_default_instance_._instance,
  &::client::_ModuleTeam_Req_InviteFamily_default_instance_._instance,
  &::client::_ModuleTeam_Req_InvitePlayer_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_AddInvited_default_instance_._instance,
  &::client::_ModuleTeam_Req_AgreeInvited_default_instance_._instance,
  &::client::_ModuleTeam_Req_RefuseInvited_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaveTeam_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_LeaveTeam_default_instance_._instance,
  &::client::_ModuleTeam_Req_ApplyTeam_default_instance_._instance,
  &::client::_ModuleTeam_Req_FollowLeader_default_instance_._instance,
  &::client::_ModuleTeam_Req_CancelFollow_default_instance_._instance,
  &::client::_ModuleTeam_Req_AreeTogether_default_instance_._instance,
  &::client::_ModuleTeam_Req_RefuseTogether_default_instance_._instance,
  &::client::_ModuleTeam_Req_ReplaceLeader_default_instance_._instance,
  &::client::_ModuleTeam_Req_PersonChangeTarget_default_instance_._instance,
  &::client::_ModuleTeam_Req_PersonCancelMatch_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_LeaderTogetherMember_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_LeaderEmptyApply_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_TeamRecruitInfo_default_instance_._instance,
  &::client::_ModuleTeam_Req_LeaderStartMatch_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_VoteBegin_default_instance_._instance,
  &::client::_ModuleTeam_Req_Vote_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_VoteUpdate_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_VoteEnd_default_instance_._instance,
  &::client::_ModuleTeam_Ntf_MountTeam_default_instance_._instance,
  &::client::_ModuleTeam_Req_FollowJumpMap_default_instance_._instance,
};

const char descriptor_table_protodef_team_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nteam.proto\022\006client\032\014common.proto\032\020team"
  "common.proto\"Q\n\031ModuleTeam_Req_CreateTea"
  "m\022\020\n\010targetId\030\001 \001(\r\022\020\n\010minLevel\030\002 \001(\r\022\020\n"
  "\010maxLevel\030\003 \001(\r\"\266\001\n\031ModuleTeam_Ntf_Creat"
  "eTeam\022\036\n\004base\030\001 \001(\0132\020.common.TeamBase\022*\n"
  "\nmemberList\030\002 \001(\0132\026.common.TeamMemberLis"
  "t\022\'\n\007notteam\030\003 \001(\0132\026.common.NotOwnTeamIn"
  "fo\022$\n\007ownTeam\030\004 \001(\0132\023.common.OwnTeamInfo"
  "\"\270\001\n\033ModuleTeam_Ntf_SelfJoinTeam\022\036\n\004base"
  "\030\001 \001(\0132\020.common.TeamBase\022*\n\nmemberList\030\002"
  " \001(\0132\026.common.TeamMemberList\022\'\n\007notteam\030"
  "\003 \001(\0132\026.common.NotOwnTeamInfo\022$\n\007ownTeam"
  "\030\004 \001(\0132\023.common.OwnTeamInfo\"E\n\031ModuleTea"
  "m_Ntf_UpdateTeam\022(\n\tfieldList\030\001 \001(\0132\025.co"
  "mmon.TeamFieldList\"G\n\030ModuleTeam_Ntf_Add"
  "Member\022+\n\013memeberList\030\001 \001(\0132\026.common.Tea"
  "mMemberList\".\n\033ModuleTeam_Ntf_RemoveMemb"
  "er\022\017\n\007roleIds\030\001 \003(\004\"]\n\033ModuleTeam_Ntf_Up"
  "dateMember\022\016\n\006roleId\030\001 \001(\004\022.\n\tfieldList\030"
  "\002 \001(\0132\033.common.TeamMemberFieldList\"1\n\037Mo"
  "duleTeam_Req_LeaderFireMember\022\016\n\006roleId\030"
  "\001 \001(\004\"Y\n!ModuleTeam_Req_LeaderChangeTarg"
  "et\022\020\n\010targetId\030\001 \001(\r\022\020\n\010minLevel\030\002 \001(\r\022\020"
  "\n\010maxLevel\030\003 \001(\r\"\"\n ModuleTeam_Req_Leade"
  "rCancelMatch\"5\n#ModuleTeam_Req_LeaderTog"
  "etherMember\022\016\n\006roleId\030\001 \001(\004\".\n\034ModuleTea"
  "m_Req_LeaderAppoint\022\016\n\006roleId\030\001 \001(\004\"%\n#M"
  "oduleTeam_Req_LeaderRefuseAllApply\"$\n\"Mo"
  "duleTeam_Req_LeaderAgreeAllApply\"C\n Modu"
  "leTeam_Req_LeaderRefuseApply\022\016\n\006roleId\030\001"
  " \001(\004\022\017\n\007zoneIdF\030\002 \001(\r\"B\n\037ModuleTeam_Req_"
  "LeaderAgreeApply\022\016\n\006roleId\030\001 \001(\004\022\017\n\007zone"
  "IdF\030\002 \001(\r\"I\n\035ModuleTeam_Ntf_LeaderAddApp"
  "ly\022(\n\tapplyList\030\001 \001(\0132\025.common.TeamApply"
  "List\"3\n ModuleTeam_Ntf_LeaderRemoveApply"
  "\022\017\n\007roleIds\030\001 \003(\004\"L\n ModuleTeam_Ntf_Lead"
  "erUpdateApply\022(\n\tapplyList\030\001 \001(\0132\025.commo"
  "n.TeamApplyList\"-\n\033ModuleTeam_Req_Invite"
  "Friend\022\016\n\006roleId\030\001 \001(\004\"-\n\033ModuleTeam_Req"
  "_InviteFamily\022\016\n\006roleId\030\001 \001(\004\">\n\033ModuleT"
  "eam_Req_InvitePlayer\022\016\n\006roleId\030\001 \001(\004\022\017\n\007"
  "zoneIdF\030\002 \001(\r\"A\n\031ModuleTeam_Ntf_AddInvit"
  "ed\022$\n\007invited\030\001 \001(\0132\023.common.TeamInvited"
  "\"D\n\033ModuleTeam_Req_AgreeInvited\022\016\n\006teamI"
  "d\030\001 \001(\004\022\025\n\rleaderSceneId\030\002 \001(\004\".\n\034Module"
  "Team_Req_RefuseInvited\022\016\n\006teamId\030\001 \001(\004\"\032"
  "\n\030ModuleTeam_Req_LeaveTeam\"(\n\030ModuleTeam"
  "_Ntf_LeaveTeam\022\014\n\004type\030\001 \001(\r\"A\n\030ModuleTe"
  "am_Req_ApplyTeam\022\016\n\006teamId\030\001 \001(\004\022\025\n\rlead"
  "erSceneId\030\002 \001(\004\"\035\n\033ModuleTeam_Req_Follow"
  "Leader\"\035\n\033ModuleTeam_Req_CancelFollow\"-\n"
  "\033ModuleTeam_Req_AreeTogether\022\016\n\006teamId\030\001"
  " \001(\004\"\037\n\035ModuleTeam_Req_RefuseTogether\".\n"
  "\034ModuleTeam_Req_ReplaceLeader\022\016\n\006roleId\030"
  "\001 \001(\004\"5\n!ModuleTeam_Req_PersonChangeTarg"
  "et\022\020\n\010targerId\030\001 \001(\r\"\"\n ModuleTeam_Req_P"
  "ersonCancelMatch\"%\n#ModuleTeam_Ntf_Leade"
  "rTogetherMember\"!\n\037ModuleTeam_Ntf_Leader"
  "EmptyApply\"F\n\036ModuleTeam_Ntf_TeamRecruit"
  "Info\022$\n\007recruit\030\001 \001(\0132\023.common.RecruitTe"
  "am\"/\n\037ModuleTeam_Req_LeaderStartMatch\022\014\n"
  "\004text\030\001 \001(\014\"o\n\030ModuleTeam_Ntf_VoteBegin\022"
  "&\n\004base\030\001 \001(\0132\030.common.TeamVoteBaseData\022"
  "+\n\010rolelist\030\002 \001(\0132\031.common.RoleVoteState"
  "List\"$\n\023ModuleTeam_Req_Vote\022\r\n\005agree\030\001 \001"
  "(\010\"@\n\031ModuleTeam_Ntf_VoteUpdate\022#\n\004role\030"
  "\001 \001(\0132\025.common.RoleVoteState\"&\n\026ModuleTe"
  "am_Ntf_VoteEnd\022\014\n\004pass\030\001 \001(\010\"<\n\030ModuleTe"
  "am_Ntf_MountTeam\022 \n\004team\030\001 \001(\0132\022.common."
  "ModuleTeam\"\036\n\034ModuleTeam_Req_FollowJumpM"
  "ap*\236\r\n\014enModuleTeam\022\025\n\021enModuleTeam_None"
  "\020\000\022\037\n\033enModuleTeam_Req_CreateTeam\020\001\022\037\n\033e"
  "nModuleTeam_Ntf_CreateTeam\020\002\022!\n\035enModule"
  "Team_Ntf_SelfJoinTeam\020\003\022\037\n\033enModuleTeam_"
  "Ntf_UpdateTeam\020\004\022\036\n\032enModuleTeam_Ntf_Add"
  "Member\020\005\022!\n\035enModuleTeam_Ntf_RemoveMembe"
  "r\020\006\022!\n\035enModuleTeam_Ntf_UpdateMember\020\007\022%"
  "\n!enModuleTeam_Req_LeaderFireMember\020\010\022\'\n"
  "#enModuleTeam_Req_LeaderChangeTarget\020\t\022&"
  "\n\"enModuleTeam_Req_LeaderCancelMatch\020\n\022)"
  "\n%enModuleTeam_Req_LeaderTogetherMember\020"
  "\013\022\"\n\036enModuleTeam_Req_LeaderAppoint\020\014\022)\n"
  "%enModuleTeam_Req_LeaderRefuseAllApply\020\r"
  "\022(\n$enModuleTeam_Req_LeaderAgreeAllApply"
  "\020\016\022&\n\"enModuleTeam_Req_LeaderRefuseApply"
  "\020\017\022%\n!enModuleTeam_Req_LeaderAgreeApply\020"
  "\020\022#\n\037enModuleTeam_Ntf_LeaderAddApply\020\021\022&"
  "\n\"enModuleTeam_Ntf_LeaderRemoveApply\020\022\022&"
  "\n\"enModuleTeam_Ntf_LeaderUpdateApply\020\023\022!"
  "\n\035enModuleTeam_Req_InviteFriend\020\024\022!\n\035enM"
  "oduleTeam_Req_InviteFamily\020\025\022!\n\035enModule"
  "Team_Req_InvitePlayer\020\026\022\037\n\033enModuleTeam_"
  "Ntf_AddInvited\020\027\022!\n\035enModuleTeam_Req_Agr"
  "eeInvited\020\030\022\"\n\036enModuleTeam_Req_RefuseIn"
  "vited\020\031\022\036\n\032enModuleTeam_Req_LeaveTeam\020\032\022"
  "\036\n\032enModuleTeam_Ntf_LeaveTeam\020\033\022\036\n\032enMod"
  "uleTeam_Req_ApplyTeam\020\034\022!\n\035enModuleTeam_"
  "Req_FollowLeader\020\035\022!\n\035enModuleTeam_Req_C"
  "ancelFollow\020\036\022!\n\035enModuleTeam_Req_AreeTo"
  "gether\020\037\022#\n\037enModuleTeam_Req_RefuseToget"
  "her\020 \022\"\n\036enModuleTeam_Req_ReplaceLeader\020"
  "!\022\'\n#enModuleTeam_Req_PersonChangeTarget"
  "\020\"\022&\n\"enModuleTeam_Req_PersonCancelMatch"
  "\020#\022)\n%enModuleTeam_Ntf_LeaderTogetherMem"
  "ber\020$\022%\n!enModuleTeam_Ntf_LeaderEmptyApp"
  "ly\020%\022$\n enModuleTeam_Ntf_TeamRecruitInfo"
  "\020&\022%\n!enModuleTeam_Req_LeaderStartMatch\020"
  "\'\022\036\n\032enModuleTeam_Ntf_VoteBegin\020(\022\031\n\025enM"
  "oduleTeam_Req_Vote\020)\022\037\n\033enModuleTeam_Ntf"
  "_VoteUpdate\020*\022\034\n\030enModuleTeam_Ntf_VoteEn"
  "d\020+\022\036\n\032enModuleTeam_Ntf_MountTeam\020,\022\"\n\036e"
  "nModuleTeam_Req_FollowJumpMap\020-\022\032\n\026enMod"
  "uleFriend_RealMax\020.b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_team_2eproto_deps[2] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_teamcommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_team_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_team_2eproto = {
    false, false, 4507, descriptor_table_protodef_team_2eproto,
    "team.proto",
    &descriptor_table_team_2eproto_once, descriptor_table_team_2eproto_deps, 2, 45,
    schemas, file_default_instances, TableStruct_team_2eproto::offsets,
    file_level_metadata_team_2eproto, file_level_enum_descriptors_team_2eproto,
    file_level_service_descriptors_team_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_team_2eproto_getter() {
  return &descriptor_table_team_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_team_2eproto(&descriptor_table_team_2eproto);
namespace client {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enModuleTeam_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_team_2eproto);
  return file_level_enum_descriptors_team_2eproto[0];
}
bool enModuleTeam_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ModuleTeam_Req_CreateTeam::_Internal {
 public:
};

ModuleTeam_Req_CreateTeam::ModuleTeam_Req_CreateTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_CreateTeam)
}
ModuleTeam_Req_CreateTeam::ModuleTeam_Req_CreateTeam(const ModuleTeam_Req_CreateTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxlevel_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(maxlevel_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_CreateTeam)
}

inline void ModuleTeam_Req_CreateTeam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&targetid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxlevel_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(maxlevel_));
}

ModuleTeam_Req_CreateTeam::~ModuleTeam_Req_CreateTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_CreateTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_CreateTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_CreateTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_CreateTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_CreateTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlevel_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(maxlevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_CreateTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 minLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          minlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 maxLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          maxlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_CreateTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_CreateTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 targetId = 1;
  if (this->_internal_targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_targetid(), target);
  }

  // uint32 minLevel = 2;
  if (this->_internal_minlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_minlevel(), target);
  }

  // uint32 maxLevel = 3;
  if (this->_internal_maxlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_maxlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_CreateTeam)
  return target;
}

size_t ModuleTeam_Req_CreateTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_CreateTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 targetId = 1;
  if (this->_internal_targetid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targetid());
  }

  // uint32 minLevel = 2;
  if (this->_internal_minlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_minlevel());
  }

  // uint32 maxLevel = 3;
  if (this->_internal_maxlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_maxlevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_CreateTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_CreateTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_CreateTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_CreateTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_CreateTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_CreateTeam &>(from));
}


void ModuleTeam_Req_CreateTeam::MergeFrom(const ModuleTeam_Req_CreateTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_CreateTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from._internal_minlevel() != 0) {
    _internal_set_minlevel(from._internal_minlevel());
  }
  if (from._internal_maxlevel() != 0) {
    _internal_set_maxlevel(from._internal_maxlevel());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_CreateTeam::CopyFrom(const ModuleTeam_Req_CreateTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_CreateTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_CreateTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_CreateTeam::InternalSwap(ModuleTeam_Req_CreateTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_CreateTeam, maxlevel_)
      + sizeof(ModuleTeam_Req_CreateTeam::maxlevel_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_CreateTeam, targetid_)>(
          reinterpret_cast<char*>(&targetid_),
          reinterpret_cast<char*>(&other->targetid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_CreateTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[0]);
}

// ===================================================================

class ModuleTeam_Ntf_CreateTeam::_Internal {
 public:
  static const ::common::TeamBase& base(const ModuleTeam_Ntf_CreateTeam* msg);
  static const ::common::TeamMemberList& memberlist(const ModuleTeam_Ntf_CreateTeam* msg);
  static const ::common::NotOwnTeamInfo& notteam(const ModuleTeam_Ntf_CreateTeam* msg);
  static const ::common::OwnTeamInfo& ownteam(const ModuleTeam_Ntf_CreateTeam* msg);
};

const ::common::TeamBase&
ModuleTeam_Ntf_CreateTeam::_Internal::base(const ModuleTeam_Ntf_CreateTeam* msg) {
  return *msg->base_;
}
const ::common::TeamMemberList&
ModuleTeam_Ntf_CreateTeam::_Internal::memberlist(const ModuleTeam_Ntf_CreateTeam* msg) {
  return *msg->memberlist_;
}
const ::common::NotOwnTeamInfo&
ModuleTeam_Ntf_CreateTeam::_Internal::notteam(const ModuleTeam_Ntf_CreateTeam* msg) {
  return *msg->notteam_;
}
const ::common::OwnTeamInfo&
ModuleTeam_Ntf_CreateTeam::_Internal::ownteam(const ModuleTeam_Ntf_CreateTeam* msg) {
  return *msg->ownteam_;
}
void ModuleTeam_Ntf_CreateTeam::clear_base() {
  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
}
void ModuleTeam_Ntf_CreateTeam::clear_memberlist() {
  if (GetArenaForAllocation() == nullptr && memberlist_ != nullptr) {
    delete memberlist_;
  }
  memberlist_ = nullptr;
}
void ModuleTeam_Ntf_CreateTeam::clear_notteam() {
  if (GetArenaForAllocation() == nullptr && notteam_ != nullptr) {
    delete notteam_;
  }
  notteam_ = nullptr;
}
void ModuleTeam_Ntf_CreateTeam::clear_ownteam() {
  if (GetArenaForAllocation() == nullptr && ownteam_ != nullptr) {
    delete ownteam_;
  }
  ownteam_ = nullptr;
}
ModuleTeam_Ntf_CreateTeam::ModuleTeam_Ntf_CreateTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_CreateTeam)
}
ModuleTeam_Ntf_CreateTeam::ModuleTeam_Ntf_CreateTeam(const ModuleTeam_Ntf_CreateTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    base_ = new ::common::TeamBase(*from.base_);
  } else {
    base_ = nullptr;
  }
  if (from._internal_has_memberlist()) {
    memberlist_ = new ::common::TeamMemberList(*from.memberlist_);
  } else {
    memberlist_ = nullptr;
  }
  if (from._internal_has_notteam()) {
    notteam_ = new ::common::NotOwnTeamInfo(*from.notteam_);
  } else {
    notteam_ = nullptr;
  }
  if (from._internal_has_ownteam()) {
    ownteam_ = new ::common::OwnTeamInfo(*from.ownteam_);
  } else {
    ownteam_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_CreateTeam)
}

inline void ModuleTeam_Ntf_CreateTeam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&base_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ownteam_) -
    reinterpret_cast<char*>(&base_)) + sizeof(ownteam_));
}

ModuleTeam_Ntf_CreateTeam::~ModuleTeam_Ntf_CreateTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_CreateTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_CreateTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete memberlist_;
  if (this != internal_default_instance()) delete notteam_;
  if (this != internal_default_instance()) delete ownteam_;
}

void ModuleTeam_Ntf_CreateTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_CreateTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_CreateTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && memberlist_ != nullptr) {
    delete memberlist_;
  }
  memberlist_ = nullptr;
  if (GetArenaForAllocation() == nullptr && notteam_ != nullptr) {
    delete notteam_;
  }
  notteam_ = nullptr;
  if (GetArenaForAllocation() == nullptr && ownteam_ != nullptr) {
    delete ownteam_;
  }
  ownteam_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_CreateTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.TeamMemberList memberList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_memberlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.NotOwnTeamInfo notteam = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_notteam(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.OwnTeamInfo ownTeam = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ownteam(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_CreateTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_CreateTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamBase base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .common.TeamMemberList memberList = 2;
  if (this->_internal_has_memberlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::memberlist(this),
        _Internal::memberlist(this).GetCachedSize(), target, stream);
  }

  // .common.NotOwnTeamInfo notteam = 3;
  if (this->_internal_has_notteam()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::notteam(this),
        _Internal::notteam(this).GetCachedSize(), target, stream);
  }

  // .common.OwnTeamInfo ownTeam = 4;
  if (this->_internal_has_ownteam()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ownteam(this),
        _Internal::ownteam(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_CreateTeam)
  return target;
}

size_t ModuleTeam_Ntf_CreateTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_CreateTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamBase base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // .common.TeamMemberList memberList = 2;
  if (this->_internal_has_memberlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *memberlist_);
  }

  // .common.NotOwnTeamInfo notteam = 3;
  if (this->_internal_has_notteam()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *notteam_);
  }

  // .common.OwnTeamInfo ownTeam = 4;
  if (this->_internal_has_ownteam()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ownteam_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_CreateTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_CreateTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_CreateTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_CreateTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_CreateTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_CreateTeam &>(from));
}


void ModuleTeam_Ntf_CreateTeam::MergeFrom(const ModuleTeam_Ntf_CreateTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_CreateTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _internal_mutable_base()->::common::TeamBase::MergeFrom(from._internal_base());
  }
  if (from._internal_has_memberlist()) {
    _internal_mutable_memberlist()->::common::TeamMemberList::MergeFrom(from._internal_memberlist());
  }
  if (from._internal_has_notteam()) {
    _internal_mutable_notteam()->::common::NotOwnTeamInfo::MergeFrom(from._internal_notteam());
  }
  if (from._internal_has_ownteam()) {
    _internal_mutable_ownteam()->::common::OwnTeamInfo::MergeFrom(from._internal_ownteam());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_CreateTeam::CopyFrom(const ModuleTeam_Ntf_CreateTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_CreateTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_CreateTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_CreateTeam::InternalSwap(ModuleTeam_Ntf_CreateTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_CreateTeam, ownteam_)
      + sizeof(ModuleTeam_Ntf_CreateTeam::ownteam_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_CreateTeam, base_)>(
          reinterpret_cast<char*>(&base_),
          reinterpret_cast<char*>(&other->base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_CreateTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[1]);
}

// ===================================================================

class ModuleTeam_Ntf_SelfJoinTeam::_Internal {
 public:
  static const ::common::TeamBase& base(const ModuleTeam_Ntf_SelfJoinTeam* msg);
  static const ::common::TeamMemberList& memberlist(const ModuleTeam_Ntf_SelfJoinTeam* msg);
  static const ::common::NotOwnTeamInfo& notteam(const ModuleTeam_Ntf_SelfJoinTeam* msg);
  static const ::common::OwnTeamInfo& ownteam(const ModuleTeam_Ntf_SelfJoinTeam* msg);
};

const ::common::TeamBase&
ModuleTeam_Ntf_SelfJoinTeam::_Internal::base(const ModuleTeam_Ntf_SelfJoinTeam* msg) {
  return *msg->base_;
}
const ::common::TeamMemberList&
ModuleTeam_Ntf_SelfJoinTeam::_Internal::memberlist(const ModuleTeam_Ntf_SelfJoinTeam* msg) {
  return *msg->memberlist_;
}
const ::common::NotOwnTeamInfo&
ModuleTeam_Ntf_SelfJoinTeam::_Internal::notteam(const ModuleTeam_Ntf_SelfJoinTeam* msg) {
  return *msg->notteam_;
}
const ::common::OwnTeamInfo&
ModuleTeam_Ntf_SelfJoinTeam::_Internal::ownteam(const ModuleTeam_Ntf_SelfJoinTeam* msg) {
  return *msg->ownteam_;
}
void ModuleTeam_Ntf_SelfJoinTeam::clear_base() {
  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
}
void ModuleTeam_Ntf_SelfJoinTeam::clear_memberlist() {
  if (GetArenaForAllocation() == nullptr && memberlist_ != nullptr) {
    delete memberlist_;
  }
  memberlist_ = nullptr;
}
void ModuleTeam_Ntf_SelfJoinTeam::clear_notteam() {
  if (GetArenaForAllocation() == nullptr && notteam_ != nullptr) {
    delete notteam_;
  }
  notteam_ = nullptr;
}
void ModuleTeam_Ntf_SelfJoinTeam::clear_ownteam() {
  if (GetArenaForAllocation() == nullptr && ownteam_ != nullptr) {
    delete ownteam_;
  }
  ownteam_ = nullptr;
}
ModuleTeam_Ntf_SelfJoinTeam::ModuleTeam_Ntf_SelfJoinTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_SelfJoinTeam)
}
ModuleTeam_Ntf_SelfJoinTeam::ModuleTeam_Ntf_SelfJoinTeam(const ModuleTeam_Ntf_SelfJoinTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    base_ = new ::common::TeamBase(*from.base_);
  } else {
    base_ = nullptr;
  }
  if (from._internal_has_memberlist()) {
    memberlist_ = new ::common::TeamMemberList(*from.memberlist_);
  } else {
    memberlist_ = nullptr;
  }
  if (from._internal_has_notteam()) {
    notteam_ = new ::common::NotOwnTeamInfo(*from.notteam_);
  } else {
    notteam_ = nullptr;
  }
  if (from._internal_has_ownteam()) {
    ownteam_ = new ::common::OwnTeamInfo(*from.ownteam_);
  } else {
    ownteam_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_SelfJoinTeam)
}

inline void ModuleTeam_Ntf_SelfJoinTeam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&base_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ownteam_) -
    reinterpret_cast<char*>(&base_)) + sizeof(ownteam_));
}

ModuleTeam_Ntf_SelfJoinTeam::~ModuleTeam_Ntf_SelfJoinTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_SelfJoinTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_SelfJoinTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete memberlist_;
  if (this != internal_default_instance()) delete notteam_;
  if (this != internal_default_instance()) delete ownteam_;
}

void ModuleTeam_Ntf_SelfJoinTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_SelfJoinTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_SelfJoinTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && memberlist_ != nullptr) {
    delete memberlist_;
  }
  memberlist_ = nullptr;
  if (GetArenaForAllocation() == nullptr && notteam_ != nullptr) {
    delete notteam_;
  }
  notteam_ = nullptr;
  if (GetArenaForAllocation() == nullptr && ownteam_ != nullptr) {
    delete ownteam_;
  }
  ownteam_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_SelfJoinTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.TeamMemberList memberList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_memberlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.NotOwnTeamInfo notteam = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_notteam(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.OwnTeamInfo ownTeam = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ownteam(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_SelfJoinTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_SelfJoinTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamBase base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .common.TeamMemberList memberList = 2;
  if (this->_internal_has_memberlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::memberlist(this),
        _Internal::memberlist(this).GetCachedSize(), target, stream);
  }

  // .common.NotOwnTeamInfo notteam = 3;
  if (this->_internal_has_notteam()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::notteam(this),
        _Internal::notteam(this).GetCachedSize(), target, stream);
  }

  // .common.OwnTeamInfo ownTeam = 4;
  if (this->_internal_has_ownteam()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ownteam(this),
        _Internal::ownteam(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_SelfJoinTeam)
  return target;
}

size_t ModuleTeam_Ntf_SelfJoinTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_SelfJoinTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamBase base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // .common.TeamMemberList memberList = 2;
  if (this->_internal_has_memberlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *memberlist_);
  }

  // .common.NotOwnTeamInfo notteam = 3;
  if (this->_internal_has_notteam()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *notteam_);
  }

  // .common.OwnTeamInfo ownTeam = 4;
  if (this->_internal_has_ownteam()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ownteam_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_SelfJoinTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_SelfJoinTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_SelfJoinTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_SelfJoinTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_SelfJoinTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_SelfJoinTeam &>(from));
}


void ModuleTeam_Ntf_SelfJoinTeam::MergeFrom(const ModuleTeam_Ntf_SelfJoinTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_SelfJoinTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _internal_mutable_base()->::common::TeamBase::MergeFrom(from._internal_base());
  }
  if (from._internal_has_memberlist()) {
    _internal_mutable_memberlist()->::common::TeamMemberList::MergeFrom(from._internal_memberlist());
  }
  if (from._internal_has_notteam()) {
    _internal_mutable_notteam()->::common::NotOwnTeamInfo::MergeFrom(from._internal_notteam());
  }
  if (from._internal_has_ownteam()) {
    _internal_mutable_ownteam()->::common::OwnTeamInfo::MergeFrom(from._internal_ownteam());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_SelfJoinTeam::CopyFrom(const ModuleTeam_Ntf_SelfJoinTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_SelfJoinTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_SelfJoinTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_SelfJoinTeam::InternalSwap(ModuleTeam_Ntf_SelfJoinTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_SelfJoinTeam, ownteam_)
      + sizeof(ModuleTeam_Ntf_SelfJoinTeam::ownteam_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_SelfJoinTeam, base_)>(
          reinterpret_cast<char*>(&base_),
          reinterpret_cast<char*>(&other->base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_SelfJoinTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[2]);
}

// ===================================================================

class ModuleTeam_Ntf_UpdateTeam::_Internal {
 public:
  static const ::common::TeamFieldList& fieldlist(const ModuleTeam_Ntf_UpdateTeam* msg);
};

const ::common::TeamFieldList&
ModuleTeam_Ntf_UpdateTeam::_Internal::fieldlist(const ModuleTeam_Ntf_UpdateTeam* msg) {
  return *msg->fieldlist_;
}
void ModuleTeam_Ntf_UpdateTeam::clear_fieldlist() {
  if (GetArenaForAllocation() == nullptr && fieldlist_ != nullptr) {
    delete fieldlist_;
  }
  fieldlist_ = nullptr;
}
ModuleTeam_Ntf_UpdateTeam::ModuleTeam_Ntf_UpdateTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_UpdateTeam)
}
ModuleTeam_Ntf_UpdateTeam::ModuleTeam_Ntf_UpdateTeam(const ModuleTeam_Ntf_UpdateTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fieldlist()) {
    fieldlist_ = new ::common::TeamFieldList(*from.fieldlist_);
  } else {
    fieldlist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_UpdateTeam)
}

inline void ModuleTeam_Ntf_UpdateTeam::SharedCtor() {
fieldlist_ = nullptr;
}

ModuleTeam_Ntf_UpdateTeam::~ModuleTeam_Ntf_UpdateTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_UpdateTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_UpdateTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fieldlist_;
}

void ModuleTeam_Ntf_UpdateTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_UpdateTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_UpdateTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fieldlist_ != nullptr) {
    delete fieldlist_;
  }
  fieldlist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_UpdateTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamFieldList fieldList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fieldlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_UpdateTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_UpdateTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamFieldList fieldList = 1;
  if (this->_internal_has_fieldlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fieldlist(this),
        _Internal::fieldlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_UpdateTeam)
  return target;
}

size_t ModuleTeam_Ntf_UpdateTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_UpdateTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamFieldList fieldList = 1;
  if (this->_internal_has_fieldlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fieldlist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_UpdateTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_UpdateTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_UpdateTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_UpdateTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_UpdateTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_UpdateTeam &>(from));
}


void ModuleTeam_Ntf_UpdateTeam::MergeFrom(const ModuleTeam_Ntf_UpdateTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_UpdateTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fieldlist()) {
    _internal_mutable_fieldlist()->::common::TeamFieldList::MergeFrom(from._internal_fieldlist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_UpdateTeam::CopyFrom(const ModuleTeam_Ntf_UpdateTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_UpdateTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_UpdateTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_UpdateTeam::InternalSwap(ModuleTeam_Ntf_UpdateTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fieldlist_, other->fieldlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_UpdateTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[3]);
}

// ===================================================================

class ModuleTeam_Ntf_AddMember::_Internal {
 public:
  static const ::common::TeamMemberList& memeberlist(const ModuleTeam_Ntf_AddMember* msg);
};

const ::common::TeamMemberList&
ModuleTeam_Ntf_AddMember::_Internal::memeberlist(const ModuleTeam_Ntf_AddMember* msg) {
  return *msg->memeberlist_;
}
void ModuleTeam_Ntf_AddMember::clear_memeberlist() {
  if (GetArenaForAllocation() == nullptr && memeberlist_ != nullptr) {
    delete memeberlist_;
  }
  memeberlist_ = nullptr;
}
ModuleTeam_Ntf_AddMember::ModuleTeam_Ntf_AddMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_AddMember)
}
ModuleTeam_Ntf_AddMember::ModuleTeam_Ntf_AddMember(const ModuleTeam_Ntf_AddMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_memeberlist()) {
    memeberlist_ = new ::common::TeamMemberList(*from.memeberlist_);
  } else {
    memeberlist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_AddMember)
}

inline void ModuleTeam_Ntf_AddMember::SharedCtor() {
memeberlist_ = nullptr;
}

ModuleTeam_Ntf_AddMember::~ModuleTeam_Ntf_AddMember() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_AddMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_AddMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete memeberlist_;
}

void ModuleTeam_Ntf_AddMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_AddMember::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_AddMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && memeberlist_ != nullptr) {
    delete memeberlist_;
  }
  memeberlist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_AddMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamMemberList memeberList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_memeberlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_AddMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_AddMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamMemberList memeberList = 1;
  if (this->_internal_has_memeberlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::memeberlist(this),
        _Internal::memeberlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_AddMember)
  return target;
}

size_t ModuleTeam_Ntf_AddMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_AddMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamMemberList memeberList = 1;
  if (this->_internal_has_memeberlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *memeberlist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_AddMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_AddMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_AddMember::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_AddMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_AddMember *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_AddMember &>(from));
}


void ModuleTeam_Ntf_AddMember::MergeFrom(const ModuleTeam_Ntf_AddMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_AddMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_memeberlist()) {
    _internal_mutable_memeberlist()->::common::TeamMemberList::MergeFrom(from._internal_memeberlist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_AddMember::CopyFrom(const ModuleTeam_Ntf_AddMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_AddMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_AddMember::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_AddMember::InternalSwap(ModuleTeam_Ntf_AddMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(memeberlist_, other->memeberlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_AddMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[4]);
}

// ===================================================================

class ModuleTeam_Ntf_RemoveMember::_Internal {
 public:
};

ModuleTeam_Ntf_RemoveMember::ModuleTeam_Ntf_RemoveMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roleids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_RemoveMember)
}
ModuleTeam_Ntf_RemoveMember::ModuleTeam_Ntf_RemoveMember(const ModuleTeam_Ntf_RemoveMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roleids_(from.roleids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_RemoveMember)
}

inline void ModuleTeam_Ntf_RemoveMember::SharedCtor() {
}

ModuleTeam_Ntf_RemoveMember::~ModuleTeam_Ntf_RemoveMember() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_RemoveMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_RemoveMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Ntf_RemoveMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_RemoveMember::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_RemoveMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_RemoveMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 roleIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_roleids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_roleids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_RemoveMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_RemoveMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    int byte_size = _roleids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_roleids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_RemoveMember)
  return target;
}

size_t ModuleTeam_Ntf_RemoveMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_RemoveMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->roleids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _roleids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_RemoveMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_RemoveMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_RemoveMember::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_RemoveMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_RemoveMember *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_RemoveMember &>(from));
}


void ModuleTeam_Ntf_RemoveMember::MergeFrom(const ModuleTeam_Ntf_RemoveMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_RemoveMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roleids_.MergeFrom(from.roleids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_RemoveMember::CopyFrom(const ModuleTeam_Ntf_RemoveMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_RemoveMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_RemoveMember::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_RemoveMember::InternalSwap(ModuleTeam_Ntf_RemoveMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roleids_.InternalSwap(&other->roleids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_RemoveMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[5]);
}

// ===================================================================

class ModuleTeam_Ntf_UpdateMember::_Internal {
 public:
  static const ::common::TeamMemberFieldList& fieldlist(const ModuleTeam_Ntf_UpdateMember* msg);
};

const ::common::TeamMemberFieldList&
ModuleTeam_Ntf_UpdateMember::_Internal::fieldlist(const ModuleTeam_Ntf_UpdateMember* msg) {
  return *msg->fieldlist_;
}
void ModuleTeam_Ntf_UpdateMember::clear_fieldlist() {
  if (GetArenaForAllocation() == nullptr && fieldlist_ != nullptr) {
    delete fieldlist_;
  }
  fieldlist_ = nullptr;
}
ModuleTeam_Ntf_UpdateMember::ModuleTeam_Ntf_UpdateMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_UpdateMember)
}
ModuleTeam_Ntf_UpdateMember::ModuleTeam_Ntf_UpdateMember(const ModuleTeam_Ntf_UpdateMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fieldlist()) {
    fieldlist_ = new ::common::TeamMemberFieldList(*from.fieldlist_);
  } else {
    fieldlist_ = nullptr;
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_UpdateMember)
}

inline void ModuleTeam_Ntf_UpdateMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fieldlist_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&fieldlist_)) + sizeof(roleid_));
}

ModuleTeam_Ntf_UpdateMember::~ModuleTeam_Ntf_UpdateMember() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_UpdateMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_UpdateMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fieldlist_;
}

void ModuleTeam_Ntf_UpdateMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_UpdateMember::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_UpdateMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fieldlist_ != nullptr) {
    delete fieldlist_;
  }
  fieldlist_ = nullptr;
  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_UpdateMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.TeamMemberFieldList fieldList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fieldlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_UpdateMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_UpdateMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // .common.TeamMemberFieldList fieldList = 2;
  if (this->_internal_has_fieldlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fieldlist(this),
        _Internal::fieldlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_UpdateMember)
  return target;
}

size_t ModuleTeam_Ntf_UpdateMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_UpdateMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamMemberFieldList fieldList = 2;
  if (this->_internal_has_fieldlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fieldlist_);
  }

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_UpdateMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_UpdateMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_UpdateMember::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_UpdateMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_UpdateMember *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_UpdateMember &>(from));
}


void ModuleTeam_Ntf_UpdateMember::MergeFrom(const ModuleTeam_Ntf_UpdateMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_UpdateMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fieldlist()) {
    _internal_mutable_fieldlist()->::common::TeamMemberFieldList::MergeFrom(from._internal_fieldlist());
  }
  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_UpdateMember::CopyFrom(const ModuleTeam_Ntf_UpdateMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_UpdateMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_UpdateMember::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_UpdateMember::InternalSwap(ModuleTeam_Ntf_UpdateMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_UpdateMember, roleid_)
      + sizeof(ModuleTeam_Ntf_UpdateMember::roleid_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_UpdateMember, fieldlist_)>(
          reinterpret_cast<char*>(&fieldlist_),
          reinterpret_cast<char*>(&other->fieldlist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_UpdateMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[6]);
}

// ===================================================================

class ModuleTeam_Req_LeaderFireMember::_Internal {
 public:
};

ModuleTeam_Req_LeaderFireMember::ModuleTeam_Req_LeaderFireMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderFireMember)
}
ModuleTeam_Req_LeaderFireMember::ModuleTeam_Req_LeaderFireMember(const ModuleTeam_Req_LeaderFireMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderFireMember)
}

inline void ModuleTeam_Req_LeaderFireMember::SharedCtor() {
roleid_ = uint64_t{0u};
}

ModuleTeam_Req_LeaderFireMember::~ModuleTeam_Req_LeaderFireMember() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderFireMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderFireMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_LeaderFireMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderFireMember::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderFireMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderFireMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderFireMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderFireMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderFireMember)
  return target;
}

size_t ModuleTeam_Req_LeaderFireMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderFireMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderFireMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderFireMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderFireMember::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderFireMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderFireMember *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderFireMember &>(from));
}


void ModuleTeam_Req_LeaderFireMember::MergeFrom(const ModuleTeam_Req_LeaderFireMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderFireMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderFireMember::CopyFrom(const ModuleTeam_Req_LeaderFireMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderFireMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderFireMember::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderFireMember::InternalSwap(ModuleTeam_Req_LeaderFireMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(roleid_, other->roleid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderFireMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[7]);
}

// ===================================================================

class ModuleTeam_Req_LeaderChangeTarget::_Internal {
 public:
};

ModuleTeam_Req_LeaderChangeTarget::ModuleTeam_Req_LeaderChangeTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderChangeTarget)
}
ModuleTeam_Req_LeaderChangeTarget::ModuleTeam_Req_LeaderChangeTarget(const ModuleTeam_Req_LeaderChangeTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxlevel_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(maxlevel_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderChangeTarget)
}

inline void ModuleTeam_Req_LeaderChangeTarget::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&targetid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxlevel_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(maxlevel_));
}

ModuleTeam_Req_LeaderChangeTarget::~ModuleTeam_Req_LeaderChangeTarget() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderChangeTarget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderChangeTarget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_LeaderChangeTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderChangeTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderChangeTarget)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlevel_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(maxlevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderChangeTarget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 minLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          minlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 maxLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          maxlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderChangeTarget::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderChangeTarget)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 targetId = 1;
  if (this->_internal_targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_targetid(), target);
  }

  // uint32 minLevel = 2;
  if (this->_internal_minlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_minlevel(), target);
  }

  // uint32 maxLevel = 3;
  if (this->_internal_maxlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_maxlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderChangeTarget)
  return target;
}

size_t ModuleTeam_Req_LeaderChangeTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderChangeTarget)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 targetId = 1;
  if (this->_internal_targetid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targetid());
  }

  // uint32 minLevel = 2;
  if (this->_internal_minlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_minlevel());
  }

  // uint32 maxLevel = 3;
  if (this->_internal_maxlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_maxlevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderChangeTarget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderChangeTarget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderChangeTarget::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderChangeTarget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderChangeTarget *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderChangeTarget &>(from));
}


void ModuleTeam_Req_LeaderChangeTarget::MergeFrom(const ModuleTeam_Req_LeaderChangeTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderChangeTarget)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from._internal_minlevel() != 0) {
    _internal_set_minlevel(from._internal_minlevel());
  }
  if (from._internal_maxlevel() != 0) {
    _internal_set_maxlevel(from._internal_maxlevel());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderChangeTarget::CopyFrom(const ModuleTeam_Req_LeaderChangeTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderChangeTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderChangeTarget::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderChangeTarget::InternalSwap(ModuleTeam_Req_LeaderChangeTarget* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_LeaderChangeTarget, maxlevel_)
      + sizeof(ModuleTeam_Req_LeaderChangeTarget::maxlevel_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_LeaderChangeTarget, targetid_)>(
          reinterpret_cast<char*>(&targetid_),
          reinterpret_cast<char*>(&other->targetid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderChangeTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[8]);
}

// ===================================================================

class ModuleTeam_Req_LeaderCancelMatch::_Internal {
 public:
};

ModuleTeam_Req_LeaderCancelMatch::ModuleTeam_Req_LeaderCancelMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderCancelMatch)
}
ModuleTeam_Req_LeaderCancelMatch::ModuleTeam_Req_LeaderCancelMatch(const ModuleTeam_Req_LeaderCancelMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderCancelMatch)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderCancelMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderCancelMatch::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderCancelMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[9]);
}

// ===================================================================

class ModuleTeam_Req_LeaderTogetherMember::_Internal {
 public:
};

ModuleTeam_Req_LeaderTogetherMember::ModuleTeam_Req_LeaderTogetherMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderTogetherMember)
}
ModuleTeam_Req_LeaderTogetherMember::ModuleTeam_Req_LeaderTogetherMember(const ModuleTeam_Req_LeaderTogetherMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderTogetherMember)
}

inline void ModuleTeam_Req_LeaderTogetherMember::SharedCtor() {
roleid_ = uint64_t{0u};
}

ModuleTeam_Req_LeaderTogetherMember::~ModuleTeam_Req_LeaderTogetherMember() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderTogetherMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderTogetherMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_LeaderTogetherMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderTogetherMember::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderTogetherMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderTogetherMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderTogetherMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderTogetherMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderTogetherMember)
  return target;
}

size_t ModuleTeam_Req_LeaderTogetherMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderTogetherMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderTogetherMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderTogetherMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderTogetherMember::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderTogetherMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderTogetherMember *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderTogetherMember &>(from));
}


void ModuleTeam_Req_LeaderTogetherMember::MergeFrom(const ModuleTeam_Req_LeaderTogetherMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderTogetherMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderTogetherMember::CopyFrom(const ModuleTeam_Req_LeaderTogetherMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderTogetherMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderTogetherMember::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderTogetherMember::InternalSwap(ModuleTeam_Req_LeaderTogetherMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(roleid_, other->roleid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderTogetherMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[10]);
}

// ===================================================================

class ModuleTeam_Req_LeaderAppoint::_Internal {
 public:
};

ModuleTeam_Req_LeaderAppoint::ModuleTeam_Req_LeaderAppoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderAppoint)
}
ModuleTeam_Req_LeaderAppoint::ModuleTeam_Req_LeaderAppoint(const ModuleTeam_Req_LeaderAppoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderAppoint)
}

inline void ModuleTeam_Req_LeaderAppoint::SharedCtor() {
roleid_ = uint64_t{0u};
}

ModuleTeam_Req_LeaderAppoint::~ModuleTeam_Req_LeaderAppoint() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderAppoint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderAppoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_LeaderAppoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderAppoint::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderAppoint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderAppoint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderAppoint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderAppoint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderAppoint)
  return target;
}

size_t ModuleTeam_Req_LeaderAppoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderAppoint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderAppoint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderAppoint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderAppoint::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderAppoint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderAppoint *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderAppoint &>(from));
}


void ModuleTeam_Req_LeaderAppoint::MergeFrom(const ModuleTeam_Req_LeaderAppoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderAppoint)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderAppoint::CopyFrom(const ModuleTeam_Req_LeaderAppoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderAppoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderAppoint::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderAppoint::InternalSwap(ModuleTeam_Req_LeaderAppoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(roleid_, other->roleid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderAppoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[11]);
}

// ===================================================================

class ModuleTeam_Req_LeaderRefuseAllApply::_Internal {
 public:
};

ModuleTeam_Req_LeaderRefuseAllApply::ModuleTeam_Req_LeaderRefuseAllApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderRefuseAllApply)
}
ModuleTeam_Req_LeaderRefuseAllApply::ModuleTeam_Req_LeaderRefuseAllApply(const ModuleTeam_Req_LeaderRefuseAllApply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderRefuseAllApply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderRefuseAllApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderRefuseAllApply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderRefuseAllApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[12]);
}

// ===================================================================

class ModuleTeam_Req_LeaderAgreeAllApply::_Internal {
 public:
};

ModuleTeam_Req_LeaderAgreeAllApply::ModuleTeam_Req_LeaderAgreeAllApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderAgreeAllApply)
}
ModuleTeam_Req_LeaderAgreeAllApply::ModuleTeam_Req_LeaderAgreeAllApply(const ModuleTeam_Req_LeaderAgreeAllApply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderAgreeAllApply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderAgreeAllApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderAgreeAllApply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderAgreeAllApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[13]);
}

// ===================================================================

class ModuleTeam_Req_LeaderRefuseApply::_Internal {
 public:
};

ModuleTeam_Req_LeaderRefuseApply::ModuleTeam_Req_LeaderRefuseApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderRefuseApply)
}
ModuleTeam_Req_LeaderRefuseApply::ModuleTeam_Req_LeaderRefuseApply(const ModuleTeam_Req_LeaderRefuseApply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderRefuseApply)
}

inline void ModuleTeam_Req_LeaderRefuseApply::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&roleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
}

ModuleTeam_Req_LeaderRefuseApply::~ModuleTeam_Req_LeaderRefuseApply() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderRefuseApply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderRefuseApply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_LeaderRefuseApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderRefuseApply::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderRefuseApply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneidf_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderRefuseApply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 zoneIdF = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          zoneidf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderRefuseApply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderRefuseApply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_zoneidf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderRefuseApply)
  return target;
}

size_t ModuleTeam_Req_LeaderRefuseApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderRefuseApply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_zoneidf());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderRefuseApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderRefuseApply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderRefuseApply::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderRefuseApply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderRefuseApply *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderRefuseApply &>(from));
}


void ModuleTeam_Req_LeaderRefuseApply::MergeFrom(const ModuleTeam_Req_LeaderRefuseApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderRefuseApply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_zoneidf() != 0) {
    _internal_set_zoneidf(from._internal_zoneidf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderRefuseApply::CopyFrom(const ModuleTeam_Req_LeaderRefuseApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderRefuseApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderRefuseApply::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderRefuseApply::InternalSwap(ModuleTeam_Req_LeaderRefuseApply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_LeaderRefuseApply, zoneidf_)
      + sizeof(ModuleTeam_Req_LeaderRefuseApply::zoneidf_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_LeaderRefuseApply, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderRefuseApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[14]);
}

// ===================================================================

class ModuleTeam_Req_LeaderAgreeApply::_Internal {
 public:
};

ModuleTeam_Req_LeaderAgreeApply::ModuleTeam_Req_LeaderAgreeApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderAgreeApply)
}
ModuleTeam_Req_LeaderAgreeApply::ModuleTeam_Req_LeaderAgreeApply(const ModuleTeam_Req_LeaderAgreeApply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderAgreeApply)
}

inline void ModuleTeam_Req_LeaderAgreeApply::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&roleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
}

ModuleTeam_Req_LeaderAgreeApply::~ModuleTeam_Req_LeaderAgreeApply() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderAgreeApply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderAgreeApply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_LeaderAgreeApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderAgreeApply::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderAgreeApply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneidf_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderAgreeApply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 zoneIdF = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          zoneidf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderAgreeApply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderAgreeApply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_zoneidf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderAgreeApply)
  return target;
}

size_t ModuleTeam_Req_LeaderAgreeApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderAgreeApply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_zoneidf());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderAgreeApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderAgreeApply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderAgreeApply::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderAgreeApply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderAgreeApply *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderAgreeApply &>(from));
}


void ModuleTeam_Req_LeaderAgreeApply::MergeFrom(const ModuleTeam_Req_LeaderAgreeApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderAgreeApply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_zoneidf() != 0) {
    _internal_set_zoneidf(from._internal_zoneidf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderAgreeApply::CopyFrom(const ModuleTeam_Req_LeaderAgreeApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderAgreeApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderAgreeApply::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderAgreeApply::InternalSwap(ModuleTeam_Req_LeaderAgreeApply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_LeaderAgreeApply, zoneidf_)
      + sizeof(ModuleTeam_Req_LeaderAgreeApply::zoneidf_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_LeaderAgreeApply, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderAgreeApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[15]);
}

// ===================================================================

class ModuleTeam_Ntf_LeaderAddApply::_Internal {
 public:
  static const ::common::TeamApplyList& applylist(const ModuleTeam_Ntf_LeaderAddApply* msg);
};

const ::common::TeamApplyList&
ModuleTeam_Ntf_LeaderAddApply::_Internal::applylist(const ModuleTeam_Ntf_LeaderAddApply* msg) {
  return *msg->applylist_;
}
void ModuleTeam_Ntf_LeaderAddApply::clear_applylist() {
  if (GetArenaForAllocation() == nullptr && applylist_ != nullptr) {
    delete applylist_;
  }
  applylist_ = nullptr;
}
ModuleTeam_Ntf_LeaderAddApply::ModuleTeam_Ntf_LeaderAddApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_LeaderAddApply)
}
ModuleTeam_Ntf_LeaderAddApply::ModuleTeam_Ntf_LeaderAddApply(const ModuleTeam_Ntf_LeaderAddApply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_applylist()) {
    applylist_ = new ::common::TeamApplyList(*from.applylist_);
  } else {
    applylist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_LeaderAddApply)
}

inline void ModuleTeam_Ntf_LeaderAddApply::SharedCtor() {
applylist_ = nullptr;
}

ModuleTeam_Ntf_LeaderAddApply::~ModuleTeam_Ntf_LeaderAddApply() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_LeaderAddApply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_LeaderAddApply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete applylist_;
}

void ModuleTeam_Ntf_LeaderAddApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_LeaderAddApply::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_LeaderAddApply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && applylist_ != nullptr) {
    delete applylist_;
  }
  applylist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_LeaderAddApply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamApplyList applyList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_applylist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_LeaderAddApply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_LeaderAddApply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamApplyList applyList = 1;
  if (this->_internal_has_applylist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::applylist(this),
        _Internal::applylist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_LeaderAddApply)
  return target;
}

size_t ModuleTeam_Ntf_LeaderAddApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_LeaderAddApply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamApplyList applyList = 1;
  if (this->_internal_has_applylist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applylist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_LeaderAddApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_LeaderAddApply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_LeaderAddApply::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_LeaderAddApply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_LeaderAddApply *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_LeaderAddApply &>(from));
}


void ModuleTeam_Ntf_LeaderAddApply::MergeFrom(const ModuleTeam_Ntf_LeaderAddApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_LeaderAddApply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_applylist()) {
    _internal_mutable_applylist()->::common::TeamApplyList::MergeFrom(from._internal_applylist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_LeaderAddApply::CopyFrom(const ModuleTeam_Ntf_LeaderAddApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_LeaderAddApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_LeaderAddApply::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_LeaderAddApply::InternalSwap(ModuleTeam_Ntf_LeaderAddApply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(applylist_, other->applylist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_LeaderAddApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[16]);
}

// ===================================================================

class ModuleTeam_Ntf_LeaderRemoveApply::_Internal {
 public:
};

ModuleTeam_Ntf_LeaderRemoveApply::ModuleTeam_Ntf_LeaderRemoveApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roleids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_LeaderRemoveApply)
}
ModuleTeam_Ntf_LeaderRemoveApply::ModuleTeam_Ntf_LeaderRemoveApply(const ModuleTeam_Ntf_LeaderRemoveApply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roleids_(from.roleids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_LeaderRemoveApply)
}

inline void ModuleTeam_Ntf_LeaderRemoveApply::SharedCtor() {
}

ModuleTeam_Ntf_LeaderRemoveApply::~ModuleTeam_Ntf_LeaderRemoveApply() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_LeaderRemoveApply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_LeaderRemoveApply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Ntf_LeaderRemoveApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_LeaderRemoveApply::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_LeaderRemoveApply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_LeaderRemoveApply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 roleIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_roleids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_roleids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_LeaderRemoveApply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_LeaderRemoveApply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    int byte_size = _roleids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_roleids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_LeaderRemoveApply)
  return target;
}

size_t ModuleTeam_Ntf_LeaderRemoveApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_LeaderRemoveApply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 roleIds = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->roleids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _roleids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_LeaderRemoveApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_LeaderRemoveApply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_LeaderRemoveApply::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_LeaderRemoveApply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_LeaderRemoveApply *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_LeaderRemoveApply &>(from));
}


void ModuleTeam_Ntf_LeaderRemoveApply::MergeFrom(const ModuleTeam_Ntf_LeaderRemoveApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_LeaderRemoveApply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roleids_.MergeFrom(from.roleids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_LeaderRemoveApply::CopyFrom(const ModuleTeam_Ntf_LeaderRemoveApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_LeaderRemoveApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_LeaderRemoveApply::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_LeaderRemoveApply::InternalSwap(ModuleTeam_Ntf_LeaderRemoveApply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roleids_.InternalSwap(&other->roleids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_LeaderRemoveApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[17]);
}

// ===================================================================

class ModuleTeam_Ntf_LeaderUpdateApply::_Internal {
 public:
  static const ::common::TeamApplyList& applylist(const ModuleTeam_Ntf_LeaderUpdateApply* msg);
};

const ::common::TeamApplyList&
ModuleTeam_Ntf_LeaderUpdateApply::_Internal::applylist(const ModuleTeam_Ntf_LeaderUpdateApply* msg) {
  return *msg->applylist_;
}
void ModuleTeam_Ntf_LeaderUpdateApply::clear_applylist() {
  if (GetArenaForAllocation() == nullptr && applylist_ != nullptr) {
    delete applylist_;
  }
  applylist_ = nullptr;
}
ModuleTeam_Ntf_LeaderUpdateApply::ModuleTeam_Ntf_LeaderUpdateApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_LeaderUpdateApply)
}
ModuleTeam_Ntf_LeaderUpdateApply::ModuleTeam_Ntf_LeaderUpdateApply(const ModuleTeam_Ntf_LeaderUpdateApply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_applylist()) {
    applylist_ = new ::common::TeamApplyList(*from.applylist_);
  } else {
    applylist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_LeaderUpdateApply)
}

inline void ModuleTeam_Ntf_LeaderUpdateApply::SharedCtor() {
applylist_ = nullptr;
}

ModuleTeam_Ntf_LeaderUpdateApply::~ModuleTeam_Ntf_LeaderUpdateApply() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_LeaderUpdateApply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_LeaderUpdateApply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete applylist_;
}

void ModuleTeam_Ntf_LeaderUpdateApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_LeaderUpdateApply::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_LeaderUpdateApply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && applylist_ != nullptr) {
    delete applylist_;
  }
  applylist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_LeaderUpdateApply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamApplyList applyList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_applylist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_LeaderUpdateApply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_LeaderUpdateApply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamApplyList applyList = 1;
  if (this->_internal_has_applylist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::applylist(this),
        _Internal::applylist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_LeaderUpdateApply)
  return target;
}

size_t ModuleTeam_Ntf_LeaderUpdateApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_LeaderUpdateApply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamApplyList applyList = 1;
  if (this->_internal_has_applylist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applylist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_LeaderUpdateApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_LeaderUpdateApply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_LeaderUpdateApply::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_LeaderUpdateApply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_LeaderUpdateApply *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_LeaderUpdateApply &>(from));
}


void ModuleTeam_Ntf_LeaderUpdateApply::MergeFrom(const ModuleTeam_Ntf_LeaderUpdateApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_LeaderUpdateApply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_applylist()) {
    _internal_mutable_applylist()->::common::TeamApplyList::MergeFrom(from._internal_applylist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_LeaderUpdateApply::CopyFrom(const ModuleTeam_Ntf_LeaderUpdateApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_LeaderUpdateApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_LeaderUpdateApply::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_LeaderUpdateApply::InternalSwap(ModuleTeam_Ntf_LeaderUpdateApply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(applylist_, other->applylist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_LeaderUpdateApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[18]);
}

// ===================================================================

class ModuleTeam_Req_InviteFriend::_Internal {
 public:
};

ModuleTeam_Req_InviteFriend::ModuleTeam_Req_InviteFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_InviteFriend)
}
ModuleTeam_Req_InviteFriend::ModuleTeam_Req_InviteFriend(const ModuleTeam_Req_InviteFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_InviteFriend)
}

inline void ModuleTeam_Req_InviteFriend::SharedCtor() {
roleid_ = uint64_t{0u};
}

ModuleTeam_Req_InviteFriend::~ModuleTeam_Req_InviteFriend() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_InviteFriend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_InviteFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_InviteFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_InviteFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_InviteFriend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_InviteFriend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_InviteFriend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_InviteFriend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_InviteFriend)
  return target;
}

size_t ModuleTeam_Req_InviteFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_InviteFriend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_InviteFriend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_InviteFriend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_InviteFriend::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_InviteFriend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_InviteFriend *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_InviteFriend &>(from));
}


void ModuleTeam_Req_InviteFriend::MergeFrom(const ModuleTeam_Req_InviteFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_InviteFriend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_InviteFriend::CopyFrom(const ModuleTeam_Req_InviteFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_InviteFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_InviteFriend::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_InviteFriend::InternalSwap(ModuleTeam_Req_InviteFriend* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(roleid_, other->roleid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_InviteFriend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[19]);
}

// ===================================================================

class ModuleTeam_Req_InviteFamily::_Internal {
 public:
};

ModuleTeam_Req_InviteFamily::ModuleTeam_Req_InviteFamily(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_InviteFamily)
}
ModuleTeam_Req_InviteFamily::ModuleTeam_Req_InviteFamily(const ModuleTeam_Req_InviteFamily& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_InviteFamily)
}

inline void ModuleTeam_Req_InviteFamily::SharedCtor() {
roleid_ = uint64_t{0u};
}

ModuleTeam_Req_InviteFamily::~ModuleTeam_Req_InviteFamily() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_InviteFamily)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_InviteFamily::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_InviteFamily::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_InviteFamily::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_InviteFamily)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_InviteFamily::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_InviteFamily::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_InviteFamily)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_InviteFamily)
  return target;
}

size_t ModuleTeam_Req_InviteFamily::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_InviteFamily)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_InviteFamily::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_InviteFamily::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_InviteFamily::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_InviteFamily::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_InviteFamily *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_InviteFamily &>(from));
}


void ModuleTeam_Req_InviteFamily::MergeFrom(const ModuleTeam_Req_InviteFamily& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_InviteFamily)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_InviteFamily::CopyFrom(const ModuleTeam_Req_InviteFamily& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_InviteFamily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_InviteFamily::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_InviteFamily::InternalSwap(ModuleTeam_Req_InviteFamily* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(roleid_, other->roleid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_InviteFamily::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[20]);
}

// ===================================================================

class ModuleTeam_Req_InvitePlayer::_Internal {
 public:
};

ModuleTeam_Req_InvitePlayer::ModuleTeam_Req_InvitePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_InvitePlayer)
}
ModuleTeam_Req_InvitePlayer::ModuleTeam_Req_InvitePlayer(const ModuleTeam_Req_InvitePlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_InvitePlayer)
}

inline void ModuleTeam_Req_InvitePlayer::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&roleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&zoneidf_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
}

ModuleTeam_Req_InvitePlayer::~ModuleTeam_Req_InvitePlayer() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_InvitePlayer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_InvitePlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_InvitePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_InvitePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_InvitePlayer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneidf_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(zoneidf_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_InvitePlayer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 zoneIdF = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          zoneidf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_InvitePlayer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_InvitePlayer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_zoneidf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_InvitePlayer)
  return target;
}

size_t ModuleTeam_Req_InvitePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_InvitePlayer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint32 zoneIdF = 2;
  if (this->_internal_zoneidf() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_zoneidf());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_InvitePlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_InvitePlayer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_InvitePlayer::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_InvitePlayer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_InvitePlayer *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_InvitePlayer &>(from));
}


void ModuleTeam_Req_InvitePlayer::MergeFrom(const ModuleTeam_Req_InvitePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_InvitePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_zoneidf() != 0) {
    _internal_set_zoneidf(from._internal_zoneidf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_InvitePlayer::CopyFrom(const ModuleTeam_Req_InvitePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_InvitePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_InvitePlayer::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_InvitePlayer::InternalSwap(ModuleTeam_Req_InvitePlayer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_InvitePlayer, zoneidf_)
      + sizeof(ModuleTeam_Req_InvitePlayer::zoneidf_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_InvitePlayer, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_InvitePlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[21]);
}

// ===================================================================

class ModuleTeam_Ntf_AddInvited::_Internal {
 public:
  static const ::common::TeamInvited& invited(const ModuleTeam_Ntf_AddInvited* msg);
};

const ::common::TeamInvited&
ModuleTeam_Ntf_AddInvited::_Internal::invited(const ModuleTeam_Ntf_AddInvited* msg) {
  return *msg->invited_;
}
void ModuleTeam_Ntf_AddInvited::clear_invited() {
  if (GetArenaForAllocation() == nullptr && invited_ != nullptr) {
    delete invited_;
  }
  invited_ = nullptr;
}
ModuleTeam_Ntf_AddInvited::ModuleTeam_Ntf_AddInvited(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_AddInvited)
}
ModuleTeam_Ntf_AddInvited::ModuleTeam_Ntf_AddInvited(const ModuleTeam_Ntf_AddInvited& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invited()) {
    invited_ = new ::common::TeamInvited(*from.invited_);
  } else {
    invited_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_AddInvited)
}

inline void ModuleTeam_Ntf_AddInvited::SharedCtor() {
invited_ = nullptr;
}

ModuleTeam_Ntf_AddInvited::~ModuleTeam_Ntf_AddInvited() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_AddInvited)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_AddInvited::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invited_;
}

void ModuleTeam_Ntf_AddInvited::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_AddInvited::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_AddInvited)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invited_ != nullptr) {
    delete invited_;
  }
  invited_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_AddInvited::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamInvited invited = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invited(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_AddInvited::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_AddInvited)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamInvited invited = 1;
  if (this->_internal_has_invited()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invited(this),
        _Internal::invited(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_AddInvited)
  return target;
}

size_t ModuleTeam_Ntf_AddInvited::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_AddInvited)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamInvited invited = 1;
  if (this->_internal_has_invited()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invited_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_AddInvited::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_AddInvited::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_AddInvited::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_AddInvited::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_AddInvited *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_AddInvited &>(from));
}


void ModuleTeam_Ntf_AddInvited::MergeFrom(const ModuleTeam_Ntf_AddInvited& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_AddInvited)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invited()) {
    _internal_mutable_invited()->::common::TeamInvited::MergeFrom(from._internal_invited());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_AddInvited::CopyFrom(const ModuleTeam_Ntf_AddInvited& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_AddInvited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_AddInvited::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_AddInvited::InternalSwap(ModuleTeam_Ntf_AddInvited* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invited_, other->invited_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_AddInvited::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[22]);
}

// ===================================================================

class ModuleTeam_Req_AgreeInvited::_Internal {
 public:
};

ModuleTeam_Req_AgreeInvited::ModuleTeam_Req_AgreeInvited(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_AgreeInvited)
}
ModuleTeam_Req_AgreeInvited::ModuleTeam_Req_AgreeInvited(const ModuleTeam_Req_AgreeInvited& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&leadersceneid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(leadersceneid_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_AgreeInvited)
}

inline void ModuleTeam_Req_AgreeInvited::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&teamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&leadersceneid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(leadersceneid_));
}

ModuleTeam_Req_AgreeInvited::~ModuleTeam_Req_AgreeInvited() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_AgreeInvited)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_AgreeInvited::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_AgreeInvited::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_AgreeInvited::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_AgreeInvited)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leadersceneid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(leadersceneid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_AgreeInvited::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 teamId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          teamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 leaderSceneId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          leadersceneid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_AgreeInvited::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_AgreeInvited)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_teamid(), target);
  }

  // uint64 leaderSceneId = 2;
  if (this->_internal_leadersceneid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_leadersceneid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_AgreeInvited)
  return target;
}

size_t ModuleTeam_Req_AgreeInvited::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_AgreeInvited)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_teamid());
  }

  // uint64 leaderSceneId = 2;
  if (this->_internal_leadersceneid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_leadersceneid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_AgreeInvited::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_AgreeInvited::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_AgreeInvited::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_AgreeInvited::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_AgreeInvited *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_AgreeInvited &>(from));
}


void ModuleTeam_Req_AgreeInvited::MergeFrom(const ModuleTeam_Req_AgreeInvited& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_AgreeInvited)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_teamid() != 0) {
    _internal_set_teamid(from._internal_teamid());
  }
  if (from._internal_leadersceneid() != 0) {
    _internal_set_leadersceneid(from._internal_leadersceneid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_AgreeInvited::CopyFrom(const ModuleTeam_Req_AgreeInvited& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_AgreeInvited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_AgreeInvited::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_AgreeInvited::InternalSwap(ModuleTeam_Req_AgreeInvited* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_AgreeInvited, leadersceneid_)
      + sizeof(ModuleTeam_Req_AgreeInvited::leadersceneid_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_AgreeInvited, teamid_)>(
          reinterpret_cast<char*>(&teamid_),
          reinterpret_cast<char*>(&other->teamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_AgreeInvited::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[23]);
}

// ===================================================================

class ModuleTeam_Req_RefuseInvited::_Internal {
 public:
};

ModuleTeam_Req_RefuseInvited::ModuleTeam_Req_RefuseInvited(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_RefuseInvited)
}
ModuleTeam_Req_RefuseInvited::ModuleTeam_Req_RefuseInvited(const ModuleTeam_Req_RefuseInvited& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  teamid_ = from.teamid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_RefuseInvited)
}

inline void ModuleTeam_Req_RefuseInvited::SharedCtor() {
teamid_ = uint64_t{0u};
}

ModuleTeam_Req_RefuseInvited::~ModuleTeam_Req_RefuseInvited() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_RefuseInvited)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_RefuseInvited::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_RefuseInvited::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_RefuseInvited::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_RefuseInvited)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  teamid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_RefuseInvited::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 teamId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          teamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_RefuseInvited::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_RefuseInvited)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_teamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_RefuseInvited)
  return target;
}

size_t ModuleTeam_Req_RefuseInvited::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_RefuseInvited)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_teamid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_RefuseInvited::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_RefuseInvited::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_RefuseInvited::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_RefuseInvited::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_RefuseInvited *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_RefuseInvited &>(from));
}


void ModuleTeam_Req_RefuseInvited::MergeFrom(const ModuleTeam_Req_RefuseInvited& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_RefuseInvited)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_teamid() != 0) {
    _internal_set_teamid(from._internal_teamid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_RefuseInvited::CopyFrom(const ModuleTeam_Req_RefuseInvited& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_RefuseInvited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_RefuseInvited::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_RefuseInvited::InternalSwap(ModuleTeam_Req_RefuseInvited* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(teamid_, other->teamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_RefuseInvited::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[24]);
}

// ===================================================================

class ModuleTeam_Req_LeaveTeam::_Internal {
 public:
};

ModuleTeam_Req_LeaveTeam::ModuleTeam_Req_LeaveTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaveTeam)
}
ModuleTeam_Req_LeaveTeam::ModuleTeam_Req_LeaveTeam(const ModuleTeam_Req_LeaveTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaveTeam)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaveTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaveTeam::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaveTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[25]);
}

// ===================================================================

class ModuleTeam_Ntf_LeaveTeam::_Internal {
 public:
};

ModuleTeam_Ntf_LeaveTeam::ModuleTeam_Ntf_LeaveTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_LeaveTeam)
}
ModuleTeam_Ntf_LeaveTeam::ModuleTeam_Ntf_LeaveTeam(const ModuleTeam_Ntf_LeaveTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_LeaveTeam)
}

inline void ModuleTeam_Ntf_LeaveTeam::SharedCtor() {
type_ = 0u;
}

ModuleTeam_Ntf_LeaveTeam::~ModuleTeam_Ntf_LeaveTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_LeaveTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_LeaveTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Ntf_LeaveTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_LeaveTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_LeaveTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_LeaveTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_LeaveTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_LeaveTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_LeaveTeam)
  return target;
}

size_t ModuleTeam_Ntf_LeaveTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_LeaveTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_LeaveTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_LeaveTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_LeaveTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_LeaveTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_LeaveTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_LeaveTeam &>(from));
}


void ModuleTeam_Ntf_LeaveTeam::MergeFrom(const ModuleTeam_Ntf_LeaveTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_LeaveTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_LeaveTeam::CopyFrom(const ModuleTeam_Ntf_LeaveTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_LeaveTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_LeaveTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_LeaveTeam::InternalSwap(ModuleTeam_Ntf_LeaveTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_LeaveTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[26]);
}

// ===================================================================

class ModuleTeam_Req_ApplyTeam::_Internal {
 public:
};

ModuleTeam_Req_ApplyTeam::ModuleTeam_Req_ApplyTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_ApplyTeam)
}
ModuleTeam_Req_ApplyTeam::ModuleTeam_Req_ApplyTeam(const ModuleTeam_Req_ApplyTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&leadersceneid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(leadersceneid_));
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_ApplyTeam)
}

inline void ModuleTeam_Req_ApplyTeam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&teamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&leadersceneid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(leadersceneid_));
}

ModuleTeam_Req_ApplyTeam::~ModuleTeam_Req_ApplyTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_ApplyTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_ApplyTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_ApplyTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_ApplyTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_ApplyTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leadersceneid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(leadersceneid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_ApplyTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 teamId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          teamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 leaderSceneId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          leadersceneid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_ApplyTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_ApplyTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_teamid(), target);
  }

  // uint64 leaderSceneId = 2;
  if (this->_internal_leadersceneid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_leadersceneid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_ApplyTeam)
  return target;
}

size_t ModuleTeam_Req_ApplyTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_ApplyTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_teamid());
  }

  // uint64 leaderSceneId = 2;
  if (this->_internal_leadersceneid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_leadersceneid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_ApplyTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_ApplyTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_ApplyTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_ApplyTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_ApplyTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_ApplyTeam &>(from));
}


void ModuleTeam_Req_ApplyTeam::MergeFrom(const ModuleTeam_Req_ApplyTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_ApplyTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_teamid() != 0) {
    _internal_set_teamid(from._internal_teamid());
  }
  if (from._internal_leadersceneid() != 0) {
    _internal_set_leadersceneid(from._internal_leadersceneid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_ApplyTeam::CopyFrom(const ModuleTeam_Req_ApplyTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_ApplyTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_ApplyTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_ApplyTeam::InternalSwap(ModuleTeam_Req_ApplyTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_ApplyTeam, leadersceneid_)
      + sizeof(ModuleTeam_Req_ApplyTeam::leadersceneid_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Req_ApplyTeam, teamid_)>(
          reinterpret_cast<char*>(&teamid_),
          reinterpret_cast<char*>(&other->teamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_ApplyTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[27]);
}

// ===================================================================

class ModuleTeam_Req_FollowLeader::_Internal {
 public:
};

ModuleTeam_Req_FollowLeader::ModuleTeam_Req_FollowLeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_FollowLeader)
}
ModuleTeam_Req_FollowLeader::ModuleTeam_Req_FollowLeader(const ModuleTeam_Req_FollowLeader& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_FollowLeader)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_FollowLeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_FollowLeader::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_FollowLeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[28]);
}

// ===================================================================

class ModuleTeam_Req_CancelFollow::_Internal {
 public:
};

ModuleTeam_Req_CancelFollow::ModuleTeam_Req_CancelFollow(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_CancelFollow)
}
ModuleTeam_Req_CancelFollow::ModuleTeam_Req_CancelFollow(const ModuleTeam_Req_CancelFollow& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_CancelFollow)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_CancelFollow::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_CancelFollow::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_CancelFollow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[29]);
}

// ===================================================================

class ModuleTeam_Req_AreeTogether::_Internal {
 public:
};

ModuleTeam_Req_AreeTogether::ModuleTeam_Req_AreeTogether(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_AreeTogether)
}
ModuleTeam_Req_AreeTogether::ModuleTeam_Req_AreeTogether(const ModuleTeam_Req_AreeTogether& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  teamid_ = from.teamid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_AreeTogether)
}

inline void ModuleTeam_Req_AreeTogether::SharedCtor() {
teamid_ = uint64_t{0u};
}

ModuleTeam_Req_AreeTogether::~ModuleTeam_Req_AreeTogether() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_AreeTogether)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_AreeTogether::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_AreeTogether::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_AreeTogether::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_AreeTogether)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  teamid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_AreeTogether::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 teamId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          teamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_AreeTogether::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_AreeTogether)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_teamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_AreeTogether)
  return target;
}

size_t ModuleTeam_Req_AreeTogether::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_AreeTogether)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_teamid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_AreeTogether::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_AreeTogether::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_AreeTogether::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_AreeTogether::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_AreeTogether *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_AreeTogether &>(from));
}


void ModuleTeam_Req_AreeTogether::MergeFrom(const ModuleTeam_Req_AreeTogether& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_AreeTogether)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_teamid() != 0) {
    _internal_set_teamid(from._internal_teamid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_AreeTogether::CopyFrom(const ModuleTeam_Req_AreeTogether& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_AreeTogether)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_AreeTogether::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_AreeTogether::InternalSwap(ModuleTeam_Req_AreeTogether* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(teamid_, other->teamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_AreeTogether::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[30]);
}

// ===================================================================

class ModuleTeam_Req_RefuseTogether::_Internal {
 public:
};

ModuleTeam_Req_RefuseTogether::ModuleTeam_Req_RefuseTogether(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_RefuseTogether)
}
ModuleTeam_Req_RefuseTogether::ModuleTeam_Req_RefuseTogether(const ModuleTeam_Req_RefuseTogether& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_RefuseTogether)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_RefuseTogether::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_RefuseTogether::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_RefuseTogether::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[31]);
}

// ===================================================================

class ModuleTeam_Req_ReplaceLeader::_Internal {
 public:
};

ModuleTeam_Req_ReplaceLeader::ModuleTeam_Req_ReplaceLeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_ReplaceLeader)
}
ModuleTeam_Req_ReplaceLeader::ModuleTeam_Req_ReplaceLeader(const ModuleTeam_Req_ReplaceLeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_ReplaceLeader)
}

inline void ModuleTeam_Req_ReplaceLeader::SharedCtor() {
roleid_ = uint64_t{0u};
}

ModuleTeam_Req_ReplaceLeader::~ModuleTeam_Req_ReplaceLeader() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_ReplaceLeader)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_ReplaceLeader::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_ReplaceLeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_ReplaceLeader::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_ReplaceLeader)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_ReplaceLeader::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_ReplaceLeader::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_ReplaceLeader)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_ReplaceLeader)
  return target;
}

size_t ModuleTeam_Req_ReplaceLeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_ReplaceLeader)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_ReplaceLeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_ReplaceLeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_ReplaceLeader::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_ReplaceLeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_ReplaceLeader *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_ReplaceLeader &>(from));
}


void ModuleTeam_Req_ReplaceLeader::MergeFrom(const ModuleTeam_Req_ReplaceLeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_ReplaceLeader)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_ReplaceLeader::CopyFrom(const ModuleTeam_Req_ReplaceLeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_ReplaceLeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_ReplaceLeader::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_ReplaceLeader::InternalSwap(ModuleTeam_Req_ReplaceLeader* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(roleid_, other->roleid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_ReplaceLeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[32]);
}

// ===================================================================

class ModuleTeam_Req_PersonChangeTarget::_Internal {
 public:
};

ModuleTeam_Req_PersonChangeTarget::ModuleTeam_Req_PersonChangeTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_PersonChangeTarget)
}
ModuleTeam_Req_PersonChangeTarget::ModuleTeam_Req_PersonChangeTarget(const ModuleTeam_Req_PersonChangeTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targerid_ = from.targerid_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_PersonChangeTarget)
}

inline void ModuleTeam_Req_PersonChangeTarget::SharedCtor() {
targerid_ = 0u;
}

ModuleTeam_Req_PersonChangeTarget::~ModuleTeam_Req_PersonChangeTarget() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_PersonChangeTarget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_PersonChangeTarget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_PersonChangeTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_PersonChangeTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_PersonChangeTarget)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targerid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_PersonChangeTarget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 targerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          targerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_PersonChangeTarget::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_PersonChangeTarget)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 targerId = 1;
  if (this->_internal_targerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_targerid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_PersonChangeTarget)
  return target;
}

size_t ModuleTeam_Req_PersonChangeTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_PersonChangeTarget)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 targerId = 1;
  if (this->_internal_targerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targerid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_PersonChangeTarget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_PersonChangeTarget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_PersonChangeTarget::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_PersonChangeTarget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_PersonChangeTarget *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_PersonChangeTarget &>(from));
}


void ModuleTeam_Req_PersonChangeTarget::MergeFrom(const ModuleTeam_Req_PersonChangeTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_PersonChangeTarget)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_targerid() != 0) {
    _internal_set_targerid(from._internal_targerid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_PersonChangeTarget::CopyFrom(const ModuleTeam_Req_PersonChangeTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_PersonChangeTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_PersonChangeTarget::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_PersonChangeTarget::InternalSwap(ModuleTeam_Req_PersonChangeTarget* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(targerid_, other->targerid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_PersonChangeTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[33]);
}

// ===================================================================

class ModuleTeam_Req_PersonCancelMatch::_Internal {
 public:
};

ModuleTeam_Req_PersonCancelMatch::ModuleTeam_Req_PersonCancelMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_PersonCancelMatch)
}
ModuleTeam_Req_PersonCancelMatch::ModuleTeam_Req_PersonCancelMatch(const ModuleTeam_Req_PersonCancelMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_PersonCancelMatch)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_PersonCancelMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_PersonCancelMatch::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_PersonCancelMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[34]);
}

// ===================================================================

class ModuleTeam_Ntf_LeaderTogetherMember::_Internal {
 public:
};

ModuleTeam_Ntf_LeaderTogetherMember::ModuleTeam_Ntf_LeaderTogetherMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_LeaderTogetherMember)
}
ModuleTeam_Ntf_LeaderTogetherMember::ModuleTeam_Ntf_LeaderTogetherMember(const ModuleTeam_Ntf_LeaderTogetherMember& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_LeaderTogetherMember)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_LeaderTogetherMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_LeaderTogetherMember::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_LeaderTogetherMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[35]);
}

// ===================================================================

class ModuleTeam_Ntf_LeaderEmptyApply::_Internal {
 public:
};

ModuleTeam_Ntf_LeaderEmptyApply::ModuleTeam_Ntf_LeaderEmptyApply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_LeaderEmptyApply)
}
ModuleTeam_Ntf_LeaderEmptyApply::ModuleTeam_Ntf_LeaderEmptyApply(const ModuleTeam_Ntf_LeaderEmptyApply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_LeaderEmptyApply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_LeaderEmptyApply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_LeaderEmptyApply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_LeaderEmptyApply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[36]);
}

// ===================================================================

class ModuleTeam_Ntf_TeamRecruitInfo::_Internal {
 public:
  static const ::common::RecruitTeam& recruit(const ModuleTeam_Ntf_TeamRecruitInfo* msg);
};

const ::common::RecruitTeam&
ModuleTeam_Ntf_TeamRecruitInfo::_Internal::recruit(const ModuleTeam_Ntf_TeamRecruitInfo* msg) {
  return *msg->recruit_;
}
void ModuleTeam_Ntf_TeamRecruitInfo::clear_recruit() {
  if (GetArenaForAllocation() == nullptr && recruit_ != nullptr) {
    delete recruit_;
  }
  recruit_ = nullptr;
}
ModuleTeam_Ntf_TeamRecruitInfo::ModuleTeam_Ntf_TeamRecruitInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_TeamRecruitInfo)
}
ModuleTeam_Ntf_TeamRecruitInfo::ModuleTeam_Ntf_TeamRecruitInfo(const ModuleTeam_Ntf_TeamRecruitInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_recruit()) {
    recruit_ = new ::common::RecruitTeam(*from.recruit_);
  } else {
    recruit_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_TeamRecruitInfo)
}

inline void ModuleTeam_Ntf_TeamRecruitInfo::SharedCtor() {
recruit_ = nullptr;
}

ModuleTeam_Ntf_TeamRecruitInfo::~ModuleTeam_Ntf_TeamRecruitInfo() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_TeamRecruitInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_TeamRecruitInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete recruit_;
}

void ModuleTeam_Ntf_TeamRecruitInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_TeamRecruitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_TeamRecruitInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && recruit_ != nullptr) {
    delete recruit_;
  }
  recruit_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_TeamRecruitInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.RecruitTeam recruit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_recruit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_TeamRecruitInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_TeamRecruitInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.RecruitTeam recruit = 1;
  if (this->_internal_has_recruit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::recruit(this),
        _Internal::recruit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_TeamRecruitInfo)
  return target;
}

size_t ModuleTeam_Ntf_TeamRecruitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_TeamRecruitInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.RecruitTeam recruit = 1;
  if (this->_internal_has_recruit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *recruit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_TeamRecruitInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_TeamRecruitInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_TeamRecruitInfo::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_TeamRecruitInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_TeamRecruitInfo *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_TeamRecruitInfo &>(from));
}


void ModuleTeam_Ntf_TeamRecruitInfo::MergeFrom(const ModuleTeam_Ntf_TeamRecruitInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_TeamRecruitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_recruit()) {
    _internal_mutable_recruit()->::common::RecruitTeam::MergeFrom(from._internal_recruit());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_TeamRecruitInfo::CopyFrom(const ModuleTeam_Ntf_TeamRecruitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_TeamRecruitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_TeamRecruitInfo::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_TeamRecruitInfo::InternalSwap(ModuleTeam_Ntf_TeamRecruitInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(recruit_, other->recruit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_TeamRecruitInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[37]);
}

// ===================================================================

class ModuleTeam_Req_LeaderStartMatch::_Internal {
 public:
};

ModuleTeam_Req_LeaderStartMatch::ModuleTeam_Req_LeaderStartMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_LeaderStartMatch)
}
ModuleTeam_Req_LeaderStartMatch::ModuleTeam_Req_LeaderStartMatch(const ModuleTeam_Req_LeaderStartMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    text_.Set(from._internal_text(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_LeaderStartMatch)
}

inline void ModuleTeam_Req_LeaderStartMatch::SharedCtor() {
text_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  text_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleTeam_Req_LeaderStartMatch::~ModuleTeam_Req_LeaderStartMatch() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_LeaderStartMatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_LeaderStartMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  text_.Destroy();
}

void ModuleTeam_Req_LeaderStartMatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_LeaderStartMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_LeaderStartMatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_LeaderStartMatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_LeaderStartMatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_LeaderStartMatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes text = 1;
  if (!this->_internal_text().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_LeaderStartMatch)
  return target;
}

size_t ModuleTeam_Req_LeaderStartMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_LeaderStartMatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_LeaderStartMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_LeaderStartMatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_LeaderStartMatch::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_LeaderStartMatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_LeaderStartMatch *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_LeaderStartMatch &>(from));
}


void ModuleTeam_Req_LeaderStartMatch::MergeFrom(const ModuleTeam_Req_LeaderStartMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_LeaderStartMatch)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _internal_set_text(from._internal_text());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_LeaderStartMatch::CopyFrom(const ModuleTeam_Req_LeaderStartMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_LeaderStartMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_LeaderStartMatch::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_LeaderStartMatch::InternalSwap(ModuleTeam_Req_LeaderStartMatch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &text_, lhs_arena,
      &other->text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_LeaderStartMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[38]);
}

// ===================================================================

class ModuleTeam_Ntf_VoteBegin::_Internal {
 public:
  static const ::common::TeamVoteBaseData& base(const ModuleTeam_Ntf_VoteBegin* msg);
  static const ::common::RoleVoteStateList& rolelist(const ModuleTeam_Ntf_VoteBegin* msg);
};

const ::common::TeamVoteBaseData&
ModuleTeam_Ntf_VoteBegin::_Internal::base(const ModuleTeam_Ntf_VoteBegin* msg) {
  return *msg->base_;
}
const ::common::RoleVoteStateList&
ModuleTeam_Ntf_VoteBegin::_Internal::rolelist(const ModuleTeam_Ntf_VoteBegin* msg) {
  return *msg->rolelist_;
}
void ModuleTeam_Ntf_VoteBegin::clear_base() {
  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
}
void ModuleTeam_Ntf_VoteBegin::clear_rolelist() {
  if (GetArenaForAllocation() == nullptr && rolelist_ != nullptr) {
    delete rolelist_;
  }
  rolelist_ = nullptr;
}
ModuleTeam_Ntf_VoteBegin::ModuleTeam_Ntf_VoteBegin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_VoteBegin)
}
ModuleTeam_Ntf_VoteBegin::ModuleTeam_Ntf_VoteBegin(const ModuleTeam_Ntf_VoteBegin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    base_ = new ::common::TeamVoteBaseData(*from.base_);
  } else {
    base_ = nullptr;
  }
  if (from._internal_has_rolelist()) {
    rolelist_ = new ::common::RoleVoteStateList(*from.rolelist_);
  } else {
    rolelist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_VoteBegin)
}

inline void ModuleTeam_Ntf_VoteBegin::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&base_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rolelist_) -
    reinterpret_cast<char*>(&base_)) + sizeof(rolelist_));
}

ModuleTeam_Ntf_VoteBegin::~ModuleTeam_Ntf_VoteBegin() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_VoteBegin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_VoteBegin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete rolelist_;
}

void ModuleTeam_Ntf_VoteBegin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_VoteBegin::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_VoteBegin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && rolelist_ != nullptr) {
    delete rolelist_;
  }
  rolelist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_VoteBegin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.TeamVoteBaseData base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .common.RoleVoteStateList rolelist = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rolelist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_VoteBegin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_VoteBegin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.TeamVoteBaseData base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .common.RoleVoteStateList rolelist = 2;
  if (this->_internal_has_rolelist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rolelist(this),
        _Internal::rolelist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_VoteBegin)
  return target;
}

size_t ModuleTeam_Ntf_VoteBegin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_VoteBegin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.TeamVoteBaseData base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // .common.RoleVoteStateList rolelist = 2;
  if (this->_internal_has_rolelist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rolelist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_VoteBegin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_VoteBegin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_VoteBegin::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_VoteBegin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_VoteBegin *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_VoteBegin &>(from));
}


void ModuleTeam_Ntf_VoteBegin::MergeFrom(const ModuleTeam_Ntf_VoteBegin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_VoteBegin)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _internal_mutable_base()->::common::TeamVoteBaseData::MergeFrom(from._internal_base());
  }
  if (from._internal_has_rolelist()) {
    _internal_mutable_rolelist()->::common::RoleVoteStateList::MergeFrom(from._internal_rolelist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_VoteBegin::CopyFrom(const ModuleTeam_Ntf_VoteBegin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_VoteBegin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_VoteBegin::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_VoteBegin::InternalSwap(ModuleTeam_Ntf_VoteBegin* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_VoteBegin, rolelist_)
      + sizeof(ModuleTeam_Ntf_VoteBegin::rolelist_)
      - PROTOBUF_FIELD_OFFSET(ModuleTeam_Ntf_VoteBegin, base_)>(
          reinterpret_cast<char*>(&base_),
          reinterpret_cast<char*>(&other->base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_VoteBegin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[39]);
}

// ===================================================================

class ModuleTeam_Req_Vote::_Internal {
 public:
};

ModuleTeam_Req_Vote::ModuleTeam_Req_Vote(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_Vote)
}
ModuleTeam_Req_Vote::ModuleTeam_Req_Vote(const ModuleTeam_Req_Vote& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  agree_ = from.agree_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_Vote)
}

inline void ModuleTeam_Req_Vote::SharedCtor() {
agree_ = false;
}

ModuleTeam_Req_Vote::~ModuleTeam_Req_Vote() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Req_Vote)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Req_Vote::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Req_Vote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Req_Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Req_Vote)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agree_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Req_Vote::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool agree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Req_Vote::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Req_Vote)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool agree = 1;
  if (this->_internal_agree() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_agree(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Req_Vote)
  return target;
}

size_t ModuleTeam_Req_Vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Req_Vote)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool agree = 1;
  if (this->_internal_agree() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_Vote::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Req_Vote::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_Vote::GetClassData() const { return &_class_data_; }

void ModuleTeam_Req_Vote::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Req_Vote *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Req_Vote &>(from));
}


void ModuleTeam_Req_Vote::MergeFrom(const ModuleTeam_Req_Vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Req_Vote)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agree() != 0) {
    _internal_set_agree(from._internal_agree());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Req_Vote::CopyFrom(const ModuleTeam_Req_Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Req_Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Req_Vote::IsInitialized() const {
  return true;
}

void ModuleTeam_Req_Vote::InternalSwap(ModuleTeam_Req_Vote* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(agree_, other->agree_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_Vote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[40]);
}

// ===================================================================

class ModuleTeam_Ntf_VoteUpdate::_Internal {
 public:
  static const ::common::RoleVoteState& role(const ModuleTeam_Ntf_VoteUpdate* msg);
};

const ::common::RoleVoteState&
ModuleTeam_Ntf_VoteUpdate::_Internal::role(const ModuleTeam_Ntf_VoteUpdate* msg) {
  return *msg->role_;
}
void ModuleTeam_Ntf_VoteUpdate::clear_role() {
  if (GetArenaForAllocation() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
}
ModuleTeam_Ntf_VoteUpdate::ModuleTeam_Ntf_VoteUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_VoteUpdate)
}
ModuleTeam_Ntf_VoteUpdate::ModuleTeam_Ntf_VoteUpdate(const ModuleTeam_Ntf_VoteUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role()) {
    role_ = new ::common::RoleVoteState(*from.role_);
  } else {
    role_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_VoteUpdate)
}

inline void ModuleTeam_Ntf_VoteUpdate::SharedCtor() {
role_ = nullptr;
}

ModuleTeam_Ntf_VoteUpdate::~ModuleTeam_Ntf_VoteUpdate() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_VoteUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_VoteUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete role_;
}

void ModuleTeam_Ntf_VoteUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_VoteUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_VoteUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_VoteUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.RoleVoteState role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_VoteUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_VoteUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.RoleVoteState role = 1;
  if (this->_internal_has_role()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::role(this),
        _Internal::role(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_VoteUpdate)
  return target;
}

size_t ModuleTeam_Ntf_VoteUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_VoteUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.RoleVoteState role = 1;
  if (this->_internal_has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_VoteUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_VoteUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_VoteUpdate::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_VoteUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_VoteUpdate *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_VoteUpdate &>(from));
}


void ModuleTeam_Ntf_VoteUpdate::MergeFrom(const ModuleTeam_Ntf_VoteUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_VoteUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_role()) {
    _internal_mutable_role()->::common::RoleVoteState::MergeFrom(from._internal_role());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_VoteUpdate::CopyFrom(const ModuleTeam_Ntf_VoteUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_VoteUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_VoteUpdate::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_VoteUpdate::InternalSwap(ModuleTeam_Ntf_VoteUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(role_, other->role_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_VoteUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[41]);
}

// ===================================================================

class ModuleTeam_Ntf_VoteEnd::_Internal {
 public:
};

ModuleTeam_Ntf_VoteEnd::ModuleTeam_Ntf_VoteEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_VoteEnd)
}
ModuleTeam_Ntf_VoteEnd::ModuleTeam_Ntf_VoteEnd(const ModuleTeam_Ntf_VoteEnd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pass_ = from.pass_;
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_VoteEnd)
}

inline void ModuleTeam_Ntf_VoteEnd::SharedCtor() {
pass_ = false;
}

ModuleTeam_Ntf_VoteEnd::~ModuleTeam_Ntf_VoteEnd() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_VoteEnd)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_VoteEnd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModuleTeam_Ntf_VoteEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_VoteEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_VoteEnd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pass_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_VoteEnd::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool pass = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          pass_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_VoteEnd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_VoteEnd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool pass = 1;
  if (this->_internal_pass() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_pass(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_VoteEnd)
  return target;
}

size_t ModuleTeam_Ntf_VoteEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_VoteEnd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool pass = 1;
  if (this->_internal_pass() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_VoteEnd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_VoteEnd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_VoteEnd::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_VoteEnd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_VoteEnd *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_VoteEnd &>(from));
}


void ModuleTeam_Ntf_VoteEnd::MergeFrom(const ModuleTeam_Ntf_VoteEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_VoteEnd)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pass() != 0) {
    _internal_set_pass(from._internal_pass());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_VoteEnd::CopyFrom(const ModuleTeam_Ntf_VoteEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_VoteEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_VoteEnd::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_VoteEnd::InternalSwap(ModuleTeam_Ntf_VoteEnd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(pass_, other->pass_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_VoteEnd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[42]);
}

// ===================================================================

class ModuleTeam_Ntf_MountTeam::_Internal {
 public:
  static const ::common::ModuleTeam& team(const ModuleTeam_Ntf_MountTeam* msg);
};

const ::common::ModuleTeam&
ModuleTeam_Ntf_MountTeam::_Internal::team(const ModuleTeam_Ntf_MountTeam* msg) {
  return *msg->team_;
}
void ModuleTeam_Ntf_MountTeam::clear_team() {
  if (GetArenaForAllocation() == nullptr && team_ != nullptr) {
    delete team_;
  }
  team_ = nullptr;
}
ModuleTeam_Ntf_MountTeam::ModuleTeam_Ntf_MountTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Ntf_MountTeam)
}
ModuleTeam_Ntf_MountTeam::ModuleTeam_Ntf_MountTeam(const ModuleTeam_Ntf_MountTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_team()) {
    team_ = new ::common::ModuleTeam(*from.team_);
  } else {
    team_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Ntf_MountTeam)
}

inline void ModuleTeam_Ntf_MountTeam::SharedCtor() {
team_ = nullptr;
}

ModuleTeam_Ntf_MountTeam::~ModuleTeam_Ntf_MountTeam() {
  // @@protoc_insertion_point(destructor:client.ModuleTeam_Ntf_MountTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleTeam_Ntf_MountTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete team_;
}

void ModuleTeam_Ntf_MountTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleTeam_Ntf_MountTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:client.ModuleTeam_Ntf_MountTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && team_ != nullptr) {
    delete team_;
  }
  team_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleTeam_Ntf_MountTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.ModuleTeam team = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_team(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleTeam_Ntf_MountTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:client.ModuleTeam_Ntf_MountTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.ModuleTeam team = 1;
  if (this->_internal_has_team()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::team(this),
        _Internal::team(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client.ModuleTeam_Ntf_MountTeam)
  return target;
}

size_t ModuleTeam_Ntf_MountTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:client.ModuleTeam_Ntf_MountTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.ModuleTeam team = 1;
  if (this->_internal_has_team()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *team_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Ntf_MountTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleTeam_Ntf_MountTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Ntf_MountTeam::GetClassData() const { return &_class_data_; }

void ModuleTeam_Ntf_MountTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleTeam_Ntf_MountTeam *>(to)->MergeFrom(
      static_cast<const ModuleTeam_Ntf_MountTeam &>(from));
}


void ModuleTeam_Ntf_MountTeam::MergeFrom(const ModuleTeam_Ntf_MountTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:client.ModuleTeam_Ntf_MountTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_team()) {
    _internal_mutable_team()->::common::ModuleTeam::MergeFrom(from._internal_team());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleTeam_Ntf_MountTeam::CopyFrom(const ModuleTeam_Ntf_MountTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:client.ModuleTeam_Ntf_MountTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTeam_Ntf_MountTeam::IsInitialized() const {
  return true;
}

void ModuleTeam_Ntf_MountTeam::InternalSwap(ModuleTeam_Ntf_MountTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(team_, other->team_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Ntf_MountTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[43]);
}

// ===================================================================

class ModuleTeam_Req_FollowJumpMap::_Internal {
 public:
};

ModuleTeam_Req_FollowJumpMap::ModuleTeam_Req_FollowJumpMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:client.ModuleTeam_Req_FollowJumpMap)
}
ModuleTeam_Req_FollowJumpMap::ModuleTeam_Req_FollowJumpMap(const ModuleTeam_Req_FollowJumpMap& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:client.ModuleTeam_Req_FollowJumpMap)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleTeam_Req_FollowJumpMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleTeam_Req_FollowJumpMap::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModuleTeam_Req_FollowJumpMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_team_2eproto_getter, &descriptor_table_team_2eproto_once,
      file_level_metadata_team_2eproto[44]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace client
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_CreateTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_CreateTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_CreateTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_CreateTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_CreateTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_CreateTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_SelfJoinTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_SelfJoinTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_SelfJoinTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_UpdateTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_UpdateTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_UpdateTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_AddMember*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_AddMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_AddMember >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_RemoveMember*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_RemoveMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_RemoveMember >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_UpdateMember*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_UpdateMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_UpdateMember >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderFireMember*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderFireMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderFireMember >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderChangeTarget*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderChangeTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderChangeTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderCancelMatch*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderCancelMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderCancelMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderTogetherMember*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderTogetherMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderTogetherMember >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderAppoint*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderAppoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderAppoint >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderRefuseAllApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderRefuseAllApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderRefuseAllApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderAgreeAllApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderAgreeAllApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderAgreeAllApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderRefuseApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderRefuseApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderRefuseApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderAgreeApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderAgreeApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderAgreeApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_LeaderAddApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_LeaderAddApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_LeaderAddApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_LeaderRemoveApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_LeaderRemoveApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_LeaderRemoveApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_LeaderUpdateApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_LeaderUpdateApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_LeaderUpdateApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_InviteFriend*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_InviteFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_InviteFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_InviteFamily*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_InviteFamily >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_InviteFamily >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_InvitePlayer*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_InvitePlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_InvitePlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_AddInvited*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_AddInvited >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_AddInvited >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_AgreeInvited*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_AgreeInvited >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_AgreeInvited >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_RefuseInvited*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_RefuseInvited >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_RefuseInvited >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaveTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaveTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaveTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_LeaveTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_LeaveTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_LeaveTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_ApplyTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_ApplyTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_ApplyTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_FollowLeader*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_FollowLeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_FollowLeader >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_CancelFollow*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_CancelFollow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_CancelFollow >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_AreeTogether*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_AreeTogether >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_AreeTogether >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_RefuseTogether*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_RefuseTogether >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_RefuseTogether >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_ReplaceLeader*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_ReplaceLeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_ReplaceLeader >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_PersonChangeTarget*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_PersonChangeTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_PersonChangeTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_PersonCancelMatch*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_PersonCancelMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_PersonCancelMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_LeaderTogetherMember*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_LeaderTogetherMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_LeaderTogetherMember >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_LeaderEmptyApply*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_LeaderEmptyApply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_LeaderEmptyApply >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_TeamRecruitInfo*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_TeamRecruitInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_TeamRecruitInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_LeaderStartMatch*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_LeaderStartMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_LeaderStartMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_VoteBegin*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_VoteBegin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_VoteBegin >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_Vote*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_Vote >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_Vote >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_VoteUpdate*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_VoteUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_VoteUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_VoteEnd*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_VoteEnd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_VoteEnd >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Ntf_MountTeam*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Ntf_MountTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Ntf_MountTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::client::ModuleTeam_Req_FollowJumpMap*
Arena::CreateMaybeMessage< ::client::ModuleTeam_Req_FollowJumpMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::client::ModuleTeam_Req_FollowJumpMap >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
