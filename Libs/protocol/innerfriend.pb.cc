// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: innerfriend.proto

#include "innerfriend.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace inner {
PROTOBUF_CONSTEXPR InnerFriendList::InnerFriendList(
    ::_pbi::ConstantInitialized)
  : vecfriend_(){}
struct InnerFriendListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerFriendListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerFriendListDefaultTypeInternal() {}
  union {
    InnerFriendList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerFriendListDefaultTypeInternal _InnerFriendList_default_instance_;
PROTOBUF_CONSTEXPR InnerFriend::InnerFriend(
    ::_pbi::ConstantInitialized)
  : llroleid_(uint64_t{0u})
  , uiintimacy_(0u){}
struct InnerFriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerFriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerFriendDefaultTypeInternal() {}
  union {
    InnerFriend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerFriendDefaultTypeInternal _InnerFriend_default_instance_;
PROTOBUF_CONSTEXPR InnerFriendInfo::InnerFriendInfo(
    ::_pbi::ConstantInitialized)
  : strnick_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uicity_(0u)
  , uisex_(0u)
  , uilevel_(0u)
  , bfuncopen_(false){}
struct InnerFriendInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerFriendInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerFriendInfoDefaultTypeInternal() {}
  union {
    InnerFriendInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerFriendInfoDefaultTypeInternal _InnerFriendInfo_default_instance_;
PROTOBUF_CONSTEXPR InnerFriendGiftList::InnerFriendGiftList(
    ::_pbi::ConstantInitialized)
  : vecgifts_(){}
struct InnerFriendGiftListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerFriendGiftListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerFriendGiftListDefaultTypeInternal() {}
  union {
    InnerFriendGiftList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerFriendGiftListDefaultTypeInternal _InnerFriendGiftList_default_instance_;
PROTOBUF_CONSTEXPR InnerFriendGift::InnerFriendGift(
    ::_pbi::ConstantInitialized)
  : llrecver_(uint64_t{0u})
  , uiitemid_(0u)
  , uicount_(0u)
  , bbind_(false)
  , uiversionid_(0u){}
struct InnerFriendGiftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerFriendGiftDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerFriendGiftDefaultTypeInternal() {}
  union {
    InnerFriendGift _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerFriendGiftDefaultTypeInternal _InnerFriendGift_default_instance_;
}  // namespace inner
static ::_pb::Metadata file_level_metadata_innerfriend_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_innerfriend_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_innerfriend_2eproto = nullptr;

const uint32_t TableStruct_innerfriend_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendList, vecfriend_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriend, llroleid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriend, uiintimacy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendInfo, uicity_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendInfo, uisex_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendInfo, uilevel_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendInfo, strnick_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendInfo, bfuncopen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGiftList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGiftList, vecgifts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGift, llrecver_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGift, uiitemid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGift, uicount_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGift, bbind_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerFriendGift, uiversionid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::inner::InnerFriendList)},
  { 7, -1, -1, sizeof(::inner::InnerFriend)},
  { 15, -1, -1, sizeof(::inner::InnerFriendInfo)},
  { 26, -1, -1, sizeof(::inner::InnerFriendGiftList)},
  { 33, -1, -1, sizeof(::inner::InnerFriendGift)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::inner::_InnerFriendList_default_instance_._instance,
  &::inner::_InnerFriend_default_instance_._instance,
  &::inner::_InnerFriendInfo_default_instance_._instance,
  &::inner::_InnerFriendGiftList_default_instance_._instance,
  &::inner::_InnerFriendGift_default_instance_._instance,
};

const char descriptor_table_protodef_innerfriend_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021innerfriend.proto\022\005inner\"8\n\017InnerFrien"
  "dList\022%\n\tvecFriend\030\001 \003(\0132\022.inner.InnerFr"
  "iend\"3\n\013InnerFriend\022\020\n\010llRoleId\030\001 \001(\004\022\022\n"
  "\nuiIntimacy\030\002 \001(\r\"e\n\017InnerFriendInfo\022\016\n\006"
  "uiCity\030\001 \001(\r\022\r\n\005uiSex\030\002 \001(\r\022\017\n\007uiLevel\030\003"
  " \001(\r\022\017\n\007strNick\030\004 \001(\t\022\021\n\tbFuncOpen\030\005 \001(\010"
  "\"\?\n\023InnerFriendGiftList\022(\n\010vecGifts\030\001 \003("
  "\0132\026.inner.InnerFriendGift\"j\n\017InnerFriend"
  "Gift\022\020\n\010llRecver\030\001 \001(\004\022\020\n\010uiItemID\030\002 \001(\r"
  "\022\017\n\007uiCount\030\003 \001(\r\022\r\n\005bBind\030\004 \001(\010\022\023\n\013uiVe"
  "rsionId\030\005 \001(\rb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_innerfriend_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_innerfriend_2eproto = {
    false, false, 421, descriptor_table_protodef_innerfriend_2eproto,
    "innerfriend.proto",
    &descriptor_table_innerfriend_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_innerfriend_2eproto::offsets,
    file_level_metadata_innerfriend_2eproto, file_level_enum_descriptors_innerfriend_2eproto,
    file_level_service_descriptors_innerfriend_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_innerfriend_2eproto_getter() {
  return &descriptor_table_innerfriend_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_innerfriend_2eproto(&descriptor_table_innerfriend_2eproto);
namespace inner {

// ===================================================================

class InnerFriendList::_Internal {
 public:
};

InnerFriendList::InnerFriendList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecfriend_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerFriendList)
}
InnerFriendList::InnerFriendList(const InnerFriendList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecfriend_(from.vecfriend_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerFriendList)
}

inline void InnerFriendList::SharedCtor() {
}

InnerFriendList::~InnerFriendList() {
  // @@protoc_insertion_point(destructor:inner.InnerFriendList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerFriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerFriendList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerFriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerFriendList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecfriend_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerFriendList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .inner.InnerFriend vecFriend = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecfriend(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerFriendList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerFriendList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inner.InnerFriend vecFriend = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecfriend_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecfriend(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerFriendList)
  return target;
}

size_t InnerFriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerFriendList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .inner.InnerFriend vecFriend = 1;
  total_size += 1UL * this->_internal_vecfriend_size();
  for (const auto& msg : this->vecfriend_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerFriendList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerFriendList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerFriendList::GetClassData() const { return &_class_data_; }

void InnerFriendList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerFriendList *>(to)->MergeFrom(
      static_cast<const InnerFriendList &>(from));
}


void InnerFriendList::MergeFrom(const InnerFriendList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecfriend_.MergeFrom(from.vecfriend_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerFriendList::CopyFrom(const InnerFriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerFriendList::IsInitialized() const {
  return true;
}

void InnerFriendList::InternalSwap(InnerFriendList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecfriend_.InternalSwap(&other->vecfriend_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerFriendList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerfriend_2eproto_getter, &descriptor_table_innerfriend_2eproto_once,
      file_level_metadata_innerfriend_2eproto[0]);
}

// ===================================================================

class InnerFriend::_Internal {
 public:
};

InnerFriend::InnerFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerFriend)
}
InnerFriend::InnerFriend(const InnerFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&llroleid_, &from.llroleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiintimacy_) -
    reinterpret_cast<char*>(&llroleid_)) + sizeof(uiintimacy_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerFriend)
}

inline void InnerFriend::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llroleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiintimacy_) -
    reinterpret_cast<char*>(&llroleid_)) + sizeof(uiintimacy_));
}

InnerFriend::~InnerFriend() {
  // @@protoc_insertion_point(destructor:inner.InnerFriend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerFriend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&llroleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiintimacy_) -
      reinterpret_cast<char*>(&llroleid_)) + sizeof(uiintimacy_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerFriend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llRoleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llroleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiIntimacy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiintimacy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerFriend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerFriend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llRoleId = 1;
  if (this->_internal_llroleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_llroleid(), target);
  }

  // uint32 uiIntimacy = 2;
  if (this->_internal_uiintimacy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uiintimacy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerFriend)
  return target;
}

size_t InnerFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerFriend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llRoleId = 1;
  if (this->_internal_llroleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llroleid());
  }

  // uint32 uiIntimacy = 2;
  if (this->_internal_uiintimacy() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiintimacy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerFriend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerFriend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerFriend::GetClassData() const { return &_class_data_; }

void InnerFriend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerFriend *>(to)->MergeFrom(
      static_cast<const InnerFriend &>(from));
}


void InnerFriend::MergeFrom(const InnerFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerFriend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_llroleid() != 0) {
    _internal_set_llroleid(from._internal_llroleid());
  }
  if (from._internal_uiintimacy() != 0) {
    _internal_set_uiintimacy(from._internal_uiintimacy());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerFriend::CopyFrom(const InnerFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerFriend::IsInitialized() const {
  return true;
}

void InnerFriend::InternalSwap(InnerFriend* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerFriend, uiintimacy_)
      + sizeof(InnerFriend::uiintimacy_)
      - PROTOBUF_FIELD_OFFSET(InnerFriend, llroleid_)>(
          reinterpret_cast<char*>(&llroleid_),
          reinterpret_cast<char*>(&other->llroleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerFriend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerfriend_2eproto_getter, &descriptor_table_innerfriend_2eproto_once,
      file_level_metadata_innerfriend_2eproto[1]);
}

// ===================================================================

class InnerFriendInfo::_Internal {
 public:
};

InnerFriendInfo::InnerFriendInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerFriendInfo)
}
InnerFriendInfo::InnerFriendInfo(const InnerFriendInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strnick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strnick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strnick().empty()) {
    strnick_.Set(from._internal_strnick(), 
      GetArenaForAllocation());
  }
  ::memcpy(&uicity_, &from.uicity_,
    static_cast<size_t>(reinterpret_cast<char*>(&bfuncopen_) -
    reinterpret_cast<char*>(&uicity_)) + sizeof(bfuncopen_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerFriendInfo)
}

inline void InnerFriendInfo::SharedCtor() {
strnick_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strnick_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uicity_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bfuncopen_) -
    reinterpret_cast<char*>(&uicity_)) + sizeof(bfuncopen_));
}

InnerFriendInfo::~InnerFriendInfo() {
  // @@protoc_insertion_point(destructor:inner.InnerFriendInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerFriendInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strnick_.Destroy();
}

void InnerFriendInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerFriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerFriendInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strnick_.ClearToEmpty();
  ::memset(&uicity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bfuncopen_) -
      reinterpret_cast<char*>(&uicity_)) + sizeof(bfuncopen_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerFriendInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uiCity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uicity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiSex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uisex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uilevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strNick = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_strnick();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inner.InnerFriendInfo.strNick"));
        } else
          goto handle_unusual;
        continue;
      // bool bFuncOpen = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          bfuncopen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerFriendInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerFriendInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiCity = 1;
  if (this->_internal_uicity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uicity(), target);
  }

  // uint32 uiSex = 2;
  if (this->_internal_uisex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uisex(), target);
  }

  // uint32 uiLevel = 3;
  if (this->_internal_uilevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uilevel(), target);
  }

  // string strNick = 4;
  if (!this->_internal_strnick().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strnick().data(), static_cast<int>(this->_internal_strnick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inner.InnerFriendInfo.strNick");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strnick(), target);
  }

  // bool bFuncOpen = 5;
  if (this->_internal_bfuncopen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_bfuncopen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerFriendInfo)
  return target;
}

size_t InnerFriendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerFriendInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strNick = 4;
  if (!this->_internal_strnick().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strnick());
  }

  // uint32 uiCity = 1;
  if (this->_internal_uicity() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicity());
  }

  // uint32 uiSex = 2;
  if (this->_internal_uisex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uisex());
  }

  // uint32 uiLevel = 3;
  if (this->_internal_uilevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uilevel());
  }

  // bool bFuncOpen = 5;
  if (this->_internal_bfuncopen() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerFriendInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerFriendInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerFriendInfo::GetClassData() const { return &_class_data_; }

void InnerFriendInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerFriendInfo *>(to)->MergeFrom(
      static_cast<const InnerFriendInfo &>(from));
}


void InnerFriendInfo::MergeFrom(const InnerFriendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerFriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strnick().empty()) {
    _internal_set_strnick(from._internal_strnick());
  }
  if (from._internal_uicity() != 0) {
    _internal_set_uicity(from._internal_uicity());
  }
  if (from._internal_uisex() != 0) {
    _internal_set_uisex(from._internal_uisex());
  }
  if (from._internal_uilevel() != 0) {
    _internal_set_uilevel(from._internal_uilevel());
  }
  if (from._internal_bfuncopen() != 0) {
    _internal_set_bfuncopen(from._internal_bfuncopen());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerFriendInfo::CopyFrom(const InnerFriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerFriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerFriendInfo::IsInitialized() const {
  return true;
}

void InnerFriendInfo::InternalSwap(InnerFriendInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strnick_, lhs_arena,
      &other->strnick_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerFriendInfo, bfuncopen_)
      + sizeof(InnerFriendInfo::bfuncopen_)
      - PROTOBUF_FIELD_OFFSET(InnerFriendInfo, uicity_)>(
          reinterpret_cast<char*>(&uicity_),
          reinterpret_cast<char*>(&other->uicity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerFriendInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerfriend_2eproto_getter, &descriptor_table_innerfriend_2eproto_once,
      file_level_metadata_innerfriend_2eproto[2]);
}

// ===================================================================

class InnerFriendGiftList::_Internal {
 public:
};

InnerFriendGiftList::InnerFriendGiftList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecgifts_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerFriendGiftList)
}
InnerFriendGiftList::InnerFriendGiftList(const InnerFriendGiftList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecgifts_(from.vecgifts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerFriendGiftList)
}

inline void InnerFriendGiftList::SharedCtor() {
}

InnerFriendGiftList::~InnerFriendGiftList() {
  // @@protoc_insertion_point(destructor:inner.InnerFriendGiftList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerFriendGiftList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerFriendGiftList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerFriendGiftList::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerFriendGiftList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecgifts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerFriendGiftList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .inner.InnerFriendGift vecGifts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecgifts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerFriendGiftList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerFriendGiftList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inner.InnerFriendGift vecGifts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecgifts_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecgifts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerFriendGiftList)
  return target;
}

size_t InnerFriendGiftList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerFriendGiftList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .inner.InnerFriendGift vecGifts = 1;
  total_size += 1UL * this->_internal_vecgifts_size();
  for (const auto& msg : this->vecgifts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerFriendGiftList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerFriendGiftList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerFriendGiftList::GetClassData() const { return &_class_data_; }

void InnerFriendGiftList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerFriendGiftList *>(to)->MergeFrom(
      static_cast<const InnerFriendGiftList &>(from));
}


void InnerFriendGiftList::MergeFrom(const InnerFriendGiftList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerFriendGiftList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecgifts_.MergeFrom(from.vecgifts_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerFriendGiftList::CopyFrom(const InnerFriendGiftList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerFriendGiftList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerFriendGiftList::IsInitialized() const {
  return true;
}

void InnerFriendGiftList::InternalSwap(InnerFriendGiftList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecgifts_.InternalSwap(&other->vecgifts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerFriendGiftList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerfriend_2eproto_getter, &descriptor_table_innerfriend_2eproto_once,
      file_level_metadata_innerfriend_2eproto[3]);
}

// ===================================================================

class InnerFriendGift::_Internal {
 public:
};

InnerFriendGift::InnerFriendGift(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerFriendGift)
}
InnerFriendGift::InnerFriendGift(const InnerFriendGift& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&llrecver_, &from.llrecver_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiversionid_) -
    reinterpret_cast<char*>(&llrecver_)) + sizeof(uiversionid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerFriendGift)
}

inline void InnerFriendGift::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llrecver_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiversionid_) -
    reinterpret_cast<char*>(&llrecver_)) + sizeof(uiversionid_));
}

InnerFriendGift::~InnerFriendGift() {
  // @@protoc_insertion_point(destructor:inner.InnerFriendGift)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerFriendGift::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerFriendGift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerFriendGift::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerFriendGift)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&llrecver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiversionid_) -
      reinterpret_cast<char*>(&llrecver_)) + sizeof(uiversionid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerFriendGift::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 llRecver = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llrecver_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiItemID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uicount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bBind = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          bbind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiVersionId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uiversionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerFriendGift::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerFriendGift)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 llRecver = 1;
  if (this->_internal_llrecver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_llrecver(), target);
  }

  // uint32 uiItemID = 2;
  if (this->_internal_uiitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uiitemid(), target);
  }

  // uint32 uiCount = 3;
  if (this->_internal_uicount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uicount(), target);
  }

  // bool bBind = 4;
  if (this->_internal_bbind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_bbind(), target);
  }

  // uint32 uiVersionId = 5;
  if (this->_internal_uiversionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uiversionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerFriendGift)
  return target;
}

size_t InnerFriendGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerFriendGift)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 llRecver = 1;
  if (this->_internal_llrecver() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_llrecver());
  }

  // uint32 uiItemID = 2;
  if (this->_internal_uiitemid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiitemid());
  }

  // uint32 uiCount = 3;
  if (this->_internal_uicount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicount());
  }

  // bool bBind = 4;
  if (this->_internal_bbind() != 0) {
    total_size += 1 + 1;
  }

  // uint32 uiVersionId = 5;
  if (this->_internal_uiversionid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiversionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerFriendGift::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerFriendGift::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerFriendGift::GetClassData() const { return &_class_data_; }

void InnerFriendGift::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerFriendGift *>(to)->MergeFrom(
      static_cast<const InnerFriendGift &>(from));
}


void InnerFriendGift::MergeFrom(const InnerFriendGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerFriendGift)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_llrecver() != 0) {
    _internal_set_llrecver(from._internal_llrecver());
  }
  if (from._internal_uiitemid() != 0) {
    _internal_set_uiitemid(from._internal_uiitemid());
  }
  if (from._internal_uicount() != 0) {
    _internal_set_uicount(from._internal_uicount());
  }
  if (from._internal_bbind() != 0) {
    _internal_set_bbind(from._internal_bbind());
  }
  if (from._internal_uiversionid() != 0) {
    _internal_set_uiversionid(from._internal_uiversionid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerFriendGift::CopyFrom(const InnerFriendGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerFriendGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerFriendGift::IsInitialized() const {
  return true;
}

void InnerFriendGift::InternalSwap(InnerFriendGift* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerFriendGift, uiversionid_)
      + sizeof(InnerFriendGift::uiversionid_)
      - PROTOBUF_FIELD_OFFSET(InnerFriendGift, llrecver_)>(
          reinterpret_cast<char*>(&llrecver_),
          reinterpret_cast<char*>(&other->llrecver_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerFriendGift::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerfriend_2eproto_getter, &descriptor_table_innerfriend_2eproto_once,
      file_level_metadata_innerfriend_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::inner::InnerFriendList*
Arena::CreateMaybeMessage< ::inner::InnerFriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerFriendList >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerFriend*
Arena::CreateMaybeMessage< ::inner::InnerFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerFriendInfo*
Arena::CreateMaybeMessage< ::inner::InnerFriendInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerFriendInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerFriendGiftList*
Arena::CreateMaybeMessage< ::inner::InnerFriendGiftList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerFriendGiftList >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerFriendGift*
Arena::CreateMaybeMessage< ::inner::InnerFriendGift >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerFriendGift >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
