// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: innerteam.proto

#include "innerteam.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace inner {
PROTOBUF_CONSTEXPR InnerTeamList::InnerTeamList(
    ::_pbi::ConstantInitialized)
  : teams_(){}
struct InnerTeamListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeamListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeamListDefaultTypeInternal() {}
  union {
    InnerTeamList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeamListDefaultTypeInternal _InnerTeamList_default_instance_;
PROTOBUF_CONSTEXPR InnerTeam_MlistEntry_DoNotUse::InnerTeam_MlistEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct InnerTeam_MlistEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeam_MlistEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeam_MlistEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InnerTeam_MlistEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeam_MlistEntry_DoNotUseDefaultTypeInternal _InnerTeam_MlistEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR InnerTeam::InnerTeam(
    ::_pbi::ConstantInitialized)
  : mlist_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , base_(nullptr)
  , teamid_(uint64_t{0u})
  , leadid_(uint64_t{0u}){}
struct InnerTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeamDefaultTypeInternal() {}
  union {
    InnerTeam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeamDefaultTypeInternal _InnerTeam_default_instance_;
PROTOBUF_CONSTEXPR InnerTeamBase::InnerTeamBase(
    ::_pbi::ConstantInitialized)
  : targetid_(0u)
  , minlevel_(0u)
  , maxlevel_(0u)
  , matchtime_(0u)
  , midwayjoin_(false){}
struct InnerTeamBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeamBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeamBaseDefaultTypeInternal() {}
  union {
    InnerTeamBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeamBaseDefaultTypeInternal _InnerTeamBase_default_instance_;
PROTOBUF_CONSTEXPR InnerTeamMember::InnerTeamMember(
    ::_pbi::ConstantInitialized)
  : index_(0u)
  , state_(false)
  , follow_(false)
  , sceneid_(uint64_t{0u}){}
struct InnerTeamMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeamMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeamMemberDefaultTypeInternal() {}
  union {
    InnerTeamMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeamMemberDefaultTypeInternal _InnerTeamMember_default_instance_;
PROTOBUF_CONSTEXPR InnerTeamField::InnerTeamField(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct InnerTeamFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeamFieldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeamFieldDefaultTypeInternal() {}
  union {
    InnerTeamField _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeamFieldDefaultTypeInternal _InnerTeamField_default_instance_;
PROTOBUF_CONSTEXPR InnerTeamMemberField::InnerTeamMemberField(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct InnerTeamMemberFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InnerTeamMemberFieldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InnerTeamMemberFieldDefaultTypeInternal() {}
  union {
    InnerTeamMemberField _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InnerTeamMemberFieldDefaultTypeInternal _InnerTeamMemberField_default_instance_;
}  // namespace inner
static ::_pb::Metadata file_level_metadata_innerteam_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_innerteam_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_innerteam_2eproto = nullptr;

const uint32_t TableStruct_innerteam_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamList, teams_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam_MlistEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam_MlistEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam_MlistEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam_MlistEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam, teamid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam, leadid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam, base_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeam, mlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamBase, targetid_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamBase, minlevel_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamBase, maxlevel_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamBase, matchtime_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamBase, midwayjoin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMember, index_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMember, state_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMember, follow_),
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMember, sceneid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamField, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamField, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamField, field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMemberField, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMemberField, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inner::InnerTeamMemberField, field_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::inner::InnerTeamList)},
  { 7, 15, -1, sizeof(::inner::InnerTeam_MlistEntry_DoNotUse)},
  { 17, -1, -1, sizeof(::inner::InnerTeam)},
  { 27, -1, -1, sizeof(::inner::InnerTeamBase)},
  { 38, -1, -1, sizeof(::inner::InnerTeamMember)},
  { 48, -1, -1, sizeof(::inner::InnerTeamField)},
  { 62, -1, -1, sizeof(::inner::InnerTeamMemberField)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::inner::_InnerTeamList_default_instance_._instance,
  &::inner::_InnerTeam_MlistEntry_DoNotUse_default_instance_._instance,
  &::inner::_InnerTeam_default_instance_._instance,
  &::inner::_InnerTeamBase_default_instance_._instance,
  &::inner::_InnerTeamMember_default_instance_._instance,
  &::inner::_InnerTeamField_default_instance_._instance,
  &::inner::_InnerTeamMemberField_default_instance_._instance,
};

const char descriptor_table_protodef_innerteam_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017innerteam.proto\022\005inner\"0\n\rInnerTeamLis"
  "t\022\037\n\005teams\030\001 \003(\0132\020.inner.InnerTeam\"\301\001\n\tI"
  "nnerTeam\022\016\n\006teamId\030\001 \001(\004\022\016\n\006leadId\030\002 \001(\004"
  "\022\"\n\004base\030\003 \001(\0132\024.inner.InnerTeamBase\022*\n\005"
  "mlist\030\004 \003(\0132\033.inner.InnerTeam.MlistEntry"
  "\032D\n\nMlistEntry\022\013\n\003key\030\001 \001(\004\022%\n\005value\030\002 \001"
  "(\0132\026.inner.InnerTeamMember:\0028\001\"l\n\rInnerT"
  "eamBase\022\020\n\010targetId\030\001 \001(\r\022\020\n\010minLevel\030\002 "
  "\001(\r\022\020\n\010maxLevel\030\003 \001(\r\022\021\n\tmatchTime\030\004 \001(\r"
  "\022\022\n\nmidwayJoin\030\005 \001(\010\"P\n\017InnerTeamMember\022"
  "\r\n\005index\030\001 \001(\r\022\r\n\005state\030\002 \001(\010\022\016\n\006follow\030"
  "\003 \001(\010\022\017\n\007sceneId\030\004 \001(\004\"\244\001\n\016InnerTeamFiel"
  "d\022\022\n\010leaderId\030\001 \001(\004H\000\022\022\n\010targetId\030\002 \001(\rH"
  "\000\022\022\n\010minLevel\030\003 \001(\rH\000\022\022\n\010maxLevel\030\004 \001(\rH"
  "\000\022\023\n\tmatchTime\030\005 \001(\rH\000\022\016\n\004text\030\006 \001(\tH\000\022\024"
  "\n\nmidwayJoin\030\007 \001(\010H\000B\007\n\005field\"f\n\024InnerTe"
  "amMemberField\022\017\n\005index\030\001 \001(\rH\000\022\017\n\005state\030"
  "\002 \001(\010H\000\022\020\n\006follow\030\003 \001(\010H\000\022\021\n\007sceneId\030\004 \001"
  "(\004H\000B\007\n\005field*\267\001\n\022InnerTeamFieldType\022\017\n\013"
  "TFType_None\020\000\022\023\n\017TFType_LeaderId\020\001\022\023\n\017TF"
  "Type_TargetId\020\002\022\023\n\017TFType_MinLevel\020\003\022\023\n\017"
  "TFType_MaxLevel\020\004\022\024\n\020TFType_MatchTime\020\005\022"
  "\017\n\013TFType_Text\020\006\022\025\n\021TFType_MidwayJoin\020\007*"
  "{\n\030InnerTeamMemberFieldType\022\020\n\014TMFType_N"
  "one\020\000\022\021\n\rTMFType_Index\020\001\022\021\n\rTMFType_Stat"
  "e\020\002\022\022\n\016TMFType_Follow\020\003\022\023\n\017TMFType_Scene"
  "Id\020\004b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_innerteam_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_innerteam_2eproto = {
    false, false, 1052, descriptor_table_protodef_innerteam_2eproto,
    "innerteam.proto",
    &descriptor_table_innerteam_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_innerteam_2eproto::offsets,
    file_level_metadata_innerteam_2eproto, file_level_enum_descriptors_innerteam_2eproto,
    file_level_service_descriptors_innerteam_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_innerteam_2eproto_getter() {
  return &descriptor_table_innerteam_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_innerteam_2eproto(&descriptor_table_innerteam_2eproto);
namespace inner {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InnerTeamFieldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_innerteam_2eproto);
  return file_level_enum_descriptors_innerteam_2eproto[0];
}
bool InnerTeamFieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InnerTeamMemberFieldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_innerteam_2eproto);
  return file_level_enum_descriptors_innerteam_2eproto[1];
}
bool InnerTeamMemberFieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class InnerTeamList::_Internal {
 public:
};

InnerTeamList::InnerTeamList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  teams_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerTeamList)
}
InnerTeamList::InnerTeamList(const InnerTeamList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      teams_(from.teams_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner.InnerTeamList)
}

inline void InnerTeamList::SharedCtor() {
}

InnerTeamList::~InnerTeamList() {
  // @@protoc_insertion_point(destructor:inner.InnerTeamList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerTeamList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerTeamList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerTeamList::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerTeamList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  teams_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerTeamList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .inner.InnerTeam teams = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_teams(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerTeamList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerTeamList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inner.InnerTeam teams = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_teams_size()); i < n; i++) {
    const auto& repfield = this->_internal_teams(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerTeamList)
  return target;
}

size_t InnerTeamList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerTeamList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .inner.InnerTeam teams = 1;
  total_size += 1UL * this->_internal_teams_size();
  for (const auto& msg : this->teams_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerTeamList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerTeamList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerTeamList::GetClassData() const { return &_class_data_; }

void InnerTeamList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerTeamList *>(to)->MergeFrom(
      static_cast<const InnerTeamList &>(from));
}


void InnerTeamList::MergeFrom(const InnerTeamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerTeamList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  teams_.MergeFrom(from.teams_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerTeamList::CopyFrom(const InnerTeamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerTeamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerTeamList::IsInitialized() const {
  return true;
}

void InnerTeamList::InternalSwap(InnerTeamList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  teams_.InternalSwap(&other->teams_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerTeamList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[0]);
}

// ===================================================================

InnerTeam_MlistEntry_DoNotUse::InnerTeam_MlistEntry_DoNotUse() {}
InnerTeam_MlistEntry_DoNotUse::InnerTeam_MlistEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InnerTeam_MlistEntry_DoNotUse::MergeFrom(const InnerTeam_MlistEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InnerTeam_MlistEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[1]);
}

// ===================================================================

class InnerTeam::_Internal {
 public:
  static const ::inner::InnerTeamBase& base(const InnerTeam* msg);
};

const ::inner::InnerTeamBase&
InnerTeam::_Internal::base(const InnerTeam* msg) {
  return *msg->base_;
}
InnerTeam::InnerTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  mlist_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &InnerTeam::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inner.InnerTeam)
}
InnerTeam::InnerTeam(const InnerTeam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mlist_.MergeFrom(from.mlist_);
  if (from._internal_has_base()) {
    base_ = new ::inner::InnerTeamBase(*from.base_);
  } else {
    base_ = nullptr;
  }
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&leadid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(leadid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerTeam)
}

inline void InnerTeam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&base_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&leadid_) -
    reinterpret_cast<char*>(&base_)) + sizeof(leadid_));
}

InnerTeam::~InnerTeam() {
  // @@protoc_insertion_point(destructor:inner.InnerTeam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void InnerTeam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  mlist_.Destruct();
  if (this != internal_default_instance()) delete base_;
}

void InnerTeam::ArenaDtor(void* object) {
  InnerTeam* _this = reinterpret_cast< InnerTeam* >(object);
  _this->mlist_.Destruct();
}
void InnerTeam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerTeam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mlist_.Clear();
  if (GetArenaForAllocation() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leadid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(leadid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerTeam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 teamId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          teamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 leadId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          leadid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inner.InnerTeamBase base = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<uint64, .inner.InnerTeamMember> mlist = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&mlist_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerTeam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerTeam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_teamid(), target);
  }

  // uint64 leadId = 2;
  if (this->_internal_leadid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_leadid(), target);
  }

  // .inner.InnerTeamBase base = 3;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // map<uint64, .inner.InnerTeamMember> mlist = 4;
  if (!this->_internal_mlist().empty()) {
    using MapType = ::_pb::Map<uint64_t, ::inner::InnerTeamMember>;
    using WireHelper = InnerTeam_MlistEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_mlist();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerTeam)
  return target;
}

size_t InnerTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerTeam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, .inner.InnerTeamMember> mlist = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_mlist_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, ::inner::InnerTeamMember >::const_iterator
      it = this->_internal_mlist().begin();
      it != this->_internal_mlist().end(); ++it) {
    total_size += InnerTeam_MlistEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .inner.InnerTeamBase base = 3;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // uint64 teamId = 1;
  if (this->_internal_teamid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_teamid());
  }

  // uint64 leadId = 2;
  if (this->_internal_leadid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_leadid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerTeam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerTeam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerTeam::GetClassData() const { return &_class_data_; }

void InnerTeam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerTeam *>(to)->MergeFrom(
      static_cast<const InnerTeam &>(from));
}


void InnerTeam::MergeFrom(const InnerTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerTeam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  mlist_.MergeFrom(from.mlist_);
  if (from._internal_has_base()) {
    _internal_mutable_base()->::inner::InnerTeamBase::MergeFrom(from._internal_base());
  }
  if (from._internal_teamid() != 0) {
    _internal_set_teamid(from._internal_teamid());
  }
  if (from._internal_leadid() != 0) {
    _internal_set_leadid(from._internal_leadid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerTeam::CopyFrom(const InnerTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerTeam::IsInitialized() const {
  return true;
}

void InnerTeam::InternalSwap(InnerTeam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  mlist_.InternalSwap(&other->mlist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerTeam, leadid_)
      + sizeof(InnerTeam::leadid_)
      - PROTOBUF_FIELD_OFFSET(InnerTeam, base_)>(
          reinterpret_cast<char*>(&base_),
          reinterpret_cast<char*>(&other->base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerTeam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[2]);
}

// ===================================================================

class InnerTeamBase::_Internal {
 public:
};

InnerTeamBase::InnerTeamBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerTeamBase)
}
InnerTeamBase::InnerTeamBase(const InnerTeamBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&midwayjoin_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(midwayjoin_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerTeamBase)
}

inline void InnerTeamBase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&targetid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&midwayjoin_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(midwayjoin_));
}

InnerTeamBase::~InnerTeamBase() {
  // @@protoc_insertion_point(destructor:inner.InnerTeamBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerTeamBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerTeamBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerTeamBase::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerTeamBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&midwayjoin_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(midwayjoin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerTeamBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 targetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 minLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          minlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 maxLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          maxlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 matchTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          matchtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool midwayJoin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          midwayjoin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerTeamBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerTeamBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 targetId = 1;
  if (this->_internal_targetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_targetid(), target);
  }

  // uint32 minLevel = 2;
  if (this->_internal_minlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_minlevel(), target);
  }

  // uint32 maxLevel = 3;
  if (this->_internal_maxlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_maxlevel(), target);
  }

  // uint32 matchTime = 4;
  if (this->_internal_matchtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_matchtime(), target);
  }

  // bool midwayJoin = 5;
  if (this->_internal_midwayjoin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_midwayjoin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerTeamBase)
  return target;
}

size_t InnerTeamBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerTeamBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 targetId = 1;
  if (this->_internal_targetid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targetid());
  }

  // uint32 minLevel = 2;
  if (this->_internal_minlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_minlevel());
  }

  // uint32 maxLevel = 3;
  if (this->_internal_maxlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_maxlevel());
  }

  // uint32 matchTime = 4;
  if (this->_internal_matchtime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_matchtime());
  }

  // bool midwayJoin = 5;
  if (this->_internal_midwayjoin() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerTeamBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerTeamBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerTeamBase::GetClassData() const { return &_class_data_; }

void InnerTeamBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerTeamBase *>(to)->MergeFrom(
      static_cast<const InnerTeamBase &>(from));
}


void InnerTeamBase::MergeFrom(const InnerTeamBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerTeamBase)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_targetid() != 0) {
    _internal_set_targetid(from._internal_targetid());
  }
  if (from._internal_minlevel() != 0) {
    _internal_set_minlevel(from._internal_minlevel());
  }
  if (from._internal_maxlevel() != 0) {
    _internal_set_maxlevel(from._internal_maxlevel());
  }
  if (from._internal_matchtime() != 0) {
    _internal_set_matchtime(from._internal_matchtime());
  }
  if (from._internal_midwayjoin() != 0) {
    _internal_set_midwayjoin(from._internal_midwayjoin());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerTeamBase::CopyFrom(const InnerTeamBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerTeamBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerTeamBase::IsInitialized() const {
  return true;
}

void InnerTeamBase::InternalSwap(InnerTeamBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerTeamBase, midwayjoin_)
      + sizeof(InnerTeamBase::midwayjoin_)
      - PROTOBUF_FIELD_OFFSET(InnerTeamBase, targetid_)>(
          reinterpret_cast<char*>(&targetid_),
          reinterpret_cast<char*>(&other->targetid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerTeamBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[3]);
}

// ===================================================================

class InnerTeamMember::_Internal {
 public:
};

InnerTeamMember::InnerTeamMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerTeamMember)
}
InnerTeamMember::InnerTeamMember(const InnerTeamMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&sceneid_) -
    reinterpret_cast<char*>(&index_)) + sizeof(sceneid_));
  // @@protoc_insertion_point(copy_constructor:inner.InnerTeamMember)
}

inline void InnerTeamMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&sceneid_) -
    reinterpret_cast<char*>(&index_)) + sizeof(sceneid_));
}

InnerTeamMember::~InnerTeamMember() {
  // @@protoc_insertion_point(destructor:inner.InnerTeamMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerTeamMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InnerTeamMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerTeamMember::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerTeamMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sceneid_) -
      reinterpret_cast<char*>(&index_)) + sizeof(sceneid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerTeamMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool follow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          follow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 sceneId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          sceneid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerTeamMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerTeamMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_index(), target);
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_state(), target);
  }

  // bool follow = 3;
  if (this->_internal_follow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_follow(), target);
  }

  // uint64 sceneId = 4;
  if (this->_internal_sceneid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_sceneid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerTeamMember)
  return target;
}

size_t InnerTeamMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerTeamMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_index());
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 + 1;
  }

  // bool follow = 3;
  if (this->_internal_follow() != 0) {
    total_size += 1 + 1;
  }

  // uint64 sceneId = 4;
  if (this->_internal_sceneid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_sceneid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerTeamMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerTeamMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerTeamMember::GetClassData() const { return &_class_data_; }

void InnerTeamMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerTeamMember *>(to)->MergeFrom(
      static_cast<const InnerTeamMember &>(from));
}


void InnerTeamMember::MergeFrom(const InnerTeamMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerTeamMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  if (from._internal_follow() != 0) {
    _internal_set_follow(from._internal_follow());
  }
  if (from._internal_sceneid() != 0) {
    _internal_set_sceneid(from._internal_sceneid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerTeamMember::CopyFrom(const InnerTeamMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerTeamMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerTeamMember::IsInitialized() const {
  return true;
}

void InnerTeamMember::InternalSwap(InnerTeamMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InnerTeamMember, sceneid_)
      + sizeof(InnerTeamMember::sceneid_)
      - PROTOBUF_FIELD_OFFSET(InnerTeamMember, index_)>(
          reinterpret_cast<char*>(&index_),
          reinterpret_cast<char*>(&other->index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerTeamMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[4]);
}

// ===================================================================

class InnerTeamField::_Internal {
 public:
};

InnerTeamField::InnerTeamField(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerTeamField)
}
InnerTeamField::InnerTeamField(const InnerTeamField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_field();
  switch (from.field_case()) {
    case kLeaderId: {
      _internal_set_leaderid(from._internal_leaderid());
      break;
    }
    case kTargetId: {
      _internal_set_targetid(from._internal_targetid());
      break;
    }
    case kMinLevel: {
      _internal_set_minlevel(from._internal_minlevel());
      break;
    }
    case kMaxLevel: {
      _internal_set_maxlevel(from._internal_maxlevel());
      break;
    }
    case kMatchTime: {
      _internal_set_matchtime(from._internal_matchtime());
      break;
    }
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMidwayJoin: {
      _internal_set_midwayjoin(from._internal_midwayjoin());
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inner.InnerTeamField)
}

inline void InnerTeamField::SharedCtor() {
clear_has_field();
}

InnerTeamField::~InnerTeamField() {
  // @@protoc_insertion_point(destructor:inner.InnerTeamField)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerTeamField::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_field()) {
    clear_field();
  }
}

void InnerTeamField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerTeamField::clear_field() {
// @@protoc_insertion_point(one_of_clear_start:inner.InnerTeamField)
  switch (field_case()) {
    case kLeaderId: {
      // No need to clear
      break;
    }
    case kTargetId: {
      // No need to clear
      break;
    }
    case kMinLevel: {
      // No need to clear
      break;
    }
    case kMaxLevel: {
      // No need to clear
      break;
    }
    case kMatchTime: {
      // No need to clear
      break;
    }
    case kText: {
      field_.text_.Destroy();
      break;
    }
    case kMidwayJoin: {
      // No need to clear
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIELD_NOT_SET;
}


void InnerTeamField::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerTeamField)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_field();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerTeamField::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 leaderId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_leaderid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 targetId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_targetid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 minLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_minlevel(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 maxLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_maxlevel(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 matchTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _internal_set_matchtime(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inner.InnerTeamField.text"));
        } else
          goto handle_unusual;
        continue;
      // bool midwayJoin = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _internal_set_midwayjoin(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerTeamField::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerTeamField)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 leaderId = 1;
  if (_internal_has_leaderid()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_leaderid(), target);
  }

  // uint32 targetId = 2;
  if (_internal_has_targetid()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_targetid(), target);
  }

  // uint32 minLevel = 3;
  if (_internal_has_minlevel()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_minlevel(), target);
  }

  // uint32 maxLevel = 4;
  if (_internal_has_maxlevel()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_maxlevel(), target);
  }

  // uint32 matchTime = 5;
  if (_internal_has_matchtime()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_matchtime(), target);
  }

  // string text = 6;
  if (_internal_has_text()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inner.InnerTeamField.text");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_text(), target);
  }

  // bool midwayJoin = 7;
  if (_internal_has_midwayjoin()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_midwayjoin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerTeamField)
  return target;
}

size_t InnerTeamField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerTeamField)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (field_case()) {
    // uint64 leaderId = 1;
    case kLeaderId: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_leaderid());
      break;
    }
    // uint32 targetId = 2;
    case kTargetId: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targetid());
      break;
    }
    // uint32 minLevel = 3;
    case kMinLevel: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_minlevel());
      break;
    }
    // uint32 maxLevel = 4;
    case kMaxLevel: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_maxlevel());
      break;
    }
    // uint32 matchTime = 5;
    case kMatchTime: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_matchtime());
      break;
    }
    // string text = 6;
    case kText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
      break;
    }
    // bool midwayJoin = 7;
    case kMidwayJoin: {
      total_size += 1 + 1;
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerTeamField::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerTeamField::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerTeamField::GetClassData() const { return &_class_data_; }

void InnerTeamField::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerTeamField *>(to)->MergeFrom(
      static_cast<const InnerTeamField &>(from));
}


void InnerTeamField::MergeFrom(const InnerTeamField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerTeamField)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.field_case()) {
    case kLeaderId: {
      _internal_set_leaderid(from._internal_leaderid());
      break;
    }
    case kTargetId: {
      _internal_set_targetid(from._internal_targetid());
      break;
    }
    case kMinLevel: {
      _internal_set_minlevel(from._internal_minlevel());
      break;
    }
    case kMaxLevel: {
      _internal_set_maxlevel(from._internal_maxlevel());
      break;
    }
    case kMatchTime: {
      _internal_set_matchtime(from._internal_matchtime());
      break;
    }
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMidwayJoin: {
      _internal_set_midwayjoin(from._internal_midwayjoin());
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerTeamField::CopyFrom(const InnerTeamField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerTeamField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerTeamField::IsInitialized() const {
  return true;
}

void InnerTeamField::InternalSwap(InnerTeamField* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(field_, other->field_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerTeamField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[5]);
}

// ===================================================================

class InnerTeamMemberField::_Internal {
 public:
};

InnerTeamMemberField::InnerTeamMemberField(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:inner.InnerTeamMemberField)
}
InnerTeamMemberField::InnerTeamMemberField(const InnerTeamMemberField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_field();
  switch (from.field_case()) {
    case kIndex: {
      _internal_set_index(from._internal_index());
      break;
    }
    case kState: {
      _internal_set_state(from._internal_state());
      break;
    }
    case kFollow: {
      _internal_set_follow(from._internal_follow());
      break;
    }
    case kSceneId: {
      _internal_set_sceneid(from._internal_sceneid());
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inner.InnerTeamMemberField)
}

inline void InnerTeamMemberField::SharedCtor() {
clear_has_field();
}

InnerTeamMemberField::~InnerTeamMemberField() {
  // @@protoc_insertion_point(destructor:inner.InnerTeamMemberField)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InnerTeamMemberField::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_field()) {
    clear_field();
  }
}

void InnerTeamMemberField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InnerTeamMemberField::clear_field() {
// @@protoc_insertion_point(one_of_clear_start:inner.InnerTeamMemberField)
  switch (field_case()) {
    case kIndex: {
      // No need to clear
      break;
    }
    case kState: {
      // No need to clear
      break;
    }
    case kFollow: {
      // No need to clear
      break;
    }
    case kSceneId: {
      // No need to clear
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIELD_NOT_SET;
}


void InnerTeamMemberField::Clear() {
// @@protoc_insertion_point(message_clear_start:inner.InnerTeamMemberField)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_field();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InnerTeamMemberField::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_index(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_state(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool follow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_follow(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 sceneId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_sceneid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InnerTeamMemberField::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner.InnerTeamMemberField)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_index(), target);
  }

  // bool state = 2;
  if (_internal_has_state()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_state(), target);
  }

  // bool follow = 3;
  if (_internal_has_follow()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_follow(), target);
  }

  // uint64 sceneId = 4;
  if (_internal_has_sceneid()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_sceneid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner.InnerTeamMemberField)
  return target;
}

size_t InnerTeamMemberField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner.InnerTeamMemberField)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (field_case()) {
    // uint32 index = 1;
    case kIndex: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_index());
      break;
    }
    // bool state = 2;
    case kState: {
      total_size += 1 + 1;
      break;
    }
    // bool follow = 3;
    case kFollow: {
      total_size += 1 + 1;
      break;
    }
    // uint64 sceneId = 4;
    case kSceneId: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_sceneid());
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InnerTeamMemberField::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InnerTeamMemberField::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InnerTeamMemberField::GetClassData() const { return &_class_data_; }

void InnerTeamMemberField::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InnerTeamMemberField *>(to)->MergeFrom(
      static_cast<const InnerTeamMemberField &>(from));
}


void InnerTeamMemberField::MergeFrom(const InnerTeamMemberField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner.InnerTeamMemberField)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.field_case()) {
    case kIndex: {
      _internal_set_index(from._internal_index());
      break;
    }
    case kState: {
      _internal_set_state(from._internal_state());
      break;
    }
    case kFollow: {
      _internal_set_follow(from._internal_follow());
      break;
    }
    case kSceneId: {
      _internal_set_sceneid(from._internal_sceneid());
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InnerTeamMemberField::CopyFrom(const InnerTeamMemberField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner.InnerTeamMemberField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerTeamMemberField::IsInitialized() const {
  return true;
}

void InnerTeamMemberField::InternalSwap(InnerTeamMemberField* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(field_, other->field_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InnerTeamMemberField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_innerteam_2eproto_getter, &descriptor_table_innerteam_2eproto_once,
      file_level_metadata_innerteam_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace inner
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::inner::InnerTeamList*
Arena::CreateMaybeMessage< ::inner::InnerTeamList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeamList >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerTeam_MlistEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inner::InnerTeam_MlistEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeam_MlistEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerTeam*
Arena::CreateMaybeMessage< ::inner::InnerTeam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeam >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerTeamBase*
Arena::CreateMaybeMessage< ::inner::InnerTeamBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeamBase >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerTeamMember*
Arena::CreateMaybeMessage< ::inner::InnerTeamMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeamMember >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerTeamField*
Arena::CreateMaybeMessage< ::inner::InnerTeamField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeamField >(arena);
}
template<> PROTOBUF_NOINLINE ::inner::InnerTeamMemberField*
Arena::CreateMaybeMessage< ::inner::InnerTeamMemberField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inner::InnerTeamMemberField >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
